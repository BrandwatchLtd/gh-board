{"version":3,"sources":["webpack:///3.bundle.js","webpack:///./src/components/gantt-view.jsx","webpack:///./~/d3/d3.js","webpack:///./src/gantt-chart.js"],"names":["webpackJsonp",1047,"module","exports","__webpack_require__","_interopRequireDefault","obj","__esModule","default","_slicedToArray","sliceIterator","arr","i","_arr","_n","_d","_e","undefined","_s","_i","Symbol","iterator","next","done","push","value","length","err","Array","isArray","Object","TypeError","defineProperty","_react","_react2","_reactDom","_reactDom2","_underscore","_underscore2","_routeUtils","_issueStore","_issueStore2","_githubClient","_helpers","_loadable","_loadable2","_labelBadge","_labelBadge2","_d2","_d3","_ganttChart","_ganttChart2","filterByMilestoneAndKanbanColumn","cards","data","columns","columnCounts","add","card","issue","milestone","column","getCardColumn","columnName","name","msCounts","title","forEach","values","GanttChart","createClass","displayName","componentDidMount","this","renderChart","componentDidUpdate","changeTimeDomain","timeDomainString","format","chart","timeDomain","time","hour","offset","maxDate","day","tickFormat","redraw","tasks","_props","props","milestones","ganttWrapper","refs","now","Date","findDOMNode","innerHTML","map","createdAt","dueOn","state","closedIssues","openIssues","dueAt","status","getTime","segments","count","color","accountedForCount","each","_ref","startDate","endDate","taskName","taskStatus","milestone-status-overdue","milestone-status-open","milestone-status-closed","taskNames","_ref2","sort","a","b","taskTypes","selector","render","_props2","legend","label","createElement","key","extra","closedCount","className","ref","id","RepoKanbanShell","componentWillMount","startPolling","componentWillUnmount","stopPolling","renderLoaded","_ref3","_ref4","allMilestones","_getFilters$getState","getFilters","getState","milestoneTitles","_filterByMilestoneAnd","sortBy","_ref5","UNCATEGORIZED_NAME","result","exec","reverse","filter","indexOf","_getFilters$getState2","repoInfos","_repoInfos","_repoInfos$","repoOwner","repoName","allPromises","Promise","all","fetchMilestones","fetchIssues","promise",1048,"__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_RESULT__","d3_documentElement","node","ownerDocument","document","documentElement","d3_window","defaultView","d3_ascending","NaN","d3_number","x","d3_numeric","isNaN","d3_bisector","compare","left","lo","hi","arguments","mid","right","d3_zipLength","d","d3_range_integerScale","k","d3_class","ctor","properties","prototype","enumerable","d3_Map","_","create","d3_map_escape","d3_map_proto","d3_map_zero","d3_map_unescape","slice","d3_map_has","d3_map_remove","d3_map_keys","keys","d3_map_size","size","d3_map_empty","d3_Set","d3_identity","d3_rebind","target","source","method","apply","d3_vendorSymbol","object","charAt","toUpperCase","n","d3_vendorPrefixes","prefixName","d3_noop","d3_dispatch","d3_dispatch_event","dispatch","event","l","z","listeners","on","listenerByName","listener","get","concat","remove","set","d3_eventPreventDefault","d3","preventDefault","d3_eventSource","s","e","sourceEvent","d3_eventDispatch","of","thiz","argumentz","e1","e0","type","d3_selection","groups","d3_subclass","d3_selectionPrototype","d3_selection_selector","d3_select","d3_selection_selectorAll","d3_selectAll","d3_selection_attr","attrNull","removeAttribute","attrNullNS","removeAttributeNS","space","local","attrConstant","setAttribute","attrConstantNS","setAttributeNS","attrFunction","attrFunctionNS","ns","qualify","d3_collapse","trim","replace","d3_selection_classedRe","RegExp","requote","d3_selection_classes","split","d3_selection_classed","classedConstant","classedFunction","d3_selection_classedName","re","c","classList","getAttribute","lastIndex","test","d3_selection_style","priority","styleNull","style","removeProperty","styleConstant","setProperty","styleFunction","d3_selection_property","propertyNull","propertyConstant","propertyFunction","d3_selection_creator","namespace","namespaceURI","createElementNS","createNS","d3_selectionRemove","parent","parentNode","removeChild","d3_selection_dataNode","__data__","d3_selection_filter","d3_selectMatches","d3_selection_sortComparator","comparator","d3_selection_each","callback","j","m","group","d3_selection_enter","selection","d3_selection_enterPrototype","d3_selection_enterInsertBefore","enter","i0","j0","update","d3_selection_on","capture","onRemove","removeEventListener","$","onAdd","wrap","d3_array","call","addEventListener","removeAll","match","d3_selection_onListener","d3_selection_onFilters","d3_selection_onFilter","o","related","relatedTarget","compareDocumentPosition","d3_event_dragSuppress","d3_event_dragId","click","w","select","d3_event_dragSelect","suppressClick","off","setTimeout","d3_mousePoint","container","changedTouches","svg","ownerSVGElement","createSVGPoint","point","d3_mouse_bug44083","window","scrollX","scrollY","append","position","top","margin","padding","border","ctm","getScreenCTM","f","pageX","y","pageY","clientX","clientY","matrixTransform","inverse","rect","getBoundingClientRect","clientLeft","clientTop","d3_behavior_dragTouchId","identifier","d3_sgn","d3_cross2d","d3_acos","π","Math","acos","d3_asin","halfπ","asin","d3_sinh","exp","d3_cosh","d3_tanh","d3_haversin","sin","d3_color","d3_hsl","h","d3_rgb_parse","d3_rgb_hsl","d3_hsl_rgb","v","m1","m2","vv","round","d3_rgb","d3_hcl","d3_lab","d3_lab_hcl","d3_rgb_lab","rgb","r","g","d3_hcl_lab","cos","d3_radians","d3_lab_rgb","d3_lab_xyz","d3_lab_X","d3_lab_Y","d3_lab_Z","d3_xyz_rgb","atan2","d3_degrees","sqrt","d3_xyz_lab","pow","d3_rgbNumber","d3_rgbString","d3_rgb_hex","max","toString","min","hsl","toLowerCase","parseFloat","d3_rgb_parseNumber","d3_rgb_names","parseInt","d3_rgb_xyz","d3_functor","d3_xhrType","response","url","mimeType","d3_xhr","respond","request","d3_xhrHasResponse","xhr","error","load","headers","XMLHttpRequest","responseType","XDomainRequest","onload","onerror","onreadystatechange","readyState","onprogress","progress","header","send","open","setRequestHeader","overrideMimeType","beforesend","abort","rebind","d3_xhr_fixCallback","responseText","d3_timer","delay","then","timer","t","d3_timer_queueTail","d3_timer_queueHead","d3_timer_interval","d3_timer_timeout","clearTimeout","d3_timer_frame","d3_timer_step","d3_timer_mark","d3_timer_sweep","isFinite","t0","t1","Infinity","d3_format_precision","p","ceil","log","LN10","d3_formatPrefix","abs","scale","symbol","d3_locale_numberFormat","locale","locale_decimal","decimal","locale_thousands","thousands","locale_grouping","grouping","locale_currency","currency","formatGroup","width","substring","join","specifier","d3_format_re","fill","align","sign","zfill","comma","precision","prefix","suffix","integer","exponent","d3_format_types","d3_format_typeDefault","zcomma","fullSuffix","negative","unit","formatPrefix","before","after","lastIndexOf","d3_date_utc","UTC","d3_time_interval","step","number","date","d0","d1","d3_date","range","dt","times","range_utc","utc","floor","d3_time_interval_utc","d3_locale_timeFormat","d3_time_format","template","string","charCodeAt","d3_time_formatPads","d3_time_formats","parse","H","M","S","L","Z","d3_time_parse","localZ","setFullYear","W","getDay","U","setHours","d3_time_parsers","d3_time_parseWeekdayAbbrev","d3_time_dayAbbrevRe","d3_time_dayAbbrevLookup","d3_time_parseWeekday","d3_time_dayRe","d3_time_dayLookup","d3_time_parseMonthAbbrev","d3_time_monthAbbrevRe","d3_time_monthAbbrevLookup","d3_time_parseMonth","d3_time_monthRe","d3_time_monthLookup","d3_time_parseLocaleFull","d3_time_parseLocaleDate","d3_time_parseLocaleTime","X","d3_time_parseAmPm","d3_time_periodLookup","locale_dateTime","dateTime","locale_date","locale_time","locale_periods","periods","locale_days","days","locale_shortDays","shortDays","locale_months","months","locale_shortMonths","shortMonths","multi","d3_time_formatMulti","d3_time_formatRe","d3_time_formatLookup","A","getMonth","B","d3_time_formatPad","getDate","getHours","I","d3_time","dayOfYear","getMilliseconds","getMinutes","getSeconds","sundayOfYear","mondayOfYear","getFullYear","Y","d3_time_zone","%","d3_time_parseDay","d3_time_parseHour24","d3_time_parseDayOfYear","d3_time_parseMilliseconds","d3_time_parseMonthNumber","d3_time_parseMinutes","d3_time_parseSeconds","d3_time_parseWeekNumberSunday","d3_time_parseWeekdayNumber","d3_time_parseWeekNumberMonday","d3_time_parseYear","d3_time_parseFullYear","d3_time_parseZone","d3_time_parseLiteralPercent","names","d3_time_numberRe","d3_time_expandYear","getTimezoneOffset","zs","zh","zm","d3_time_percentRe","formats","d3_adder","d3_adderSum","bv","av","d3_geo_streamGeometry","geometry","d3_geo_streamGeometryType","hasOwnProperty","d3_geo_streamLine","coordinates","closed","coordinate","lineStart","lineEnd","d3_geo_streamPolygon","polygonStart","polygonEnd","d3_geo_areaRingStart","nextPoint","λ","φ","dλ","λ0","sdλ","adλ","cosφ","sinφ","sinφ0","u","cosφ0","d3_geo_areaRingSum","λ00","φ00","d3_geo_area","d3_geo_cartesian","spherical","d3_geo_cartesianDot","d3_geo_cartesianCross","d3_geo_cartesianAdd","d3_geo_cartesianScale","vector","d3_geo_cartesianNormalize","d3_geo_spherical","cartesian","d3_geo_sphericalEqual","ε","d3_geo_centroidPoint","d3_geo_centroidPointXYZ","d3_geo_centroidW0","d3_geo_centroidX0","d3_geo_centroidY0","d3_geo_centroidZ0","d3_geo_centroidLineStart","y0","z0","x0","d3_geo_centroidW1","d3_geo_centroidX1","d3_geo_centroidY1","d3_geo_centroidZ1","d3_geo_centroid","d3_geo_centroidLineEnd","d3_geo_centroidRingStart","cx","cy","cz","d3_geo_centroidX2","d3_geo_centroidY2","d3_geo_centroidZ2","d3_geo_compose","compose","invert","d3_true","d3_geo_clipPolygon","clipStartInside","interpolate","subject","clip","segment","p0","p1","d3_geo_clipPolygonIntersection","d3_geo_clipPolygonLinkCircular","entry","points","start","current","isSubject","array","other","d3_geo_clip","pointVisible","clipLine","clipStart","rotate","pointLine","line","pointRing","ring","ringListener","ringStart","ringEnd","clean","ringSegments","buffer","pop","polygon","polygonStarted","shift","d3_geo_clipSegmentLength1","rotatedClipStart","merge","d3_geo_pointInPolygon","d3_geo_clipSort","sphere","d3_geo_clipBufferListener","lines","rejoin","d3_geo_clipAntimeridianLine","φ0","sλ0","λ1","φ1","sλ1","d3_geo_clipAntimeridianIntersect","cosφ1","sinλ0_λ1","atan","d3_geo_clipAntimeridianInterpolate","from","to","direction","meridian","parallel","meridianNormal","polarAngle","winding","reset","point0","antimeridian","τ","arc","intersection","φarc","d3_geo_clipCircle","radius","visible","cr","c0","v0","v00","point2","point1","smallRadius","code","intersect","notHemisphere","two","pa","pb","n1","n2","n2n2","n1n2","determinant","c1","c2","n1xn2","uu","t2","q","δλ","polar","q1","d3_geo_circleInterpolate","d3_geom_clipLine","x1","y1","ax","ay","bx","by","dx","dy","d3_geo_clipExtent","corner","comparePoints","ca","cb","insidePolygon","wn","a1","linePoint","first","v_","x_","y_","x__","y__","v__","bufferListener","d3_geo_clipExtentMAX","listener_","inside","d3_geo_conic","projectAt","d3_geo_projectionMutator","parallels","d3_geo_conicEqualArea","forward","ρ","C","ρ0","ρ0_y","d3_geo_pathAreaRingStart","d3_geo_pathAreaPolygon","x00","y00","d3_geo_pathArea","d3_geo_pathBoundsPoint","d3_geo_pathBoundsX0","d3_geo_pathBoundsX1","d3_geo_pathBoundsY0","d3_geo_pathBoundsY1","d3_geo_pathBuffer","pointCircle","pointLineStart","stream","lineEndPolygon","d3_geo_pathBufferCircle","pointRadius","d3_geo_pathCentroidPoint","d3_geo_pathCentroidLineStart","d3_geo_pathCentroid","d3_geo_pathCentroidLineEnd","d3_geo_pathCentroidRingStart","d3_geo_pathContext","context","moveTo","lineTo","closePath","d3_geo_resample","project","resample","maxDepth","resampleRecursive","resampleNone","d3_geo_transformPoint","resampleLineTo","a0","b0","ringPoint","a00","b00","c00","b1","depth","d2","δ2","φ2","λ2","x2","y2","dx2","dy2","dz","cosMinDistance","d3_geo_pathProjectStream","d3_geo_projectionRadians","d3_geo_transform","d3_geo_projection","projection","projectRotate","δx","δy","d3_geo_rotation","δφ","δγ","center","invalidate","valid","projectResample","preclip","d3_geo_clipAntimeridian","postclip","clipAngle","clipExtent","output","translate","d3_geo_equirectangular","d3_geo_identityRotation","d3_geo_rotationλ","d3_geo_rotationφγ","d3_geo_forwardRotationλ","rotation","cosδφ","sinδφ","cosδγ","sinδγ","sr","d3_geo_circleAngle","angle","PI","d3_geo_graticuleX","d3_geo_graticuleY","d3_source","d3_target","d3_geo_interpolate","cy0","sy0","cy1","sy1","kx0","ky0","kx1","ky1","distance","d3_geo_lengthLineStart","cosΔλ","d3_geo_lengthSum","d3_geo_length","d3_geo_azimuthal","azimuthal","cosλ","sinc","cosc","d3_geo_conicConformal","F","tan","d3_geo_mercator","d3_geo_conicEquidistant","G","d3_geo_mercatorProjection","clipAuto","d3_geo_transverseMercator","d3_geom_pointX","d3_geom_pointY","d3_geom_hullUpper","hull","hs","d3_geom_hullOrder","d3_geom_polygonInside","d3_geom_polygonIntersect","x3","x21","x43","y3","y21","y43","ua","d3_geom_polygonClosed","d3_geom_voronoiBeach","d3_geom_voronoiRedBlackNode","edge","site","circle","d3_geom_voronoiCreateBeach","beach","d3_geom_voronoiBeachPool","d3_geom_voronoiDetachBeach","d3_geom_voronoiDetachCircle","d3_geom_voronoiBeaches","d3_geom_voronoiRemoveBeach","vertex","previous","P","N","disappearing","lArc","unshift","rArc","iArc","nArcs","d3_geom_voronoiSetEdgeEnd","d3_geom_voronoiCreateEdge","d3_geom_voronoiAttachCircle","d3_geom_voronoiAddBeach","dxl","dxr","directrix","d3_geom_voronoiLeftBreakPoint","d3_geom_voronoiRightBreakPoint","R","newArc","insert","lSite","rSite","hb","hc","rfocx","rfocy","pby2","lfocx","lfocy","plby2","hl","aby2","d3_geom_voronoiCell","edges","d3_geom_voronoiCloseCells","extent","cell","iHalfEdge","halfEdges","nHalfEdges","end","cells","d3_geom_voronoiCells","iCell","prepare","splice","d3_geom_voronoiHalfEdge","d3_geom_voronoiCreateBorderEdge","d3_geom_voronoiHalfEdgeOrder","d3_geom_voronoiCircle","cSite","ε2","ha","d3_geom_voronoiCirclePool","d3_geom_voronoiCircles","d3_geom_voronoiFirstCircle","d3_geom_voronoiClipEdges","d3_geom_voronoiEdges","d3_geom_voronoiConnectEdge","vb","fm","fb","va","lx","ly","rx","ry","fx","fy","d3_geom_voronoiEdge","d3_geom_voronoiRedBlackTree","d3_geom_voronoiRedBlackRotateLeft","tree","d3_geom_voronoiRedBlackRotateRight","d3_geom_voronoiRedBlackFirst","d3_geom_voronoi","sites","bbox","d3_geom_voronoiVertexOrder","diagram","d3_geom_voronoiTriangleArea","d3_geom_quadtreeCompatX","d3_geom_quadtreeCompatY","d3_geom_quadtreeNode","leaf","nodes","d3_geom_quadtreeVisit","sx","sy","children","d3_geom_quadtreeFind","root","closestPoint","minDistance2","find","distance2","xm","ym","below","d3_interpolateRgb","ar","ag","ab","br","bg","bb","d3_interpolateObject","d3_interpolate","d3_interpolateNumber","d3_interpolateString","am","bm","bs","bi","d3_interpolate_numberA","d3_interpolate_numberB","index","interpolators","d3_interpolateArray","na","nb","n0","d3_ease_clamp","d3_ease_reverse","d3_ease_reflect","d3_ease_quad","d3_ease_cubic","d3_ease_cubicInOut","t3","d3_ease_poly","d3_ease_sin","d3_ease_exp","d3_ease_circle","d3_ease_elastic","d3_ease_back","d3_ease_bounce","d3_interpolateHcl","hcl","ah","ac","al","bh","bc","bl","d3_interpolateHsl","as","d3_interpolateLab","lab","aa","ba","d3_interpolateRound","d3_transform","r0","r1","kx","d3_transformNormalize","kz","d3_transformDot","ky","d3_transformCombine","skew","d3_interpolateTransformPop","d3_interpolateTranslate","ta","tb","d3_interpolateRotate","ra","rb","d3_interpolateSkew","wa","wb","d3_interpolateScale","ka","kb","d3_interpolateTransform","transform","d3_uninterpolateNumber","d3_uninterpolateClamp","d3_layout_bundlePath","link","lca","d3_layout_bundleLeastCommonAncestor","d3_layout_bundleAncestors","ancestors","aNodes","bNodes","aNode","bNode","sharedNode","d3_layout_forceDragstart","fixed","d3_layout_forceDragend","d3_layout_forceMouseover","px","py","d3_layout_forceMouseout","d3_layout_forceAccumulate","quad","alpha","charges","charge","random","pointCharge","d3_layout_hierarchyRebind","hierarchy","links","d3_layout_hierarchyLinks","d3_layout_hierarchyVisitBefore","d3_layout_hierarchyVisitAfter","nodes2","d3_layout_hierarchyChildren","d3_layout_hierarchyValue","d3_layout_hierarchySort","child","d3_layout_stackX","d3_layout_stackY","d3_layout_stackOut","d3_layout_stackOrderDefault","d3_layout_stackOffsetZero","d3_layout_stackMaxIndex","d3_layout_stackReduceSum","reduce","d3_layout_stackSum","d3_layout_histogramBinSturges","d3_layout_histogramBinFixed","LN2","d3_layout_histogramRange","d3_layout_packSort","d3_layout_packInsert","_pack_next","_pack_prev","d3_layout_packSplice","d3_layout_packIntersects","dr","d3_layout_packSiblings","bound","xMin","xMax","yMin","yMax","d3_layout_packLink","d3_layout_packPlace","isect","s1","s2","d3_layout_packUnlink","d3_layout_packTransform","db","da","dc","d3_layout_treeSeparation","d3_layout_treeLeft","d3_layout_treeRight","d3_layout_treeMove","wm","wp","change","d3_layout_treeShift","d3_layout_treeAncestor","vim","ancestor","d3_layout_clusterY","d3_layout_clusterX","d3_layout_clusterLeft","d3_layout_clusterRight","d3_layout_treemapPadNull","d3_layout_treemapPad","d3_scaleExtent","domain","stop","d3_scaleRange","rangeExtent","d3_scale_bilinear","uninterpolate","d3_scale_nice","nice","i1","d3_scale_niceStep","d3_scale_niceIdentity","d3_scale_polylinear","bisect","d3_scale_linear","clamp","rescale","linear","input","Number","rangeRound","ticks","d3_scale_linearTicks","d3_scale_linearTickFormat","d3_scale_linearNice","copy","d3_scale_linearRebind","d3_scale_linearTickRange","span","d3_scale_linearPrecision","d3_scale_linearFormatPrecision","d3_scale_linearFormatSignificant","d3_scale_log","base","positive","niced","d3_scale_logNiceNegative","d3_scale_logFormat","d3_scale_pow","powp","d3_scale_powPow","powb","d3_scale_ordinal","ranger","steps","rangeBand","xi","has","rangePoints","rangeRoundPoints","rangeBands","outerPadding","rangeRoundBands","d3_scale_quantile","thresholds","quantile","quantiles","invertExtent","d3_scale_quantize","d3_scale_threshold","d3_scale_identity","identity","d3_zero","d3_svg_arcInnerRadius","innerRadius","d3_svg_arcOuterRadius","outerRadius","d3_svg_arcStartAngle","startAngle","d3_svg_arcEndAngle","endAngle","d3_svg_arcPadAngle","padAngle","d3_svg_arcSweep","d3_svg_arcCornerTangents","rc","cw","x01","y01","ox","oy","D","cx0","cx1","dx0","dy0","dx1","dy1","d3_svg_line","tension","defined","d3_svg_lineLinear","interpolateKey","d3_svg_lineInterpolators","d3_svg_lineLinearClosed","d3_svg_lineStep","path","d3_svg_lineStepBefore","d3_svg_lineStepAfter","d3_svg_lineCardinalOpen","d3_svg_lineHermite","d3_svg_lineCardinalTangents","d3_svg_lineCardinalClosed","d3_svg_lineCardinal","tangents","pi","lp","p2","d3_svg_lineBasis","d3_svg_lineDot4","d3_svg_lineBasisBezier3","d3_svg_lineBasisBezier","d3_svg_lineBasisOpen","d3_svg_lineBasisClosed","d3_svg_lineBundle","d3_svg_lineBasisBezier1","d3_svg_lineBasisBezier2","d3_svg_lineSlope","d3_svg_lineFiniteDifferences","d3_svg_lineMonotoneTangents","d3_svg_lineMonotone","d3_svg_lineRadial","d3_svg_area","area","points1","interpolateReverse","points0","fx0","fy0","fx1","fy1","d3_svg_chordRadius","d3_svg_diagonalProjection","d3_svg_diagonalRadialProjection","d3_svg_symbolSize","d3_svg_symbolType","d3_svg_symbolCircle","d3_selection_interruptNS","lock","activeId","active","interrupt","d3_transition","d3_transitionPrototype","d3_transition_tween","tween","d3_transition_text","textContent","d3_transitionNamespace","d3_transitionNode","inherit","schedule","elapsed","transition","cancelId","cancel","tick","tweens","ease","duration","d3_svg_axisX","attr","d3_svg_axisY","d3_time_formatIsoNative","toISOString","d3_time_scale","methods","tickMethod","d3_time_scaleSteps","year","d3_time_scaleMilliseconds","d3_time_scaleDate","interval","skip","skipped","d3_json","JSON","d3_html","d3_document","createRange","selectNode","body","createContextualFragment","version","d3_arraySlice","list","childNodes","nodeType","d3_element_prototype","Element","d3_element_setAttribute","d3_element_setAttributeNS","d3_style_prototype","CSSStyleDeclaration","d3_style_setProperty","ascending","descending","sum","mean","median","numbers","variance","deviation","d3_bisect","bisectLeft","bisectRight","bisector","shuffle","permute","indexes","permutes","pairs","zip","zips","transpose","matrix","entries","arrays","merged","Error","empty","nest","mapType","rollup","sortValues","keyValue","setter","valuesByKey","sortKey","sortKeys","keyMap","order","behavior","d3_requote_re","__proto__","property","querySelector","querySelectorAll","d3_selectMatcher","matches","Sizzle","matchesSelector","subgroup","subnode","subgroups","selectAll","d3_nsPrefix","xhtml","xlink","xml","xmlns","getAttributeNS","classed","contains","getComputedStyle","getPropertyValue","text","html","appendChild","insertBefore","bind","groupData","nodeData","updateNodes","enterNodes","exitNodes","nodeByKeyValue","keyValues","exit","datum","nextSibling","args","upgroup","mouseenter","mouseleave","mouse","navigator","userAgent","touch","touches","drag","mousedown","touchstart","dragstart","move","moved","position1","dragId","position0","dragged","dragOffset","ended","dragSubject","dragName","dragRestore","that","origin","τε","SQRT2","ρ2","ρ4","interpolateZoom","ux0","uy0","w0","ux1","uy1","w1","coshr0","zoom","mousedowned","d3_behavior_zoomWheel","mousewheeled","dblclicked","touchstarted","location","view","scaleTo","scaleExtent","translateTo","zoomTo","__chart__","center0","zoomstarted","zooming","zoomed","zoomended","location0","mousemove","mouseup","d3_selection_interrupt","relocate","scale0","locations0","started","touchmove","touchend","targets","changed","touchtime","distance0","l0","l1","distance1","scale1","zoomName","mousewheelTimer","translate0","d3_behavior_zoomDelta","shiftKey","d3_behavior_zoomInfinity","deltaY","deltaMode","wheelDelta","detail","view1","d3_transitionInheritId","d3_hslPrototype","brighter","darker","d3_hclPrototype","d3_lab_K","d3_labPrototype","d3_rgbPrototype","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","functor","dsv","delimiter","row","typedResponse","formatRow","formatValue","reFormat","delimiterCode","parseRows","Function","stringify","token","EOF","eol","EOL","rows","formatRows","fieldSet","fields","field","csv","tsv","flush","d3_formatPrefixes","String","fromCharCode","toPrecision","toExponential","toFixed","getUTCDate","getUTCDay","getUTCFullYear","getUTCHours","getUTCMilliseconds","getUTCMinutes","getUTCMonth","getUTCSeconds","valueOf","setDate","d3_time_prototype","setUTCDate","setDay","setUTCDay","setUTCFullYear","setUTCHours","setMilliseconds","setUTCMilliseconds","setMinutes","setUTCMinutes","setMonth","setUTCMonth","setSeconds","setUTCSeconds","setTime","years","week","sunday","weeks","weekOfYear","-","0","numberFormat","timeFormat","d3_locale_enUS","geo","d3_adderTemp","d3_geo_streamObjectType","Feature","feature","FeatureCollection","features","Sphere","Point","MultiPoint","LineString","MultiLineString","Polygon","MultiPolygon","GeometryCollection","geometries","d3_geo_areaSum","bounds","ranges","normal","equatorial","inflection","λ_","λi","φi","dλSum","λ__","φ__","compareRanges","withinRange","best","centroid","conicEqualArea","raw","albers","albersUsa","lower48Point","alaskaPoint","hawaiiPoint","lower48","alaska","hawaii","pointStream","lower48Stream","alaskaStream","hawaiiStream","d3_geo_pathAreaSum","d3_geo_pathBounds","contextStream","cacheStream","projectStream","projectionMutator","equirectangular","Δλ","sinΔλ","sinφ1","graticule","X0","DX","X1","Y0","DY","Y1","outline","majorExtent","minorExtent","majorStep","minorStep","greatArc","source_","target_","d3_geo_azimuthalEqualArea","cosλcosφ","azimuthalEqualArea","d3_geo_azimuthalEquidistant","azimuthalEquidistant","conicConformal","conicEquidistant","d3_geo_gnomonic","gnomonic","mercator","d3_geo_orthographic","orthographic","d3_geo_stereographic","stereographic","transverseMercator","geom","vertices","flippedPoints","upper","lower","skipLeft","skipRight","d3_geom_polygonPrototype","grandpa","uncle","sibling","voronoi","polygons","d3_geom_voronoiClipExtent","triangles","s0","delaunay","quadtree","nx","ny","insertChild","nPoint","xs","ys","x1_","y1_","x2_","y2_","compat","visit","interpolateRgb","interpolateObject","interpolateNumber","interpolateString","interpolateArray","d3_ease_default","d3_ease","poly","cubic","elastic","back","bounce","d3_ease_mode","in","out","in-out","out-in","interpolateHcl","interpolateHsl","interpolateLab","interpolateRound","baseVal","consolidate","d3_transformIdentity","interpolateTransform","layout","bundle","paths","chord","relayout","groupSums","groupIndex","subgroupIndex","chords","sortGroups","sortSubgroups","di","dj","subindex","sortChords","resort","force","repulse","dw","dn","theta2","chargeDistance2","dragmove","resume","distances","strengths","friction","linkDistance","d3_layout_forceLinkDistance","linkStrength","d3_layout_forceLinkStrength","d3_layout_forceChargeDistance2","gravity","weight","chargeDistance","theta","dimension","neighbors","candidates","stack","childs","revalue","partition","pie","arcs","d3_layout_pieSortByValue","series","orders","offsets","d3_layout_stackOrders","d3_layout_stackOffsets","inside-out","sums","bottom","tops","bottoms","silhouette","wiggle","s3","o0","expand","zero","histogram","bin","bins","valuer","binner","frequency","pack","root0","root1","wrapTree","firstWalk","secondWalk","nodeSize","sizeNode","tx","separation","node1","queue","siblings","midpoint","apportion","vip","vop","vom","sip","sop","sim","som","cluster","previousNode","treemap","squarify","score","pad","remaining","mode","worst","stickify","rmax","rmin","ratio","stickies","sticky","padFunction","padConstant","µ","σ","logNormal","bates","irwinHall","ordinal","category10","d3_category10","category20","d3_category20","category20b","d3_category20b","category20c","d3_category20c","quantize","threshold","circleSegment","rp","ap","padRadius","d3_svg_arcAuto","h1","h0","cornerRadius","rc1","rc0","oc","kc","lc","t30","t12","t03","t21","linear-closed","step-before","step-after","basis","basis-open","basis-closed","cardinal","cardinal-open","cardinal-closed","monotone","radial","equals","curve","self","diagonal","p3","projection_","d3_svg_symbols","cross","diamond","d3_svg_symbolTan30","square","triangle-down","d3_svg_symbolSqrt3","triangle-up","symbolTypes","d3_transitionId","d3_transitionInherit","subnodes","nameNS","attrTween","attrTweenNS","styleString","styleTween","inheritId","id0","id1","axis","tickTransform","tickValues","tickArguments_","tickFormat_","tickEnter","tickExit","tickUpdate","tickSpacing","innerTickSize","tickPadding","pathUpdate","lineEnter","lineUpdate","textEnter","textUpdate","orient","outerTickSize","d3_svg_axisDefaultOrient","d3_svg_axisOrients","tickSize","tickSubdivide","brush","brushstart","background","resize","resizes","d3_svg_brushCursor","gUpdate","backgroundUpdate","redrawX","redrawY","xExtent","yExtent","keydown","keyCode","dragging","keyup","brushmove","altKey","resizingX","move1","resizingY","event_","yClamp","xClamp","yExtentDomain","xExtentDomain","brushend","eventTarget","resizing","ex","ey","d3_svg_brushResizes","extent1","extent0","yi","clear","nw","ne","se","sw","d3_time_formatUtc","d3_time_formatIso","iso","second","seconds","minute","minutes","timezone","hours","month","d3_time_scaleLocalMethods","d3_time_scaleLocalFormat","d3_time_scaleUtcMethods","d3_time_scaleUtcFormat","json","responseXML",1049,"milestoneCount","gantt","initTimeDomain","initAxis","height","PHIL","stroke","stroke-width","keyFunction","task","rectTransformSegment","total","percent","xAxis","yAxis","FIT_TIME_DOMAIN_MODE","timeDomainStart","timeDomainEnd","timeDomainMode","clientWidth","prev","ganttChartGroup","acc","ret"],"mappings":"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","file":"3.bundle.js","sourcesContent":["webpackJsonp([3],{\n\n/***/ 1047:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _slicedToArray = (function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; })();\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _react = __webpack_require__(260);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _reactDom = __webpack_require__(412);\n\t\n\tvar _reactDom2 = _interopRequireDefault(_reactDom);\n\t\n\tvar _underscore = __webpack_require__(599);\n\t\n\tvar _underscore2 = _interopRequireDefault(_underscore);\n\t\n\tvar _routeUtils = __webpack_require__(598);\n\t\n\tvar _issueStore = __webpack_require__(891);\n\t\n\tvar _issueStore2 = _interopRequireDefault(_issueStore);\n\t\n\tvar _githubClient = __webpack_require__(848);\n\t\n\tvar _githubClient2 = _interopRequireDefault(_githubClient);\n\t\n\tvar _helpers = __webpack_require__(600);\n\t\n\tvar _loadable = __webpack_require__(987);\n\t\n\tvar _loadable2 = _interopRequireDefault(_loadable);\n\t\n\tvar _labelBadge = __webpack_require__(872);\n\t\n\tvar _labelBadge2 = _interopRequireDefault(_labelBadge);\n\t\n\tvar _d2 = __webpack_require__(1048);\n\t\n\tvar _d3 = _interopRequireDefault(_d2);\n\t\n\tvar _ganttChart = __webpack_require__(1049);\n\t\n\tvar _ganttChart2 = _interopRequireDefault(_ganttChart);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar filterByMilestoneAndKanbanColumn = function filterByMilestoneAndKanbanColumn(cards) {\n\t  var data = {};\n\t  var columns = {};\n\t  var columnCounts = {}; // key is columnName\n\t  var add = function add(card) {\n\t    if (card.issue.milestone) {\n\t      var column = (0, _helpers.getCardColumn)(card);\n\t      var columnName = column.name;\n\t      columns[columnName] = column;\n\t      var msCounts = data[card.issue.milestone.title] || {};\n\t      data[card.issue.milestone.title] = msCounts;\n\t      msCounts[columnName] = msCounts[columnName] || 0;\n\t      msCounts[columnName] += 1;\n\t\n\t      columnCounts[columnName] = columnCounts[columnName] || 0;\n\t      columnCounts[columnName] += 1;\n\t    } else {\n\t      // TODO: Should account for issues not in a milestone somehow\n\t    }\n\t  };\n\t\n\t  cards.forEach(function (card) {\n\t    add(card);\n\t  });\n\t  return { data: data, columns: _underscore2.default.values(columns), columnCounts: columnCounts };\n\t};\n\t\n\tvar GanttChart = _react2.default.createClass({\n\t  displayName: 'GanttChart',\n\t  componentDidMount: function componentDidMount() {\n\t    this.renderChart();\n\t  },\n\t  componentDidUpdate: function componentDidUpdate() {\n\t    this.renderChart();\n\t  },\n\t  renderChart: function renderChart() {\n\t    var _props = this.props;\n\t    var milestones = _props.milestones;\n\t    var data = _props.data;\n\t    var columns = _props.columns;\n\t    var ganttWrapper = this.refs.ganttWrapper;\n\t\n\t    var now = new Date();\n\t\n\t    _reactDom2.default.findDOMNode(ganttWrapper).innerHTML = '';\n\t\n\t    var tasks = milestones.map(function (milestone) {\n\t      var createdAt = milestone.createdAt;\n\t      var dueOn = milestone.dueOn;\n\t      var title = milestone.title;\n\t      var state = milestone.state;\n\t      var closedIssues = milestone.closedIssues;\n\t      var openIssues = milestone.openIssues;\n\t\n\t      var dueAt = dueOn ? new Date(dueOn) : null;\n\t      var status = undefined;\n\t      if (dueAt && dueAt.getTime() < now.getTime()) {\n\t        status = 'milestone-status-overdue';\n\t      } else {\n\t        status = 'milestone-status-' + state;\n\t      }\n\t      var segments = [];\n\t      if (closedIssues) {\n\t        segments.push({ count: closedIssues, color: '666666', title: 'Closed Issues' });\n\t      }\n\t      var accountedForCount = 0;\n\t      _underscore2.default.each(columns, function (_ref) {\n\t        var name = _ref.name;\n\t        var color = _ref.color;\n\t\n\t        if (data[milestone.title]) {\n\t          var count = data[milestone.title][name] || 0;\n\t          if (count) {\n\t            accountedForCount += count;\n\t            segments.push({ count: count, color: color, title: name });\n\t          }\n\t        }\n\t      });\n\t      if (accountedForCount !== openIssues) {\n\t        segments.push({ count: openIssues - accountedForCount, color: 'ffffff', title: 'Other Open Issues' });\n\t      }\n\t      return {\n\t        startDate: createdAt,\n\t        endDate: dueAt || now,\n\t        taskName: title,\n\t        status: status,\n\t        segments: segments\n\t      };\n\t    });\n\t\n\t    var taskStatus = {\n\t      'milestone-status-overdue': 'milestone-status-overdue',\n\t      'milestone-status-open': 'milestone-status-open',\n\t      'milestone-status-closed': 'milestone-status-closed'\n\t    };\n\t\n\t    var taskNames = tasks.map(function (_ref2) {\n\t      var taskName = _ref2.taskName;\n\t      return taskName;\n\t    }).sort();\n\t\n\t    tasks.sort(function (a, b) {\n\t      return a.endDate - b.endDate;\n\t    });\n\t    var maxDate = tasks[tasks.length - 1].endDate;\n\t    tasks.sort(function (a, b) {\n\t      return a.startDate - b.startDate;\n\t    });\n\t    // const minDate = tasks[0].startDate;\n\t\n\t    var format = '%H:%M';\n\t\n\t    var chart = (0, _ganttChart2.default)(taskNames.length).taskTypes(taskNames).taskStatus(taskStatus).tickFormat(format).selector('#the-gantt-chart');\n\t    chart(tasks);\n\t\n\t    function changeTimeDomain(timeDomainString) {\n\t      var format = undefined;\n\t      switch (timeDomainString) {\n\t        case '1hr':\n\t          format = '%H:%M:%S';\n\t          chart.timeDomain([_d3.default.time.hour.offset(maxDate, -1), maxDate]);\n\t          break;\n\t        case '3hr':\n\t          format = '%H:%M';\n\t          chart.timeDomain([_d3.default.time.hour.offset(maxDate, -3), maxDate]);\n\t          break;\n\t\n\t        case '6hr':\n\t          format = '%H:%M';\n\t          chart.timeDomain([_d3.default.time.hour.offset(maxDate, -6), maxDate]);\n\t          break;\n\t\n\t        case '1day':\n\t          format = '%H:%M';\n\t          chart.timeDomain([_d3.default.time.day.offset(maxDate, -1), maxDate]);\n\t          break;\n\t\n\t        case '1week':\n\t          format = '%m/%d';\n\t          chart.timeDomain([_d3.default.time.day.offset(maxDate, -7), maxDate]);\n\t          break;\n\t        default:\n\t          format = '%H:%M';\n\t\n\t      }\n\t      chart.tickFormat(format);\n\t      chart.redraw(tasks);\n\t    }\n\t\n\t    changeTimeDomain('1week');\n\t  },\n\t  render: function render() {\n\t    var _props2 = this.props;\n\t    var columns = _props2.columns;\n\t    var columnCounts = _props2.columnCounts;\n\t    var milestones = _props2.milestones;\n\t\n\t    var legend = columns.map(function (label) {\n\t      return _react2.default.createElement(_labelBadge2.default, { key: label.name, label: label, extra: columnCounts[label.name] });\n\t    });\n\t    var closedCount = 0;\n\t    milestones.forEach(function (milestone) {\n\t      closedCount += milestone.closedIssues;\n\t    });\n\t    return _react2.default.createElement(\n\t      'div',\n\t      { className: '-gantt-chart-and-legend' },\n\t      _react2.default.createElement('div', { ref: 'ganttWrapper', id: 'the-gantt-chart' }),\n\t      _react2.default.createElement(\n\t        'h3',\n\t        null,\n\t        'Legend'\n\t      ),\n\t      _react2.default.createElement(\n\t        'p',\n\t        null,\n\t        'Blue vertical line is Today'\n\t      ),\n\t      _react2.default.createElement(_labelBadge2.default, { key: 'completed', label: { name: '0 - Closed', color: '666666' }, extra: closedCount }),\n\t      legend,\n\t      _react2.default.createElement('br', null),\n\t      _react2.default.createElement('br', null)\n\t    );\n\t  }\n\t});\n\t\n\tvar RepoKanbanShell = _react2.default.createClass({\n\t  displayName: 'RepoKanbanShell',\n\t  componentWillMount: function componentWillMount() {\n\t    // Needs to be called before `render()`\n\t    _issueStore2.default.startPolling();\n\t  },\n\t  componentWillUnmount: function componentWillUnmount() {\n\t    _issueStore2.default.stopPolling();\n\t  },\n\t  renderLoaded: function renderLoaded(_ref3) {\n\t    var _ref4 = _slicedToArray(_ref3, 2);\n\t\n\t    var allMilestones = _ref4[0];\n\t    var cards = _ref4[1];\n\t\n\t    var _getFilters$getState = (0, _routeUtils.getFilters)().getState();\n\t\n\t    var milestoneTitles = _getFilters$getState.milestoneTitles;\n\t\n\t    var _filterByMilestoneAnd = filterByMilestoneAndKanbanColumn(cards);\n\t\n\t    var data = _filterByMilestoneAnd.data;\n\t    var columns = _filterByMilestoneAnd.columns;\n\t    var columnCounts = _filterByMilestoneAnd.columnCounts;\n\t    // COPYPASTA: Taken from repo-kanban\n\t\n\t    columns = _underscore2.default.sortBy(columns, function (_ref5) {\n\t      var name = _ref5.name;\n\t\n\t      if (name === _helpers.UNCATEGORIZED_NAME) {\n\t        // make sure Uncategorized is the left-most column\n\t        return -1;\n\t      } else {\n\t        var result = /^(\\d+)/.exec(name);\n\t        return result && result[1] || name;\n\t      }\n\t    });\n\t    columns = columns.reverse();\n\t\n\t    // Remove milestones that are not in the URL filter\n\t    var milestones = undefined;\n\t    if (milestoneTitles.length > 0) {\n\t      milestones = allMilestones.filter(function (milestone) {\n\t        return milestoneTitles.indexOf(milestone.title) >= 0;\n\t      });\n\t    } else {\n\t      milestones = allMilestones;\n\t    }\n\t\n\t    return _react2.default.createElement(GanttChart, { milestones: milestones, data: data, columns: columns, columnCounts: columnCounts });\n\t  },\n\t  render: function render() {\n\t    var _getFilters$getState2 = (0, _routeUtils.getFilters)().getState();\n\t\n\t    var repoInfos = _getFilters$getState2.repoInfos;\n\t    // Get the \"Primary\" repo for milestones and labels\n\t\n\t    var _repoInfos = _slicedToArray(repoInfos, 1);\n\t\n\t    var _repoInfos$ = _repoInfos[0];\n\t    var repoOwner = _repoInfos$.repoOwner;\n\t    var repoName = _repoInfos$.repoName;\n\t\n\t    // TODO: Actually do all the milestones\n\t\n\t    var allPromises = Promise.all([_issueStore2.default.fetchMilestones(repoOwner, repoName), _issueStore2.default.fetchIssues()]);\n\t\n\t    return _react2.default.createElement(_loadable2.default, {\n\t      promise: allPromises,\n\t      renderLoaded: this.renderLoaded\n\t    });\n\t  }\n\t});\n\t\n\texports.default = RepoKanbanShell;\n\n/***/ },\n\n/***/ 1048:\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;!function() {\n\t  var d3 = {\n\t    version: \"3.5.12\"\n\t  };\n\t  var d3_arraySlice = [].slice, d3_array = function(list) {\n\t    return d3_arraySlice.call(list);\n\t  };\n\t  var d3_document = this.document;\n\t  function d3_documentElement(node) {\n\t    return node && (node.ownerDocument || node.document || node).documentElement;\n\t  }\n\t  function d3_window(node) {\n\t    return node && (node.ownerDocument && node.ownerDocument.defaultView || node.document && node || node.defaultView);\n\t  }\n\t  if (d3_document) {\n\t    try {\n\t      d3_array(d3_document.documentElement.childNodes)[0].nodeType;\n\t    } catch (e) {\n\t      d3_array = function(list) {\n\t        var i = list.length, array = new Array(i);\n\t        while (i--) array[i] = list[i];\n\t        return array;\n\t      };\n\t    }\n\t  }\n\t  if (!Date.now) Date.now = function() {\n\t    return +new Date();\n\t  };\n\t  if (d3_document) {\n\t    try {\n\t      d3_document.createElement(\"DIV\").style.setProperty(\"opacity\", 0, \"\");\n\t    } catch (error) {\n\t      var d3_element_prototype = this.Element.prototype, d3_element_setAttribute = d3_element_prototype.setAttribute, d3_element_setAttributeNS = d3_element_prototype.setAttributeNS, d3_style_prototype = this.CSSStyleDeclaration.prototype, d3_style_setProperty = d3_style_prototype.setProperty;\n\t      d3_element_prototype.setAttribute = function(name, value) {\n\t        d3_element_setAttribute.call(this, name, value + \"\");\n\t      };\n\t      d3_element_prototype.setAttributeNS = function(space, local, value) {\n\t        d3_element_setAttributeNS.call(this, space, local, value + \"\");\n\t      };\n\t      d3_style_prototype.setProperty = function(name, value, priority) {\n\t        d3_style_setProperty.call(this, name, value + \"\", priority);\n\t      };\n\t    }\n\t  }\n\t  d3.ascending = d3_ascending;\n\t  function d3_ascending(a, b) {\n\t    return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n\t  }\n\t  d3.descending = function(a, b) {\n\t    return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n\t  };\n\t  d3.min = function(array, f) {\n\t    var i = -1, n = array.length, a, b;\n\t    if (arguments.length === 1) {\n\t      while (++i < n) if ((b = array[i]) != null && b >= b) {\n\t        a = b;\n\t        break;\n\t      }\n\t      while (++i < n) if ((b = array[i]) != null && a > b) a = b;\n\t    } else {\n\t      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n\t        a = b;\n\t        break;\n\t      }\n\t      while (++i < n) if ((b = f.call(array, array[i], i)) != null && a > b) a = b;\n\t    }\n\t    return a;\n\t  };\n\t  d3.max = function(array, f) {\n\t    var i = -1, n = array.length, a, b;\n\t    if (arguments.length === 1) {\n\t      while (++i < n) if ((b = array[i]) != null && b >= b) {\n\t        a = b;\n\t        break;\n\t      }\n\t      while (++i < n) if ((b = array[i]) != null && b > a) a = b;\n\t    } else {\n\t      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n\t        a = b;\n\t        break;\n\t      }\n\t      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b > a) a = b;\n\t    }\n\t    return a;\n\t  };\n\t  d3.extent = function(array, f) {\n\t    var i = -1, n = array.length, a, b, c;\n\t    if (arguments.length === 1) {\n\t      while (++i < n) if ((b = array[i]) != null && b >= b) {\n\t        a = c = b;\n\t        break;\n\t      }\n\t      while (++i < n) if ((b = array[i]) != null) {\n\t        if (a > b) a = b;\n\t        if (c < b) c = b;\n\t      }\n\t    } else {\n\t      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n\t        a = c = b;\n\t        break;\n\t      }\n\t      while (++i < n) if ((b = f.call(array, array[i], i)) != null) {\n\t        if (a > b) a = b;\n\t        if (c < b) c = b;\n\t      }\n\t    }\n\t    return [ a, c ];\n\t  };\n\t  function d3_number(x) {\n\t    return x === null ? NaN : +x;\n\t  }\n\t  function d3_numeric(x) {\n\t    return !isNaN(x);\n\t  }\n\t  d3.sum = function(array, f) {\n\t    var s = 0, n = array.length, a, i = -1;\n\t    if (arguments.length === 1) {\n\t      while (++i < n) if (d3_numeric(a = +array[i])) s += a;\n\t    } else {\n\t      while (++i < n) if (d3_numeric(a = +f.call(array, array[i], i))) s += a;\n\t    }\n\t    return s;\n\t  };\n\t  d3.mean = function(array, f) {\n\t    var s = 0, n = array.length, a, i = -1, j = n;\n\t    if (arguments.length === 1) {\n\t      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) s += a; else --j;\n\t    } else {\n\t      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) s += a; else --j;\n\t    }\n\t    if (j) return s / j;\n\t  };\n\t  d3.quantile = function(values, p) {\n\t    var H = (values.length - 1) * p + 1, h = Math.floor(H), v = +values[h - 1], e = H - h;\n\t    return e ? v + e * (values[h] - v) : v;\n\t  };\n\t  d3.median = function(array, f) {\n\t    var numbers = [], n = array.length, a, i = -1;\n\t    if (arguments.length === 1) {\n\t      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) numbers.push(a);\n\t    } else {\n\t      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) numbers.push(a);\n\t    }\n\t    if (numbers.length) return d3.quantile(numbers.sort(d3_ascending), .5);\n\t  };\n\t  d3.variance = function(array, f) {\n\t    var n = array.length, m = 0, a, d, s = 0, i = -1, j = 0;\n\t    if (arguments.length === 1) {\n\t      while (++i < n) {\n\t        if (d3_numeric(a = d3_number(array[i]))) {\n\t          d = a - m;\n\t          m += d / ++j;\n\t          s += d * (a - m);\n\t        }\n\t      }\n\t    } else {\n\t      while (++i < n) {\n\t        if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) {\n\t          d = a - m;\n\t          m += d / ++j;\n\t          s += d * (a - m);\n\t        }\n\t      }\n\t    }\n\t    if (j > 1) return s / (j - 1);\n\t  };\n\t  d3.deviation = function() {\n\t    var v = d3.variance.apply(this, arguments);\n\t    return v ? Math.sqrt(v) : v;\n\t  };\n\t  function d3_bisector(compare) {\n\t    return {\n\t      left: function(a, x, lo, hi) {\n\t        if (arguments.length < 3) lo = 0;\n\t        if (arguments.length < 4) hi = a.length;\n\t        while (lo < hi) {\n\t          var mid = lo + hi >>> 1;\n\t          if (compare(a[mid], x) < 0) lo = mid + 1; else hi = mid;\n\t        }\n\t        return lo;\n\t      },\n\t      right: function(a, x, lo, hi) {\n\t        if (arguments.length < 3) lo = 0;\n\t        if (arguments.length < 4) hi = a.length;\n\t        while (lo < hi) {\n\t          var mid = lo + hi >>> 1;\n\t          if (compare(a[mid], x) > 0) hi = mid; else lo = mid + 1;\n\t        }\n\t        return lo;\n\t      }\n\t    };\n\t  }\n\t  var d3_bisect = d3_bisector(d3_ascending);\n\t  d3.bisectLeft = d3_bisect.left;\n\t  d3.bisect = d3.bisectRight = d3_bisect.right;\n\t  d3.bisector = function(f) {\n\t    return d3_bisector(f.length === 1 ? function(d, x) {\n\t      return d3_ascending(f(d), x);\n\t    } : f);\n\t  };\n\t  d3.shuffle = function(array, i0, i1) {\n\t    if ((m = arguments.length) < 3) {\n\t      i1 = array.length;\n\t      if (m < 2) i0 = 0;\n\t    }\n\t    var m = i1 - i0, t, i;\n\t    while (m) {\n\t      i = Math.random() * m-- | 0;\n\t      t = array[m + i0], array[m + i0] = array[i + i0], array[i + i0] = t;\n\t    }\n\t    return array;\n\t  };\n\t  d3.permute = function(array, indexes) {\n\t    var i = indexes.length, permutes = new Array(i);\n\t    while (i--) permutes[i] = array[indexes[i]];\n\t    return permutes;\n\t  };\n\t  d3.pairs = function(array) {\n\t    var i = 0, n = array.length - 1, p0, p1 = array[0], pairs = new Array(n < 0 ? 0 : n);\n\t    while (i < n) pairs[i] = [ p0 = p1, p1 = array[++i] ];\n\t    return pairs;\n\t  };\n\t  d3.zip = function() {\n\t    if (!(n = arguments.length)) return [];\n\t    for (var i = -1, m = d3.min(arguments, d3_zipLength), zips = new Array(m); ++i < m; ) {\n\t      for (var j = -1, n, zip = zips[i] = new Array(n); ++j < n; ) {\n\t        zip[j] = arguments[j][i];\n\t      }\n\t    }\n\t    return zips;\n\t  };\n\t  function d3_zipLength(d) {\n\t    return d.length;\n\t  }\n\t  d3.transpose = function(matrix) {\n\t    return d3.zip.apply(d3, matrix);\n\t  };\n\t  d3.keys = function(map) {\n\t    var keys = [];\n\t    for (var key in map) keys.push(key);\n\t    return keys;\n\t  };\n\t  d3.values = function(map) {\n\t    var values = [];\n\t    for (var key in map) values.push(map[key]);\n\t    return values;\n\t  };\n\t  d3.entries = function(map) {\n\t    var entries = [];\n\t    for (var key in map) entries.push({\n\t      key: key,\n\t      value: map[key]\n\t    });\n\t    return entries;\n\t  };\n\t  d3.merge = function(arrays) {\n\t    var n = arrays.length, m, i = -1, j = 0, merged, array;\n\t    while (++i < n) j += arrays[i].length;\n\t    merged = new Array(j);\n\t    while (--n >= 0) {\n\t      array = arrays[n];\n\t      m = array.length;\n\t      while (--m >= 0) {\n\t        merged[--j] = array[m];\n\t      }\n\t    }\n\t    return merged;\n\t  };\n\t  var abs = Math.abs;\n\t  d3.range = function(start, stop, step) {\n\t    if (arguments.length < 3) {\n\t      step = 1;\n\t      if (arguments.length < 2) {\n\t        stop = start;\n\t        start = 0;\n\t      }\n\t    }\n\t    if ((stop - start) / step === Infinity) throw new Error(\"infinite range\");\n\t    var range = [], k = d3_range_integerScale(abs(step)), i = -1, j;\n\t    start *= k, stop *= k, step *= k;\n\t    if (step < 0) while ((j = start + step * ++i) > stop) range.push(j / k); else while ((j = start + step * ++i) < stop) range.push(j / k);\n\t    return range;\n\t  };\n\t  function d3_range_integerScale(x) {\n\t    var k = 1;\n\t    while (x * k % 1) k *= 10;\n\t    return k;\n\t  }\n\t  function d3_class(ctor, properties) {\n\t    for (var key in properties) {\n\t      Object.defineProperty(ctor.prototype, key, {\n\t        value: properties[key],\n\t        enumerable: false\n\t      });\n\t    }\n\t  }\n\t  d3.map = function(object, f) {\n\t    var map = new d3_Map();\n\t    if (object instanceof d3_Map) {\n\t      object.forEach(function(key, value) {\n\t        map.set(key, value);\n\t      });\n\t    } else if (Array.isArray(object)) {\n\t      var i = -1, n = object.length, o;\n\t      if (arguments.length === 1) while (++i < n) map.set(i, object[i]); else while (++i < n) map.set(f.call(object, o = object[i], i), o);\n\t    } else {\n\t      for (var key in object) map.set(key, object[key]);\n\t    }\n\t    return map;\n\t  };\n\t  function d3_Map() {\n\t    this._ = Object.create(null);\n\t  }\n\t  var d3_map_proto = \"__proto__\", d3_map_zero = \"\\x00\";\n\t  d3_class(d3_Map, {\n\t    has: d3_map_has,\n\t    get: function(key) {\n\t      return this._[d3_map_escape(key)];\n\t    },\n\t    set: function(key, value) {\n\t      return this._[d3_map_escape(key)] = value;\n\t    },\n\t    remove: d3_map_remove,\n\t    keys: d3_map_keys,\n\t    values: function() {\n\t      var values = [];\n\t      for (var key in this._) values.push(this._[key]);\n\t      return values;\n\t    },\n\t    entries: function() {\n\t      var entries = [];\n\t      for (var key in this._) entries.push({\n\t        key: d3_map_unescape(key),\n\t        value: this._[key]\n\t      });\n\t      return entries;\n\t    },\n\t    size: d3_map_size,\n\t    empty: d3_map_empty,\n\t    forEach: function(f) {\n\t      for (var key in this._) f.call(this, d3_map_unescape(key), this._[key]);\n\t    }\n\t  });\n\t  function d3_map_escape(key) {\n\t    return (key += \"\") === d3_map_proto || key[0] === d3_map_zero ? d3_map_zero + key : key;\n\t  }\n\t  function d3_map_unescape(key) {\n\t    return (key += \"\")[0] === d3_map_zero ? key.slice(1) : key;\n\t  }\n\t  function d3_map_has(key) {\n\t    return d3_map_escape(key) in this._;\n\t  }\n\t  function d3_map_remove(key) {\n\t    return (key = d3_map_escape(key)) in this._ && delete this._[key];\n\t  }\n\t  function d3_map_keys() {\n\t    var keys = [];\n\t    for (var key in this._) keys.push(d3_map_unescape(key));\n\t    return keys;\n\t  }\n\t  function d3_map_size() {\n\t    var size = 0;\n\t    for (var key in this._) ++size;\n\t    return size;\n\t  }\n\t  function d3_map_empty() {\n\t    for (var key in this._) return false;\n\t    return true;\n\t  }\n\t  d3.nest = function() {\n\t    var nest = {}, keys = [], sortKeys = [], sortValues, rollup;\n\t    function map(mapType, array, depth) {\n\t      if (depth >= keys.length) return rollup ? rollup.call(nest, array) : sortValues ? array.sort(sortValues) : array;\n\t      var i = -1, n = array.length, key = keys[depth++], keyValue, object, setter, valuesByKey = new d3_Map(), values;\n\t      while (++i < n) {\n\t        if (values = valuesByKey.get(keyValue = key(object = array[i]))) {\n\t          values.push(object);\n\t        } else {\n\t          valuesByKey.set(keyValue, [ object ]);\n\t        }\n\t      }\n\t      if (mapType) {\n\t        object = mapType();\n\t        setter = function(keyValue, values) {\n\t          object.set(keyValue, map(mapType, values, depth));\n\t        };\n\t      } else {\n\t        object = {};\n\t        setter = function(keyValue, values) {\n\t          object[keyValue] = map(mapType, values, depth);\n\t        };\n\t      }\n\t      valuesByKey.forEach(setter);\n\t      return object;\n\t    }\n\t    function entries(map, depth) {\n\t      if (depth >= keys.length) return map;\n\t      var array = [], sortKey = sortKeys[depth++];\n\t      map.forEach(function(key, keyMap) {\n\t        array.push({\n\t          key: key,\n\t          values: entries(keyMap, depth)\n\t        });\n\t      });\n\t      return sortKey ? array.sort(function(a, b) {\n\t        return sortKey(a.key, b.key);\n\t      }) : array;\n\t    }\n\t    nest.map = function(array, mapType) {\n\t      return map(mapType, array, 0);\n\t    };\n\t    nest.entries = function(array) {\n\t      return entries(map(d3.map, array, 0), 0);\n\t    };\n\t    nest.key = function(d) {\n\t      keys.push(d);\n\t      return nest;\n\t    };\n\t    nest.sortKeys = function(order) {\n\t      sortKeys[keys.length - 1] = order;\n\t      return nest;\n\t    };\n\t    nest.sortValues = function(order) {\n\t      sortValues = order;\n\t      return nest;\n\t    };\n\t    nest.rollup = function(f) {\n\t      rollup = f;\n\t      return nest;\n\t    };\n\t    return nest;\n\t  };\n\t  d3.set = function(array) {\n\t    var set = new d3_Set();\n\t    if (array) for (var i = 0, n = array.length; i < n; ++i) set.add(array[i]);\n\t    return set;\n\t  };\n\t  function d3_Set() {\n\t    this._ = Object.create(null);\n\t  }\n\t  d3_class(d3_Set, {\n\t    has: d3_map_has,\n\t    add: function(key) {\n\t      this._[d3_map_escape(key += \"\")] = true;\n\t      return key;\n\t    },\n\t    remove: d3_map_remove,\n\t    values: d3_map_keys,\n\t    size: d3_map_size,\n\t    empty: d3_map_empty,\n\t    forEach: function(f) {\n\t      for (var key in this._) f.call(this, d3_map_unescape(key));\n\t    }\n\t  });\n\t  d3.behavior = {};\n\t  function d3_identity(d) {\n\t    return d;\n\t  }\n\t  d3.rebind = function(target, source) {\n\t    var i = 1, n = arguments.length, method;\n\t    while (++i < n) target[method = arguments[i]] = d3_rebind(target, source, source[method]);\n\t    return target;\n\t  };\n\t  function d3_rebind(target, source, method) {\n\t    return function() {\n\t      var value = method.apply(source, arguments);\n\t      return value === source ? target : value;\n\t    };\n\t  }\n\t  function d3_vendorSymbol(object, name) {\n\t    if (name in object) return name;\n\t    name = name.charAt(0).toUpperCase() + name.slice(1);\n\t    for (var i = 0, n = d3_vendorPrefixes.length; i < n; ++i) {\n\t      var prefixName = d3_vendorPrefixes[i] + name;\n\t      if (prefixName in object) return prefixName;\n\t    }\n\t  }\n\t  var d3_vendorPrefixes = [ \"webkit\", \"ms\", \"moz\", \"Moz\", \"o\", \"O\" ];\n\t  function d3_noop() {}\n\t  d3.dispatch = function() {\n\t    var dispatch = new d3_dispatch(), i = -1, n = arguments.length;\n\t    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n\t    return dispatch;\n\t  };\n\t  function d3_dispatch() {}\n\t  d3_dispatch.prototype.on = function(type, listener) {\n\t    var i = type.indexOf(\".\"), name = \"\";\n\t    if (i >= 0) {\n\t      name = type.slice(i + 1);\n\t      type = type.slice(0, i);\n\t    }\n\t    if (type) return arguments.length < 2 ? this[type].on(name) : this[type].on(name, listener);\n\t    if (arguments.length === 2) {\n\t      if (listener == null) for (type in this) {\n\t        if (this.hasOwnProperty(type)) this[type].on(name, null);\n\t      }\n\t      return this;\n\t    }\n\t  };\n\t  function d3_dispatch_event(dispatch) {\n\t    var listeners = [], listenerByName = new d3_Map();\n\t    function event() {\n\t      var z = listeners, i = -1, n = z.length, l;\n\t      while (++i < n) if (l = z[i].on) l.apply(this, arguments);\n\t      return dispatch;\n\t    }\n\t    event.on = function(name, listener) {\n\t      var l = listenerByName.get(name), i;\n\t      if (arguments.length < 2) return l && l.on;\n\t      if (l) {\n\t        l.on = null;\n\t        listeners = listeners.slice(0, i = listeners.indexOf(l)).concat(listeners.slice(i + 1));\n\t        listenerByName.remove(name);\n\t      }\n\t      if (listener) listeners.push(listenerByName.set(name, {\n\t        on: listener\n\t      }));\n\t      return dispatch;\n\t    };\n\t    return event;\n\t  }\n\t  d3.event = null;\n\t  function d3_eventPreventDefault() {\n\t    d3.event.preventDefault();\n\t  }\n\t  function d3_eventSource() {\n\t    var e = d3.event, s;\n\t    while (s = e.sourceEvent) e = s;\n\t    return e;\n\t  }\n\t  function d3_eventDispatch(target) {\n\t    var dispatch = new d3_dispatch(), i = 0, n = arguments.length;\n\t    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n\t    dispatch.of = function(thiz, argumentz) {\n\t      return function(e1) {\n\t        try {\n\t          var e0 = e1.sourceEvent = d3.event;\n\t          e1.target = target;\n\t          d3.event = e1;\n\t          dispatch[e1.type].apply(thiz, argumentz);\n\t        } finally {\n\t          d3.event = e0;\n\t        }\n\t      };\n\t    };\n\t    return dispatch;\n\t  }\n\t  d3.requote = function(s) {\n\t    return s.replace(d3_requote_re, \"\\\\$&\");\n\t  };\n\t  var d3_requote_re = /[\\\\\\^\\$\\*\\+\\?\\|\\[\\]\\(\\)\\.\\{\\}]/g;\n\t  var d3_subclass = {}.__proto__ ? function(object, prototype) {\n\t    object.__proto__ = prototype;\n\t  } : function(object, prototype) {\n\t    for (var property in prototype) object[property] = prototype[property];\n\t  };\n\t  function d3_selection(groups) {\n\t    d3_subclass(groups, d3_selectionPrototype);\n\t    return groups;\n\t  }\n\t  var d3_select = function(s, n) {\n\t    return n.querySelector(s);\n\t  }, d3_selectAll = function(s, n) {\n\t    return n.querySelectorAll(s);\n\t  }, d3_selectMatches = function(n, s) {\n\t    var d3_selectMatcher = n.matches || n[d3_vendorSymbol(n, \"matchesSelector\")];\n\t    d3_selectMatches = function(n, s) {\n\t      return d3_selectMatcher.call(n, s);\n\t    };\n\t    return d3_selectMatches(n, s);\n\t  };\n\t  if (typeof Sizzle === \"function\") {\n\t    d3_select = function(s, n) {\n\t      return Sizzle(s, n)[0] || null;\n\t    };\n\t    d3_selectAll = Sizzle;\n\t    d3_selectMatches = Sizzle.matchesSelector;\n\t  }\n\t  d3.selection = function() {\n\t    return d3.select(d3_document.documentElement);\n\t  };\n\t  var d3_selectionPrototype = d3.selection.prototype = [];\n\t  d3_selectionPrototype.select = function(selector) {\n\t    var subgroups = [], subgroup, subnode, group, node;\n\t    selector = d3_selection_selector(selector);\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      subgroups.push(subgroup = []);\n\t      subgroup.parentNode = (group = this[j]).parentNode;\n\t      for (var i = -1, n = group.length; ++i < n; ) {\n\t        if (node = group[i]) {\n\t          subgroup.push(subnode = selector.call(node, node.__data__, i, j));\n\t          if (subnode && \"__data__\" in node) subnode.__data__ = node.__data__;\n\t        } else {\n\t          subgroup.push(null);\n\t        }\n\t      }\n\t    }\n\t    return d3_selection(subgroups);\n\t  };\n\t  function d3_selection_selector(selector) {\n\t    return typeof selector === \"function\" ? selector : function() {\n\t      return d3_select(selector, this);\n\t    };\n\t  }\n\t  d3_selectionPrototype.selectAll = function(selector) {\n\t    var subgroups = [], subgroup, node;\n\t    selector = d3_selection_selectorAll(selector);\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n\t        if (node = group[i]) {\n\t          subgroups.push(subgroup = d3_array(selector.call(node, node.__data__, i, j)));\n\t          subgroup.parentNode = node;\n\t        }\n\t      }\n\t    }\n\t    return d3_selection(subgroups);\n\t  };\n\t  function d3_selection_selectorAll(selector) {\n\t    return typeof selector === \"function\" ? selector : function() {\n\t      return d3_selectAll(selector, this);\n\t    };\n\t  }\n\t  var d3_nsPrefix = {\n\t    svg: \"http://www.w3.org/2000/svg\",\n\t    xhtml: \"http://www.w3.org/1999/xhtml\",\n\t    xlink: \"http://www.w3.org/1999/xlink\",\n\t    xml: \"http://www.w3.org/XML/1998/namespace\",\n\t    xmlns: \"http://www.w3.org/2000/xmlns/\"\n\t  };\n\t  d3.ns = {\n\t    prefix: d3_nsPrefix,\n\t    qualify: function(name) {\n\t      var i = name.indexOf(\":\"), prefix = name;\n\t      if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n\t      return d3_nsPrefix.hasOwnProperty(prefix) ? {\n\t        space: d3_nsPrefix[prefix],\n\t        local: name\n\t      } : name;\n\t    }\n\t  };\n\t  d3_selectionPrototype.attr = function(name, value) {\n\t    if (arguments.length < 2) {\n\t      if (typeof name === \"string\") {\n\t        var node = this.node();\n\t        name = d3.ns.qualify(name);\n\t        return name.local ? node.getAttributeNS(name.space, name.local) : node.getAttribute(name);\n\t      }\n\t      for (value in name) this.each(d3_selection_attr(value, name[value]));\n\t      return this;\n\t    }\n\t    return this.each(d3_selection_attr(name, value));\n\t  };\n\t  function d3_selection_attr(name, value) {\n\t    name = d3.ns.qualify(name);\n\t    function attrNull() {\n\t      this.removeAttribute(name);\n\t    }\n\t    function attrNullNS() {\n\t      this.removeAttributeNS(name.space, name.local);\n\t    }\n\t    function attrConstant() {\n\t      this.setAttribute(name, value);\n\t    }\n\t    function attrConstantNS() {\n\t      this.setAttributeNS(name.space, name.local, value);\n\t    }\n\t    function attrFunction() {\n\t      var x = value.apply(this, arguments);\n\t      if (x == null) this.removeAttribute(name); else this.setAttribute(name, x);\n\t    }\n\t    function attrFunctionNS() {\n\t      var x = value.apply(this, arguments);\n\t      if (x == null) this.removeAttributeNS(name.space, name.local); else this.setAttributeNS(name.space, name.local, x);\n\t    }\n\t    return value == null ? name.local ? attrNullNS : attrNull : typeof value === \"function\" ? name.local ? attrFunctionNS : attrFunction : name.local ? attrConstantNS : attrConstant;\n\t  }\n\t  function d3_collapse(s) {\n\t    return s.trim().replace(/\\s+/g, \" \");\n\t  }\n\t  d3_selectionPrototype.classed = function(name, value) {\n\t    if (arguments.length < 2) {\n\t      if (typeof name === \"string\") {\n\t        var node = this.node(), n = (name = d3_selection_classes(name)).length, i = -1;\n\t        if (value = node.classList) {\n\t          while (++i < n) if (!value.contains(name[i])) return false;\n\t        } else {\n\t          value = node.getAttribute(\"class\");\n\t          while (++i < n) if (!d3_selection_classedRe(name[i]).test(value)) return false;\n\t        }\n\t        return true;\n\t      }\n\t      for (value in name) this.each(d3_selection_classed(value, name[value]));\n\t      return this;\n\t    }\n\t    return this.each(d3_selection_classed(name, value));\n\t  };\n\t  function d3_selection_classedRe(name) {\n\t    return new RegExp(\"(?:^|\\\\s+)\" + d3.requote(name) + \"(?:\\\\s+|$)\", \"g\");\n\t  }\n\t  function d3_selection_classes(name) {\n\t    return (name + \"\").trim().split(/^|\\s+/);\n\t  }\n\t  function d3_selection_classed(name, value) {\n\t    name = d3_selection_classes(name).map(d3_selection_classedName);\n\t    var n = name.length;\n\t    function classedConstant() {\n\t      var i = -1;\n\t      while (++i < n) name[i](this, value);\n\t    }\n\t    function classedFunction() {\n\t      var i = -1, x = value.apply(this, arguments);\n\t      while (++i < n) name[i](this, x);\n\t    }\n\t    return typeof value === \"function\" ? classedFunction : classedConstant;\n\t  }\n\t  function d3_selection_classedName(name) {\n\t    var re = d3_selection_classedRe(name);\n\t    return function(node, value) {\n\t      if (c = node.classList) return value ? c.add(name) : c.remove(name);\n\t      var c = node.getAttribute(\"class\") || \"\";\n\t      if (value) {\n\t        re.lastIndex = 0;\n\t        if (!re.test(c)) node.setAttribute(\"class\", d3_collapse(c + \" \" + name));\n\t      } else {\n\t        node.setAttribute(\"class\", d3_collapse(c.replace(re, \" \")));\n\t      }\n\t    };\n\t  }\n\t  d3_selectionPrototype.style = function(name, value, priority) {\n\t    var n = arguments.length;\n\t    if (n < 3) {\n\t      if (typeof name !== \"string\") {\n\t        if (n < 2) value = \"\";\n\t        for (priority in name) this.each(d3_selection_style(priority, name[priority], value));\n\t        return this;\n\t      }\n\t      if (n < 2) {\n\t        var node = this.node();\n\t        return d3_window(node).getComputedStyle(node, null).getPropertyValue(name);\n\t      }\n\t      priority = \"\";\n\t    }\n\t    return this.each(d3_selection_style(name, value, priority));\n\t  };\n\t  function d3_selection_style(name, value, priority) {\n\t    function styleNull() {\n\t      this.style.removeProperty(name);\n\t    }\n\t    function styleConstant() {\n\t      this.style.setProperty(name, value, priority);\n\t    }\n\t    function styleFunction() {\n\t      var x = value.apply(this, arguments);\n\t      if (x == null) this.style.removeProperty(name); else this.style.setProperty(name, x, priority);\n\t    }\n\t    return value == null ? styleNull : typeof value === \"function\" ? styleFunction : styleConstant;\n\t  }\n\t  d3_selectionPrototype.property = function(name, value) {\n\t    if (arguments.length < 2) {\n\t      if (typeof name === \"string\") return this.node()[name];\n\t      for (value in name) this.each(d3_selection_property(value, name[value]));\n\t      return this;\n\t    }\n\t    return this.each(d3_selection_property(name, value));\n\t  };\n\t  function d3_selection_property(name, value) {\n\t    function propertyNull() {\n\t      delete this[name];\n\t    }\n\t    function propertyConstant() {\n\t      this[name] = value;\n\t    }\n\t    function propertyFunction() {\n\t      var x = value.apply(this, arguments);\n\t      if (x == null) delete this[name]; else this[name] = x;\n\t    }\n\t    return value == null ? propertyNull : typeof value === \"function\" ? propertyFunction : propertyConstant;\n\t  }\n\t  d3_selectionPrototype.text = function(value) {\n\t    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n\t      var v = value.apply(this, arguments);\n\t      this.textContent = v == null ? \"\" : v;\n\t    } : value == null ? function() {\n\t      this.textContent = \"\";\n\t    } : function() {\n\t      this.textContent = value;\n\t    }) : this.node().textContent;\n\t  };\n\t  d3_selectionPrototype.html = function(value) {\n\t    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n\t      var v = value.apply(this, arguments);\n\t      this.innerHTML = v == null ? \"\" : v;\n\t    } : value == null ? function() {\n\t      this.innerHTML = \"\";\n\t    } : function() {\n\t      this.innerHTML = value;\n\t    }) : this.node().innerHTML;\n\t  };\n\t  d3_selectionPrototype.append = function(name) {\n\t    name = d3_selection_creator(name);\n\t    return this.select(function() {\n\t      return this.appendChild(name.apply(this, arguments));\n\t    });\n\t  };\n\t  function d3_selection_creator(name) {\n\t    function create() {\n\t      var document = this.ownerDocument, namespace = this.namespaceURI;\n\t      return namespace ? document.createElementNS(namespace, name) : document.createElement(name);\n\t    }\n\t    function createNS() {\n\t      return this.ownerDocument.createElementNS(name.space, name.local);\n\t    }\n\t    return typeof name === \"function\" ? name : (name = d3.ns.qualify(name)).local ? createNS : create;\n\t  }\n\t  d3_selectionPrototype.insert = function(name, before) {\n\t    name = d3_selection_creator(name);\n\t    before = d3_selection_selector(before);\n\t    return this.select(function() {\n\t      return this.insertBefore(name.apply(this, arguments), before.apply(this, arguments) || null);\n\t    });\n\t  };\n\t  d3_selectionPrototype.remove = function() {\n\t    return this.each(d3_selectionRemove);\n\t  };\n\t  function d3_selectionRemove() {\n\t    var parent = this.parentNode;\n\t    if (parent) parent.removeChild(this);\n\t  }\n\t  d3_selectionPrototype.data = function(value, key) {\n\t    var i = -1, n = this.length, group, node;\n\t    if (!arguments.length) {\n\t      value = new Array(n = (group = this[0]).length);\n\t      while (++i < n) {\n\t        if (node = group[i]) {\n\t          value[i] = node.__data__;\n\t        }\n\t      }\n\t      return value;\n\t    }\n\t    function bind(group, groupData) {\n\t      var i, n = group.length, m = groupData.length, n0 = Math.min(n, m), updateNodes = new Array(m), enterNodes = new Array(m), exitNodes = new Array(n), node, nodeData;\n\t      if (key) {\n\t        var nodeByKeyValue = new d3_Map(), keyValues = new Array(n), keyValue;\n\t        for (i = -1; ++i < n; ) {\n\t          if (node = group[i]) {\n\t            if (nodeByKeyValue.has(keyValue = key.call(node, node.__data__, i))) {\n\t              exitNodes[i] = node;\n\t            } else {\n\t              nodeByKeyValue.set(keyValue, node);\n\t            }\n\t            keyValues[i] = keyValue;\n\t          }\n\t        }\n\t        for (i = -1; ++i < m; ) {\n\t          if (!(node = nodeByKeyValue.get(keyValue = key.call(groupData, nodeData = groupData[i], i)))) {\n\t            enterNodes[i] = d3_selection_dataNode(nodeData);\n\t          } else if (node !== true) {\n\t            updateNodes[i] = node;\n\t            node.__data__ = nodeData;\n\t          }\n\t          nodeByKeyValue.set(keyValue, true);\n\t        }\n\t        for (i = -1; ++i < n; ) {\n\t          if (i in keyValues && nodeByKeyValue.get(keyValues[i]) !== true) {\n\t            exitNodes[i] = group[i];\n\t          }\n\t        }\n\t      } else {\n\t        for (i = -1; ++i < n0; ) {\n\t          node = group[i];\n\t          nodeData = groupData[i];\n\t          if (node) {\n\t            node.__data__ = nodeData;\n\t            updateNodes[i] = node;\n\t          } else {\n\t            enterNodes[i] = d3_selection_dataNode(nodeData);\n\t          }\n\t        }\n\t        for (;i < m; ++i) {\n\t          enterNodes[i] = d3_selection_dataNode(groupData[i]);\n\t        }\n\t        for (;i < n; ++i) {\n\t          exitNodes[i] = group[i];\n\t        }\n\t      }\n\t      enterNodes.update = updateNodes;\n\t      enterNodes.parentNode = updateNodes.parentNode = exitNodes.parentNode = group.parentNode;\n\t      enter.push(enterNodes);\n\t      update.push(updateNodes);\n\t      exit.push(exitNodes);\n\t    }\n\t    var enter = d3_selection_enter([]), update = d3_selection([]), exit = d3_selection([]);\n\t    if (typeof value === \"function\") {\n\t      while (++i < n) {\n\t        bind(group = this[i], value.call(group, group.parentNode.__data__, i));\n\t      }\n\t    } else {\n\t      while (++i < n) {\n\t        bind(group = this[i], value);\n\t      }\n\t    }\n\t    update.enter = function() {\n\t      return enter;\n\t    };\n\t    update.exit = function() {\n\t      return exit;\n\t    };\n\t    return update;\n\t  };\n\t  function d3_selection_dataNode(data) {\n\t    return {\n\t      __data__: data\n\t    };\n\t  }\n\t  d3_selectionPrototype.datum = function(value) {\n\t    return arguments.length ? this.property(\"__data__\", value) : this.property(\"__data__\");\n\t  };\n\t  d3_selectionPrototype.filter = function(filter) {\n\t    var subgroups = [], subgroup, group, node;\n\t    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n\t    for (var j = 0, m = this.length; j < m; j++) {\n\t      subgroups.push(subgroup = []);\n\t      subgroup.parentNode = (group = this[j]).parentNode;\n\t      for (var i = 0, n = group.length; i < n; i++) {\n\t        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n\t          subgroup.push(node);\n\t        }\n\t      }\n\t    }\n\t    return d3_selection(subgroups);\n\t  };\n\t  function d3_selection_filter(selector) {\n\t    return function() {\n\t      return d3_selectMatches(this, selector);\n\t    };\n\t  }\n\t  d3_selectionPrototype.order = function() {\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      for (var group = this[j], i = group.length - 1, next = group[i], node; --i >= 0; ) {\n\t        if (node = group[i]) {\n\t          if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n\t          next = node;\n\t        }\n\t      }\n\t    }\n\t    return this;\n\t  };\n\t  d3_selectionPrototype.sort = function(comparator) {\n\t    comparator = d3_selection_sortComparator.apply(this, arguments);\n\t    for (var j = -1, m = this.length; ++j < m; ) this[j].sort(comparator);\n\t    return this.order();\n\t  };\n\t  function d3_selection_sortComparator(comparator) {\n\t    if (!arguments.length) comparator = d3_ascending;\n\t    return function(a, b) {\n\t      return a && b ? comparator(a.__data__, b.__data__) : !a - !b;\n\t    };\n\t  }\n\t  d3_selectionPrototype.each = function(callback) {\n\t    return d3_selection_each(this, function(node, i, j) {\n\t      callback.call(node, node.__data__, i, j);\n\t    });\n\t  };\n\t  function d3_selection_each(groups, callback) {\n\t    for (var j = 0, m = groups.length; j < m; j++) {\n\t      for (var group = groups[j], i = 0, n = group.length, node; i < n; i++) {\n\t        if (node = group[i]) callback(node, i, j);\n\t      }\n\t    }\n\t    return groups;\n\t  }\n\t  d3_selectionPrototype.call = function(callback) {\n\t    var args = d3_array(arguments);\n\t    callback.apply(args[0] = this, args);\n\t    return this;\n\t  };\n\t  d3_selectionPrototype.empty = function() {\n\t    return !this.node();\n\t  };\n\t  d3_selectionPrototype.node = function() {\n\t    for (var j = 0, m = this.length; j < m; j++) {\n\t      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n\t        var node = group[i];\n\t        if (node) return node;\n\t      }\n\t    }\n\t    return null;\n\t  };\n\t  d3_selectionPrototype.size = function() {\n\t    var n = 0;\n\t    d3_selection_each(this, function() {\n\t      ++n;\n\t    });\n\t    return n;\n\t  };\n\t  function d3_selection_enter(selection) {\n\t    d3_subclass(selection, d3_selection_enterPrototype);\n\t    return selection;\n\t  }\n\t  var d3_selection_enterPrototype = [];\n\t  d3.selection.enter = d3_selection_enter;\n\t  d3.selection.enter.prototype = d3_selection_enterPrototype;\n\t  d3_selection_enterPrototype.append = d3_selectionPrototype.append;\n\t  d3_selection_enterPrototype.empty = d3_selectionPrototype.empty;\n\t  d3_selection_enterPrototype.node = d3_selectionPrototype.node;\n\t  d3_selection_enterPrototype.call = d3_selectionPrototype.call;\n\t  d3_selection_enterPrototype.size = d3_selectionPrototype.size;\n\t  d3_selection_enterPrototype.select = function(selector) {\n\t    var subgroups = [], subgroup, subnode, upgroup, group, node;\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      upgroup = (group = this[j]).update;\n\t      subgroups.push(subgroup = []);\n\t      subgroup.parentNode = group.parentNode;\n\t      for (var i = -1, n = group.length; ++i < n; ) {\n\t        if (node = group[i]) {\n\t          subgroup.push(upgroup[i] = subnode = selector.call(group.parentNode, node.__data__, i, j));\n\t          subnode.__data__ = node.__data__;\n\t        } else {\n\t          subgroup.push(null);\n\t        }\n\t      }\n\t    }\n\t    return d3_selection(subgroups);\n\t  };\n\t  d3_selection_enterPrototype.insert = function(name, before) {\n\t    if (arguments.length < 2) before = d3_selection_enterInsertBefore(this);\n\t    return d3_selectionPrototype.insert.call(this, name, before);\n\t  };\n\t  function d3_selection_enterInsertBefore(enter) {\n\t    var i0, j0;\n\t    return function(d, i, j) {\n\t      var group = enter[j].update, n = group.length, node;\n\t      if (j != j0) j0 = j, i0 = 0;\n\t      if (i >= i0) i0 = i + 1;\n\t      while (!(node = group[i0]) && ++i0 < n) ;\n\t      return node;\n\t    };\n\t  }\n\t  d3.select = function(node) {\n\t    var group;\n\t    if (typeof node === \"string\") {\n\t      group = [ d3_select(node, d3_document) ];\n\t      group.parentNode = d3_document.documentElement;\n\t    } else {\n\t      group = [ node ];\n\t      group.parentNode = d3_documentElement(node);\n\t    }\n\t    return d3_selection([ group ]);\n\t  };\n\t  d3.selectAll = function(nodes) {\n\t    var group;\n\t    if (typeof nodes === \"string\") {\n\t      group = d3_array(d3_selectAll(nodes, d3_document));\n\t      group.parentNode = d3_document.documentElement;\n\t    } else {\n\t      group = d3_array(nodes);\n\t      group.parentNode = null;\n\t    }\n\t    return d3_selection([ group ]);\n\t  };\n\t  d3_selectionPrototype.on = function(type, listener, capture) {\n\t    var n = arguments.length;\n\t    if (n < 3) {\n\t      if (typeof type !== \"string\") {\n\t        if (n < 2) listener = false;\n\t        for (capture in type) this.each(d3_selection_on(capture, type[capture], listener));\n\t        return this;\n\t      }\n\t      if (n < 2) return (n = this.node()[\"__on\" + type]) && n._;\n\t      capture = false;\n\t    }\n\t    return this.each(d3_selection_on(type, listener, capture));\n\t  };\n\t  function d3_selection_on(type, listener, capture) {\n\t    var name = \"__on\" + type, i = type.indexOf(\".\"), wrap = d3_selection_onListener;\n\t    if (i > 0) type = type.slice(0, i);\n\t    var filter = d3_selection_onFilters.get(type);\n\t    if (filter) type = filter, wrap = d3_selection_onFilter;\n\t    function onRemove() {\n\t      var l = this[name];\n\t      if (l) {\n\t        this.removeEventListener(type, l, l.$);\n\t        delete this[name];\n\t      }\n\t    }\n\t    function onAdd() {\n\t      var l = wrap(listener, d3_array(arguments));\n\t      onRemove.call(this);\n\t      this.addEventListener(type, this[name] = l, l.$ = capture);\n\t      l._ = listener;\n\t    }\n\t    function removeAll() {\n\t      var re = new RegExp(\"^__on([^.]+)\" + d3.requote(type) + \"$\"), match;\n\t      for (var name in this) {\n\t        if (match = name.match(re)) {\n\t          var l = this[name];\n\t          this.removeEventListener(match[1], l, l.$);\n\t          delete this[name];\n\t        }\n\t      }\n\t    }\n\t    return i ? listener ? onAdd : onRemove : listener ? d3_noop : removeAll;\n\t  }\n\t  var d3_selection_onFilters = d3.map({\n\t    mouseenter: \"mouseover\",\n\t    mouseleave: \"mouseout\"\n\t  });\n\t  if (d3_document) {\n\t    d3_selection_onFilters.forEach(function(k) {\n\t      if (\"on\" + k in d3_document) d3_selection_onFilters.remove(k);\n\t    });\n\t  }\n\t  function d3_selection_onListener(listener, argumentz) {\n\t    return function(e) {\n\t      var o = d3.event;\n\t      d3.event = e;\n\t      argumentz[0] = this.__data__;\n\t      try {\n\t        listener.apply(this, argumentz);\n\t      } finally {\n\t        d3.event = o;\n\t      }\n\t    };\n\t  }\n\t  function d3_selection_onFilter(listener, argumentz) {\n\t    var l = d3_selection_onListener(listener, argumentz);\n\t    return function(e) {\n\t      var target = this, related = e.relatedTarget;\n\t      if (!related || related !== target && !(related.compareDocumentPosition(target) & 8)) {\n\t        l.call(target, e);\n\t      }\n\t    };\n\t  }\n\t  var d3_event_dragSelect, d3_event_dragId = 0;\n\t  function d3_event_dragSuppress(node) {\n\t    var name = \".dragsuppress-\" + ++d3_event_dragId, click = \"click\" + name, w = d3.select(d3_window(node)).on(\"touchmove\" + name, d3_eventPreventDefault).on(\"dragstart\" + name, d3_eventPreventDefault).on(\"selectstart\" + name, d3_eventPreventDefault);\n\t    if (d3_event_dragSelect == null) {\n\t      d3_event_dragSelect = \"onselectstart\" in node ? false : d3_vendorSymbol(node.style, \"userSelect\");\n\t    }\n\t    if (d3_event_dragSelect) {\n\t      var style = d3_documentElement(node).style, select = style[d3_event_dragSelect];\n\t      style[d3_event_dragSelect] = \"none\";\n\t    }\n\t    return function(suppressClick) {\n\t      w.on(name, null);\n\t      if (d3_event_dragSelect) style[d3_event_dragSelect] = select;\n\t      if (suppressClick) {\n\t        var off = function() {\n\t          w.on(click, null);\n\t        };\n\t        w.on(click, function() {\n\t          d3_eventPreventDefault();\n\t          off();\n\t        }, true);\n\t        setTimeout(off, 0);\n\t      }\n\t    };\n\t  }\n\t  d3.mouse = function(container) {\n\t    return d3_mousePoint(container, d3_eventSource());\n\t  };\n\t  var d3_mouse_bug44083 = this.navigator && /WebKit/.test(this.navigator.userAgent) ? -1 : 0;\n\t  function d3_mousePoint(container, e) {\n\t    if (e.changedTouches) e = e.changedTouches[0];\n\t    var svg = container.ownerSVGElement || container;\n\t    if (svg.createSVGPoint) {\n\t      var point = svg.createSVGPoint();\n\t      if (d3_mouse_bug44083 < 0) {\n\t        var window = d3_window(container);\n\t        if (window.scrollX || window.scrollY) {\n\t          svg = d3.select(\"body\").append(\"svg\").style({\n\t            position: \"absolute\",\n\t            top: 0,\n\t            left: 0,\n\t            margin: 0,\n\t            padding: 0,\n\t            border: \"none\"\n\t          }, \"important\");\n\t          var ctm = svg[0][0].getScreenCTM();\n\t          d3_mouse_bug44083 = !(ctm.f || ctm.e);\n\t          svg.remove();\n\t        }\n\t      }\n\t      if (d3_mouse_bug44083) point.x = e.pageX, point.y = e.pageY; else point.x = e.clientX, \n\t      point.y = e.clientY;\n\t      point = point.matrixTransform(container.getScreenCTM().inverse());\n\t      return [ point.x, point.y ];\n\t    }\n\t    var rect = container.getBoundingClientRect();\n\t    return [ e.clientX - rect.left - container.clientLeft, e.clientY - rect.top - container.clientTop ];\n\t  }\n\t  d3.touch = function(container, touches, identifier) {\n\t    if (arguments.length < 3) identifier = touches, touches = d3_eventSource().changedTouches;\n\t    if (touches) for (var i = 0, n = touches.length, touch; i < n; ++i) {\n\t      if ((touch = touches[i]).identifier === identifier) {\n\t        return d3_mousePoint(container, touch);\n\t      }\n\t    }\n\t  };\n\t  d3.behavior.drag = function() {\n\t    var event = d3_eventDispatch(drag, \"drag\", \"dragstart\", \"dragend\"), origin = null, mousedown = dragstart(d3_noop, d3.mouse, d3_window, \"mousemove\", \"mouseup\"), touchstart = dragstart(d3_behavior_dragTouchId, d3.touch, d3_identity, \"touchmove\", \"touchend\");\n\t    function drag() {\n\t      this.on(\"mousedown.drag\", mousedown).on(\"touchstart.drag\", touchstart);\n\t    }\n\t    function dragstart(id, position, subject, move, end) {\n\t      return function() {\n\t        var that = this, target = d3.event.target, parent = that.parentNode, dispatch = event.of(that, arguments), dragged = 0, dragId = id(), dragName = \".drag\" + (dragId == null ? \"\" : \"-\" + dragId), dragOffset, dragSubject = d3.select(subject(target)).on(move + dragName, moved).on(end + dragName, ended), dragRestore = d3_event_dragSuppress(target), position0 = position(parent, dragId);\n\t        if (origin) {\n\t          dragOffset = origin.apply(that, arguments);\n\t          dragOffset = [ dragOffset.x - position0[0], dragOffset.y - position0[1] ];\n\t        } else {\n\t          dragOffset = [ 0, 0 ];\n\t        }\n\t        dispatch({\n\t          type: \"dragstart\"\n\t        });\n\t        function moved() {\n\t          var position1 = position(parent, dragId), dx, dy;\n\t          if (!position1) return;\n\t          dx = position1[0] - position0[0];\n\t          dy = position1[1] - position0[1];\n\t          dragged |= dx | dy;\n\t          position0 = position1;\n\t          dispatch({\n\t            type: \"drag\",\n\t            x: position1[0] + dragOffset[0],\n\t            y: position1[1] + dragOffset[1],\n\t            dx: dx,\n\t            dy: dy\n\t          });\n\t        }\n\t        function ended() {\n\t          if (!position(parent, dragId)) return;\n\t          dragSubject.on(move + dragName, null).on(end + dragName, null);\n\t          dragRestore(dragged);\n\t          dispatch({\n\t            type: \"dragend\"\n\t          });\n\t        }\n\t      };\n\t    }\n\t    drag.origin = function(x) {\n\t      if (!arguments.length) return origin;\n\t      origin = x;\n\t      return drag;\n\t    };\n\t    return d3.rebind(drag, event, \"on\");\n\t  };\n\t  function d3_behavior_dragTouchId() {\n\t    return d3.event.changedTouches[0].identifier;\n\t  }\n\t  d3.touches = function(container, touches) {\n\t    if (arguments.length < 2) touches = d3_eventSource().touches;\n\t    return touches ? d3_array(touches).map(function(touch) {\n\t      var point = d3_mousePoint(container, touch);\n\t      point.identifier = touch.identifier;\n\t      return point;\n\t    }) : [];\n\t  };\n\t  var ε = 1e-6, ε2 = ε * ε, π = Math.PI, τ = 2 * π, τε = τ - ε, halfπ = π / 2, d3_radians = π / 180, d3_degrees = 180 / π;\n\t  function d3_sgn(x) {\n\t    return x > 0 ? 1 : x < 0 ? -1 : 0;\n\t  }\n\t  function d3_cross2d(a, b, c) {\n\t    return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);\n\t  }\n\t  function d3_acos(x) {\n\t    return x > 1 ? 0 : x < -1 ? π : Math.acos(x);\n\t  }\n\t  function d3_asin(x) {\n\t    return x > 1 ? halfπ : x < -1 ? -halfπ : Math.asin(x);\n\t  }\n\t  function d3_sinh(x) {\n\t    return ((x = Math.exp(x)) - 1 / x) / 2;\n\t  }\n\t  function d3_cosh(x) {\n\t    return ((x = Math.exp(x)) + 1 / x) / 2;\n\t  }\n\t  function d3_tanh(x) {\n\t    return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n\t  }\n\t  function d3_haversin(x) {\n\t    return (x = Math.sin(x / 2)) * x;\n\t  }\n\t  var ρ = Math.SQRT2, ρ2 = 2, ρ4 = 4;\n\t  d3.interpolateZoom = function(p0, p1) {\n\t    var ux0 = p0[0], uy0 = p0[1], w0 = p0[2], ux1 = p1[0], uy1 = p1[1], w1 = p1[2], dx = ux1 - ux0, dy = uy1 - uy0, d2 = dx * dx + dy * dy, i, S;\n\t    if (d2 < ε2) {\n\t      S = Math.log(w1 / w0) / ρ;\n\t      i = function(t) {\n\t        return [ ux0 + t * dx, uy0 + t * dy, w0 * Math.exp(ρ * t * S) ];\n\t      };\n\t    } else {\n\t      var d1 = Math.sqrt(d2), b0 = (w1 * w1 - w0 * w0 + ρ4 * d2) / (2 * w0 * ρ2 * d1), b1 = (w1 * w1 - w0 * w0 - ρ4 * d2) / (2 * w1 * ρ2 * d1), r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0), r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n\t      S = (r1 - r0) / ρ;\n\t      i = function(t) {\n\t        var s = t * S, coshr0 = d3_cosh(r0), u = w0 / (ρ2 * d1) * (coshr0 * d3_tanh(ρ * s + r0) - d3_sinh(r0));\n\t        return [ ux0 + u * dx, uy0 + u * dy, w0 * coshr0 / d3_cosh(ρ * s + r0) ];\n\t      };\n\t    }\n\t    i.duration = S * 1e3;\n\t    return i;\n\t  };\n\t  d3.behavior.zoom = function() {\n\t    var view = {\n\t      x: 0,\n\t      y: 0,\n\t      k: 1\n\t    }, translate0, center0, center, size = [ 960, 500 ], scaleExtent = d3_behavior_zoomInfinity, duration = 250, zooming = 0, mousedown = \"mousedown.zoom\", mousemove = \"mousemove.zoom\", mouseup = \"mouseup.zoom\", mousewheelTimer, touchstart = \"touchstart.zoom\", touchtime, event = d3_eventDispatch(zoom, \"zoomstart\", \"zoom\", \"zoomend\"), x0, x1, y0, y1;\n\t    if (!d3_behavior_zoomWheel) {\n\t      d3_behavior_zoomWheel = \"onwheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n\t        return -d3.event.deltaY * (d3.event.deltaMode ? 120 : 1);\n\t      }, \"wheel\") : \"onmousewheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n\t        return d3.event.wheelDelta;\n\t      }, \"mousewheel\") : (d3_behavior_zoomDelta = function() {\n\t        return -d3.event.detail;\n\t      }, \"MozMousePixelScroll\");\n\t    }\n\t    function zoom(g) {\n\t      g.on(mousedown, mousedowned).on(d3_behavior_zoomWheel + \".zoom\", mousewheeled).on(\"dblclick.zoom\", dblclicked).on(touchstart, touchstarted);\n\t    }\n\t    zoom.event = function(g) {\n\t      g.each(function() {\n\t        var dispatch = event.of(this, arguments), view1 = view;\n\t        if (d3_transitionInheritId) {\n\t          d3.select(this).transition().each(\"start.zoom\", function() {\n\t            view = this.__chart__ || {\n\t              x: 0,\n\t              y: 0,\n\t              k: 1\n\t            };\n\t            zoomstarted(dispatch);\n\t          }).tween(\"zoom:zoom\", function() {\n\t            var dx = size[0], dy = size[1], cx = center0 ? center0[0] : dx / 2, cy = center0 ? center0[1] : dy / 2, i = d3.interpolateZoom([ (cx - view.x) / view.k, (cy - view.y) / view.k, dx / view.k ], [ (cx - view1.x) / view1.k, (cy - view1.y) / view1.k, dx / view1.k ]);\n\t            return function(t) {\n\t              var l = i(t), k = dx / l[2];\n\t              this.__chart__ = view = {\n\t                x: cx - l[0] * k,\n\t                y: cy - l[1] * k,\n\t                k: k\n\t              };\n\t              zoomed(dispatch);\n\t            };\n\t          }).each(\"interrupt.zoom\", function() {\n\t            zoomended(dispatch);\n\t          }).each(\"end.zoom\", function() {\n\t            zoomended(dispatch);\n\t          });\n\t        } else {\n\t          this.__chart__ = view;\n\t          zoomstarted(dispatch);\n\t          zoomed(dispatch);\n\t          zoomended(dispatch);\n\t        }\n\t      });\n\t    };\n\t    zoom.translate = function(_) {\n\t      if (!arguments.length) return [ view.x, view.y ];\n\t      view = {\n\t        x: +_[0],\n\t        y: +_[1],\n\t        k: view.k\n\t      };\n\t      rescale();\n\t      return zoom;\n\t    };\n\t    zoom.scale = function(_) {\n\t      if (!arguments.length) return view.k;\n\t      view = {\n\t        x: view.x,\n\t        y: view.y,\n\t        k: null\n\t      };\n\t      scaleTo(+_);\n\t      rescale();\n\t      return zoom;\n\t    };\n\t    zoom.scaleExtent = function(_) {\n\t      if (!arguments.length) return scaleExtent;\n\t      scaleExtent = _ == null ? d3_behavior_zoomInfinity : [ +_[0], +_[1] ];\n\t      return zoom;\n\t    };\n\t    zoom.center = function(_) {\n\t      if (!arguments.length) return center;\n\t      center = _ && [ +_[0], +_[1] ];\n\t      return zoom;\n\t    };\n\t    zoom.size = function(_) {\n\t      if (!arguments.length) return size;\n\t      size = _ && [ +_[0], +_[1] ];\n\t      return zoom;\n\t    };\n\t    zoom.duration = function(_) {\n\t      if (!arguments.length) return duration;\n\t      duration = +_;\n\t      return zoom;\n\t    };\n\t    zoom.x = function(z) {\n\t      if (!arguments.length) return x1;\n\t      x1 = z;\n\t      x0 = z.copy();\n\t      view = {\n\t        x: 0,\n\t        y: 0,\n\t        k: 1\n\t      };\n\t      return zoom;\n\t    };\n\t    zoom.y = function(z) {\n\t      if (!arguments.length) return y1;\n\t      y1 = z;\n\t      y0 = z.copy();\n\t      view = {\n\t        x: 0,\n\t        y: 0,\n\t        k: 1\n\t      };\n\t      return zoom;\n\t    };\n\t    function location(p) {\n\t      return [ (p[0] - view.x) / view.k, (p[1] - view.y) / view.k ];\n\t    }\n\t    function point(l) {\n\t      return [ l[0] * view.k + view.x, l[1] * view.k + view.y ];\n\t    }\n\t    function scaleTo(s) {\n\t      view.k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], s));\n\t    }\n\t    function translateTo(p, l) {\n\t      l = point(l);\n\t      view.x += p[0] - l[0];\n\t      view.y += p[1] - l[1];\n\t    }\n\t    function zoomTo(that, p, l, k) {\n\t      that.__chart__ = {\n\t        x: view.x,\n\t        y: view.y,\n\t        k: view.k\n\t      };\n\t      scaleTo(Math.pow(2, k));\n\t      translateTo(center0 = p, l);\n\t      that = d3.select(that);\n\t      if (duration > 0) that = that.transition().duration(duration);\n\t      that.call(zoom.event);\n\t    }\n\t    function rescale() {\n\t      if (x1) x1.domain(x0.range().map(function(x) {\n\t        return (x - view.x) / view.k;\n\t      }).map(x0.invert));\n\t      if (y1) y1.domain(y0.range().map(function(y) {\n\t        return (y - view.y) / view.k;\n\t      }).map(y0.invert));\n\t    }\n\t    function zoomstarted(dispatch) {\n\t      if (!zooming++) dispatch({\n\t        type: \"zoomstart\"\n\t      });\n\t    }\n\t    function zoomed(dispatch) {\n\t      rescale();\n\t      dispatch({\n\t        type: \"zoom\",\n\t        scale: view.k,\n\t        translate: [ view.x, view.y ]\n\t      });\n\t    }\n\t    function zoomended(dispatch) {\n\t      if (!--zooming) dispatch({\n\t        type: \"zoomend\"\n\t      }), center0 = null;\n\t    }\n\t    function mousedowned() {\n\t      var that = this, dispatch = event.of(that, arguments), dragged = 0, subject = d3.select(d3_window(that)).on(mousemove, moved).on(mouseup, ended), location0 = location(d3.mouse(that)), dragRestore = d3_event_dragSuppress(that);\n\t      d3_selection_interrupt.call(that);\n\t      zoomstarted(dispatch);\n\t      function moved() {\n\t        dragged = 1;\n\t        translateTo(d3.mouse(that), location0);\n\t        zoomed(dispatch);\n\t      }\n\t      function ended() {\n\t        subject.on(mousemove, null).on(mouseup, null);\n\t        dragRestore(dragged);\n\t        zoomended(dispatch);\n\t      }\n\t    }\n\t    function touchstarted() {\n\t      var that = this, dispatch = event.of(that, arguments), locations0 = {}, distance0 = 0, scale0, zoomName = \".zoom-\" + d3.event.changedTouches[0].identifier, touchmove = \"touchmove\" + zoomName, touchend = \"touchend\" + zoomName, targets = [], subject = d3.select(that), dragRestore = d3_event_dragSuppress(that);\n\t      started();\n\t      zoomstarted(dispatch);\n\t      subject.on(mousedown, null).on(touchstart, started);\n\t      function relocate() {\n\t        var touches = d3.touches(that);\n\t        scale0 = view.k;\n\t        touches.forEach(function(t) {\n\t          if (t.identifier in locations0) locations0[t.identifier] = location(t);\n\t        });\n\t        return touches;\n\t      }\n\t      function started() {\n\t        var target = d3.event.target;\n\t        d3.select(target).on(touchmove, moved).on(touchend, ended);\n\t        targets.push(target);\n\t        var changed = d3.event.changedTouches;\n\t        for (var i = 0, n = changed.length; i < n; ++i) {\n\t          locations0[changed[i].identifier] = null;\n\t        }\n\t        var touches = relocate(), now = Date.now();\n\t        if (touches.length === 1) {\n\t          if (now - touchtime < 500) {\n\t            var p = touches[0];\n\t            zoomTo(that, p, locations0[p.identifier], Math.floor(Math.log(view.k) / Math.LN2) + 1);\n\t            d3_eventPreventDefault();\n\t          }\n\t          touchtime = now;\n\t        } else if (touches.length > 1) {\n\t          var p = touches[0], q = touches[1], dx = p[0] - q[0], dy = p[1] - q[1];\n\t          distance0 = dx * dx + dy * dy;\n\t        }\n\t      }\n\t      function moved() {\n\t        var touches = d3.touches(that), p0, l0, p1, l1;\n\t        d3_selection_interrupt.call(that);\n\t        for (var i = 0, n = touches.length; i < n; ++i, l1 = null) {\n\t          p1 = touches[i];\n\t          if (l1 = locations0[p1.identifier]) {\n\t            if (l0) break;\n\t            p0 = p1, l0 = l1;\n\t          }\n\t        }\n\t        if (l1) {\n\t          var distance1 = (distance1 = p1[0] - p0[0]) * distance1 + (distance1 = p1[1] - p0[1]) * distance1, scale1 = distance0 && Math.sqrt(distance1 / distance0);\n\t          p0 = [ (p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2 ];\n\t          l0 = [ (l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2 ];\n\t          scaleTo(scale1 * scale0);\n\t        }\n\t        touchtime = null;\n\t        translateTo(p0, l0);\n\t        zoomed(dispatch);\n\t      }\n\t      function ended() {\n\t        if (d3.event.touches.length) {\n\t          var changed = d3.event.changedTouches;\n\t          for (var i = 0, n = changed.length; i < n; ++i) {\n\t            delete locations0[changed[i].identifier];\n\t          }\n\t          for (var identifier in locations0) {\n\t            return void relocate();\n\t          }\n\t        }\n\t        d3.selectAll(targets).on(zoomName, null);\n\t        subject.on(mousedown, mousedowned).on(touchstart, touchstarted);\n\t        dragRestore();\n\t        zoomended(dispatch);\n\t      }\n\t    }\n\t    function mousewheeled() {\n\t      var dispatch = event.of(this, arguments);\n\t      if (mousewheelTimer) clearTimeout(mousewheelTimer); else d3_selection_interrupt.call(this), \n\t      translate0 = location(center0 = center || d3.mouse(this)), zoomstarted(dispatch);\n\t      mousewheelTimer = setTimeout(function() {\n\t        mousewheelTimer = null;\n\t        zoomended(dispatch);\n\t      }, 50);\n\t      d3_eventPreventDefault();\n\t      scaleTo(Math.pow(2, d3_behavior_zoomDelta() * .002) * view.k);\n\t      translateTo(center0, translate0);\n\t      zoomed(dispatch);\n\t    }\n\t    function dblclicked() {\n\t      var p = d3.mouse(this), k = Math.log(view.k) / Math.LN2;\n\t      zoomTo(this, p, location(p), d3.event.shiftKey ? Math.ceil(k) - 1 : Math.floor(k) + 1);\n\t    }\n\t    return d3.rebind(zoom, event, \"on\");\n\t  };\n\t  var d3_behavior_zoomInfinity = [ 0, Infinity ], d3_behavior_zoomDelta, d3_behavior_zoomWheel;\n\t  d3.color = d3_color;\n\t  function d3_color() {}\n\t  d3_color.prototype.toString = function() {\n\t    return this.rgb() + \"\";\n\t  };\n\t  d3.hsl = d3_hsl;\n\t  function d3_hsl(h, s, l) {\n\t    return this instanceof d3_hsl ? void (this.h = +h, this.s = +s, this.l = +l) : arguments.length < 2 ? h instanceof d3_hsl ? new d3_hsl(h.h, h.s, h.l) : d3_rgb_parse(\"\" + h, d3_rgb_hsl, d3_hsl) : new d3_hsl(h, s, l);\n\t  }\n\t  var d3_hslPrototype = d3_hsl.prototype = new d3_color();\n\t  d3_hslPrototype.brighter = function(k) {\n\t    k = Math.pow(.7, arguments.length ? k : 1);\n\t    return new d3_hsl(this.h, this.s, this.l / k);\n\t  };\n\t  d3_hslPrototype.darker = function(k) {\n\t    k = Math.pow(.7, arguments.length ? k : 1);\n\t    return new d3_hsl(this.h, this.s, k * this.l);\n\t  };\n\t  d3_hslPrototype.rgb = function() {\n\t    return d3_hsl_rgb(this.h, this.s, this.l);\n\t  };\n\t  function d3_hsl_rgb(h, s, l) {\n\t    var m1, m2;\n\t    h = isNaN(h) ? 0 : (h %= 360) < 0 ? h + 360 : h;\n\t    s = isNaN(s) ? 0 : s < 0 ? 0 : s > 1 ? 1 : s;\n\t    l = l < 0 ? 0 : l > 1 ? 1 : l;\n\t    m2 = l <= .5 ? l * (1 + s) : l + s - l * s;\n\t    m1 = 2 * l - m2;\n\t    function v(h) {\n\t      if (h > 360) h -= 360; else if (h < 0) h += 360;\n\t      if (h < 60) return m1 + (m2 - m1) * h / 60;\n\t      if (h < 180) return m2;\n\t      if (h < 240) return m1 + (m2 - m1) * (240 - h) / 60;\n\t      return m1;\n\t    }\n\t    function vv(h) {\n\t      return Math.round(v(h) * 255);\n\t    }\n\t    return new d3_rgb(vv(h + 120), vv(h), vv(h - 120));\n\t  }\n\t  d3.hcl = d3_hcl;\n\t  function d3_hcl(h, c, l) {\n\t    return this instanceof d3_hcl ? void (this.h = +h, this.c = +c, this.l = +l) : arguments.length < 2 ? h instanceof d3_hcl ? new d3_hcl(h.h, h.c, h.l) : h instanceof d3_lab ? d3_lab_hcl(h.l, h.a, h.b) : d3_lab_hcl((h = d3_rgb_lab((h = d3.rgb(h)).r, h.g, h.b)).l, h.a, h.b) : new d3_hcl(h, c, l);\n\t  }\n\t  var d3_hclPrototype = d3_hcl.prototype = new d3_color();\n\t  d3_hclPrototype.brighter = function(k) {\n\t    return new d3_hcl(this.h, this.c, Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)));\n\t  };\n\t  d3_hclPrototype.darker = function(k) {\n\t    return new d3_hcl(this.h, this.c, Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)));\n\t  };\n\t  d3_hclPrototype.rgb = function() {\n\t    return d3_hcl_lab(this.h, this.c, this.l).rgb();\n\t  };\n\t  function d3_hcl_lab(h, c, l) {\n\t    if (isNaN(h)) h = 0;\n\t    if (isNaN(c)) c = 0;\n\t    return new d3_lab(l, Math.cos(h *= d3_radians) * c, Math.sin(h) * c);\n\t  }\n\t  d3.lab = d3_lab;\n\t  function d3_lab(l, a, b) {\n\t    return this instanceof d3_lab ? void (this.l = +l, this.a = +a, this.b = +b) : arguments.length < 2 ? l instanceof d3_lab ? new d3_lab(l.l, l.a, l.b) : l instanceof d3_hcl ? d3_hcl_lab(l.h, l.c, l.l) : d3_rgb_lab((l = d3_rgb(l)).r, l.g, l.b) : new d3_lab(l, a, b);\n\t  }\n\t  var d3_lab_K = 18;\n\t  var d3_lab_X = .95047, d3_lab_Y = 1, d3_lab_Z = 1.08883;\n\t  var d3_labPrototype = d3_lab.prototype = new d3_color();\n\t  d3_labPrototype.brighter = function(k) {\n\t    return new d3_lab(Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n\t  };\n\t  d3_labPrototype.darker = function(k) {\n\t    return new d3_lab(Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n\t  };\n\t  d3_labPrototype.rgb = function() {\n\t    return d3_lab_rgb(this.l, this.a, this.b);\n\t  };\n\t  function d3_lab_rgb(l, a, b) {\n\t    var y = (l + 16) / 116, x = y + a / 500, z = y - b / 200;\n\t    x = d3_lab_xyz(x) * d3_lab_X;\n\t    y = d3_lab_xyz(y) * d3_lab_Y;\n\t    z = d3_lab_xyz(z) * d3_lab_Z;\n\t    return new d3_rgb(d3_xyz_rgb(3.2404542 * x - 1.5371385 * y - .4985314 * z), d3_xyz_rgb(-.969266 * x + 1.8760108 * y + .041556 * z), d3_xyz_rgb(.0556434 * x - .2040259 * y + 1.0572252 * z));\n\t  }\n\t  function d3_lab_hcl(l, a, b) {\n\t    return l > 0 ? new d3_hcl(Math.atan2(b, a) * d3_degrees, Math.sqrt(a * a + b * b), l) : new d3_hcl(NaN, NaN, l);\n\t  }\n\t  function d3_lab_xyz(x) {\n\t    return x > .206893034 ? x * x * x : (x - 4 / 29) / 7.787037;\n\t  }\n\t  function d3_xyz_lab(x) {\n\t    return x > .008856 ? Math.pow(x, 1 / 3) : 7.787037 * x + 4 / 29;\n\t  }\n\t  function d3_xyz_rgb(r) {\n\t    return Math.round(255 * (r <= .00304 ? 12.92 * r : 1.055 * Math.pow(r, 1 / 2.4) - .055));\n\t  }\n\t  d3.rgb = d3_rgb;\n\t  function d3_rgb(r, g, b) {\n\t    return this instanceof d3_rgb ? void (this.r = ~~r, this.g = ~~g, this.b = ~~b) : arguments.length < 2 ? r instanceof d3_rgb ? new d3_rgb(r.r, r.g, r.b) : d3_rgb_parse(\"\" + r, d3_rgb, d3_hsl_rgb) : new d3_rgb(r, g, b);\n\t  }\n\t  function d3_rgbNumber(value) {\n\t    return new d3_rgb(value >> 16, value >> 8 & 255, value & 255);\n\t  }\n\t  function d3_rgbString(value) {\n\t    return d3_rgbNumber(value) + \"\";\n\t  }\n\t  var d3_rgbPrototype = d3_rgb.prototype = new d3_color();\n\t  d3_rgbPrototype.brighter = function(k) {\n\t    k = Math.pow(.7, arguments.length ? k : 1);\n\t    var r = this.r, g = this.g, b = this.b, i = 30;\n\t    if (!r && !g && !b) return new d3_rgb(i, i, i);\n\t    if (r && r < i) r = i;\n\t    if (g && g < i) g = i;\n\t    if (b && b < i) b = i;\n\t    return new d3_rgb(Math.min(255, r / k), Math.min(255, g / k), Math.min(255, b / k));\n\t  };\n\t  d3_rgbPrototype.darker = function(k) {\n\t    k = Math.pow(.7, arguments.length ? k : 1);\n\t    return new d3_rgb(k * this.r, k * this.g, k * this.b);\n\t  };\n\t  d3_rgbPrototype.hsl = function() {\n\t    return d3_rgb_hsl(this.r, this.g, this.b);\n\t  };\n\t  d3_rgbPrototype.toString = function() {\n\t    return \"#\" + d3_rgb_hex(this.r) + d3_rgb_hex(this.g) + d3_rgb_hex(this.b);\n\t  };\n\t  function d3_rgb_hex(v) {\n\t    return v < 16 ? \"0\" + Math.max(0, v).toString(16) : Math.min(255, v).toString(16);\n\t  }\n\t  function d3_rgb_parse(format, rgb, hsl) {\n\t    var r = 0, g = 0, b = 0, m1, m2, color;\n\t    m1 = /([a-z]+)\\((.*)\\)/.exec(format = format.toLowerCase());\n\t    if (m1) {\n\t      m2 = m1[2].split(\",\");\n\t      switch (m1[1]) {\n\t       case \"hsl\":\n\t        {\n\t          return hsl(parseFloat(m2[0]), parseFloat(m2[1]) / 100, parseFloat(m2[2]) / 100);\n\t        }\n\t\n\t       case \"rgb\":\n\t        {\n\t          return rgb(d3_rgb_parseNumber(m2[0]), d3_rgb_parseNumber(m2[1]), d3_rgb_parseNumber(m2[2]));\n\t        }\n\t      }\n\t    }\n\t    if (color = d3_rgb_names.get(format)) {\n\t      return rgb(color.r, color.g, color.b);\n\t    }\n\t    if (format != null && format.charAt(0) === \"#\" && !isNaN(color = parseInt(format.slice(1), 16))) {\n\t      if (format.length === 4) {\n\t        r = (color & 3840) >> 4;\n\t        r = r >> 4 | r;\n\t        g = color & 240;\n\t        g = g >> 4 | g;\n\t        b = color & 15;\n\t        b = b << 4 | b;\n\t      } else if (format.length === 7) {\n\t        r = (color & 16711680) >> 16;\n\t        g = (color & 65280) >> 8;\n\t        b = color & 255;\n\t      }\n\t    }\n\t    return rgb(r, g, b);\n\t  }\n\t  function d3_rgb_hsl(r, g, b) {\n\t    var min = Math.min(r /= 255, g /= 255, b /= 255), max = Math.max(r, g, b), d = max - min, h, s, l = (max + min) / 2;\n\t    if (d) {\n\t      s = l < .5 ? d / (max + min) : d / (2 - max - min);\n\t      if (r == max) h = (g - b) / d + (g < b ? 6 : 0); else if (g == max) h = (b - r) / d + 2; else h = (r - g) / d + 4;\n\t      h *= 60;\n\t    } else {\n\t      h = NaN;\n\t      s = l > 0 && l < 1 ? 0 : h;\n\t    }\n\t    return new d3_hsl(h, s, l);\n\t  }\n\t  function d3_rgb_lab(r, g, b) {\n\t    r = d3_rgb_xyz(r);\n\t    g = d3_rgb_xyz(g);\n\t    b = d3_rgb_xyz(b);\n\t    var x = d3_xyz_lab((.4124564 * r + .3575761 * g + .1804375 * b) / d3_lab_X), y = d3_xyz_lab((.2126729 * r + .7151522 * g + .072175 * b) / d3_lab_Y), z = d3_xyz_lab((.0193339 * r + .119192 * g + .9503041 * b) / d3_lab_Z);\n\t    return d3_lab(116 * y - 16, 500 * (x - y), 200 * (y - z));\n\t  }\n\t  function d3_rgb_xyz(r) {\n\t    return (r /= 255) <= .04045 ? r / 12.92 : Math.pow((r + .055) / 1.055, 2.4);\n\t  }\n\t  function d3_rgb_parseNumber(c) {\n\t    var f = parseFloat(c);\n\t    return c.charAt(c.length - 1) === \"%\" ? Math.round(f * 2.55) : f;\n\t  }\n\t  var d3_rgb_names = d3.map({\n\t    aliceblue: 15792383,\n\t    antiquewhite: 16444375,\n\t    aqua: 65535,\n\t    aquamarine: 8388564,\n\t    azure: 15794175,\n\t    beige: 16119260,\n\t    bisque: 16770244,\n\t    black: 0,\n\t    blanchedalmond: 16772045,\n\t    blue: 255,\n\t    blueviolet: 9055202,\n\t    brown: 10824234,\n\t    burlywood: 14596231,\n\t    cadetblue: 6266528,\n\t    chartreuse: 8388352,\n\t    chocolate: 13789470,\n\t    coral: 16744272,\n\t    cornflowerblue: 6591981,\n\t    cornsilk: 16775388,\n\t    crimson: 14423100,\n\t    cyan: 65535,\n\t    darkblue: 139,\n\t    darkcyan: 35723,\n\t    darkgoldenrod: 12092939,\n\t    darkgray: 11119017,\n\t    darkgreen: 25600,\n\t    darkgrey: 11119017,\n\t    darkkhaki: 12433259,\n\t    darkmagenta: 9109643,\n\t    darkolivegreen: 5597999,\n\t    darkorange: 16747520,\n\t    darkorchid: 10040012,\n\t    darkred: 9109504,\n\t    darksalmon: 15308410,\n\t    darkseagreen: 9419919,\n\t    darkslateblue: 4734347,\n\t    darkslategray: 3100495,\n\t    darkslategrey: 3100495,\n\t    darkturquoise: 52945,\n\t    darkviolet: 9699539,\n\t    deeppink: 16716947,\n\t    deepskyblue: 49151,\n\t    dimgray: 6908265,\n\t    dimgrey: 6908265,\n\t    dodgerblue: 2003199,\n\t    firebrick: 11674146,\n\t    floralwhite: 16775920,\n\t    forestgreen: 2263842,\n\t    fuchsia: 16711935,\n\t    gainsboro: 14474460,\n\t    ghostwhite: 16316671,\n\t    gold: 16766720,\n\t    goldenrod: 14329120,\n\t    gray: 8421504,\n\t    green: 32768,\n\t    greenyellow: 11403055,\n\t    grey: 8421504,\n\t    honeydew: 15794160,\n\t    hotpink: 16738740,\n\t    indianred: 13458524,\n\t    indigo: 4915330,\n\t    ivory: 16777200,\n\t    khaki: 15787660,\n\t    lavender: 15132410,\n\t    lavenderblush: 16773365,\n\t    lawngreen: 8190976,\n\t    lemonchiffon: 16775885,\n\t    lightblue: 11393254,\n\t    lightcoral: 15761536,\n\t    lightcyan: 14745599,\n\t    lightgoldenrodyellow: 16448210,\n\t    lightgray: 13882323,\n\t    lightgreen: 9498256,\n\t    lightgrey: 13882323,\n\t    lightpink: 16758465,\n\t    lightsalmon: 16752762,\n\t    lightseagreen: 2142890,\n\t    lightskyblue: 8900346,\n\t    lightslategray: 7833753,\n\t    lightslategrey: 7833753,\n\t    lightsteelblue: 11584734,\n\t    lightyellow: 16777184,\n\t    lime: 65280,\n\t    limegreen: 3329330,\n\t    linen: 16445670,\n\t    magenta: 16711935,\n\t    maroon: 8388608,\n\t    mediumaquamarine: 6737322,\n\t    mediumblue: 205,\n\t    mediumorchid: 12211667,\n\t    mediumpurple: 9662683,\n\t    mediumseagreen: 3978097,\n\t    mediumslateblue: 8087790,\n\t    mediumspringgreen: 64154,\n\t    mediumturquoise: 4772300,\n\t    mediumvioletred: 13047173,\n\t    midnightblue: 1644912,\n\t    mintcream: 16121850,\n\t    mistyrose: 16770273,\n\t    moccasin: 16770229,\n\t    navajowhite: 16768685,\n\t    navy: 128,\n\t    oldlace: 16643558,\n\t    olive: 8421376,\n\t    olivedrab: 7048739,\n\t    orange: 16753920,\n\t    orangered: 16729344,\n\t    orchid: 14315734,\n\t    palegoldenrod: 15657130,\n\t    palegreen: 10025880,\n\t    paleturquoise: 11529966,\n\t    palevioletred: 14381203,\n\t    papayawhip: 16773077,\n\t    peachpuff: 16767673,\n\t    peru: 13468991,\n\t    pink: 16761035,\n\t    plum: 14524637,\n\t    powderblue: 11591910,\n\t    purple: 8388736,\n\t    rebeccapurple: 6697881,\n\t    red: 16711680,\n\t    rosybrown: 12357519,\n\t    royalblue: 4286945,\n\t    saddlebrown: 9127187,\n\t    salmon: 16416882,\n\t    sandybrown: 16032864,\n\t    seagreen: 3050327,\n\t    seashell: 16774638,\n\t    sienna: 10506797,\n\t    silver: 12632256,\n\t    skyblue: 8900331,\n\t    slateblue: 6970061,\n\t    slategray: 7372944,\n\t    slategrey: 7372944,\n\t    snow: 16775930,\n\t    springgreen: 65407,\n\t    steelblue: 4620980,\n\t    tan: 13808780,\n\t    teal: 32896,\n\t    thistle: 14204888,\n\t    tomato: 16737095,\n\t    turquoise: 4251856,\n\t    violet: 15631086,\n\t    wheat: 16113331,\n\t    white: 16777215,\n\t    whitesmoke: 16119285,\n\t    yellow: 16776960,\n\t    yellowgreen: 10145074\n\t  });\n\t  d3_rgb_names.forEach(function(key, value) {\n\t    d3_rgb_names.set(key, d3_rgbNumber(value));\n\t  });\n\t  function d3_functor(v) {\n\t    return typeof v === \"function\" ? v : function() {\n\t      return v;\n\t    };\n\t  }\n\t  d3.functor = d3_functor;\n\t  d3.xhr = d3_xhrType(d3_identity);\n\t  function d3_xhrType(response) {\n\t    return function(url, mimeType, callback) {\n\t      if (arguments.length === 2 && typeof mimeType === \"function\") callback = mimeType, \n\t      mimeType = null;\n\t      return d3_xhr(url, mimeType, response, callback);\n\t    };\n\t  }\n\t  function d3_xhr(url, mimeType, response, callback) {\n\t    var xhr = {}, dispatch = d3.dispatch(\"beforesend\", \"progress\", \"load\", \"error\"), headers = {}, request = new XMLHttpRequest(), responseType = null;\n\t    if (this.XDomainRequest && !(\"withCredentials\" in request) && /^(http(s)?:)?\\/\\//.test(url)) request = new XDomainRequest();\n\t    \"onload\" in request ? request.onload = request.onerror = respond : request.onreadystatechange = function() {\n\t      request.readyState > 3 && respond();\n\t    };\n\t    function respond() {\n\t      var status = request.status, result;\n\t      if (!status && d3_xhrHasResponse(request) || status >= 200 && status < 300 || status === 304) {\n\t        try {\n\t          result = response.call(xhr, request);\n\t        } catch (e) {\n\t          dispatch.error.call(xhr, e);\n\t          return;\n\t        }\n\t        dispatch.load.call(xhr, result);\n\t      } else {\n\t        dispatch.error.call(xhr, request);\n\t      }\n\t    }\n\t    request.onprogress = function(event) {\n\t      var o = d3.event;\n\t      d3.event = event;\n\t      try {\n\t        dispatch.progress.call(xhr, request);\n\t      } finally {\n\t        d3.event = o;\n\t      }\n\t    };\n\t    xhr.header = function(name, value) {\n\t      name = (name + \"\").toLowerCase();\n\t      if (arguments.length < 2) return headers[name];\n\t      if (value == null) delete headers[name]; else headers[name] = value + \"\";\n\t      return xhr;\n\t    };\n\t    xhr.mimeType = function(value) {\n\t      if (!arguments.length) return mimeType;\n\t      mimeType = value == null ? null : value + \"\";\n\t      return xhr;\n\t    };\n\t    xhr.responseType = function(value) {\n\t      if (!arguments.length) return responseType;\n\t      responseType = value;\n\t      return xhr;\n\t    };\n\t    xhr.response = function(value) {\n\t      response = value;\n\t      return xhr;\n\t    };\n\t    [ \"get\", \"post\" ].forEach(function(method) {\n\t      xhr[method] = function() {\n\t        return xhr.send.apply(xhr, [ method ].concat(d3_array(arguments)));\n\t      };\n\t    });\n\t    xhr.send = function(method, data, callback) {\n\t      if (arguments.length === 2 && typeof data === \"function\") callback = data, data = null;\n\t      request.open(method, url, true);\n\t      if (mimeType != null && !(\"accept\" in headers)) headers[\"accept\"] = mimeType + \",*/*\";\n\t      if (request.setRequestHeader) for (var name in headers) request.setRequestHeader(name, headers[name]);\n\t      if (mimeType != null && request.overrideMimeType) request.overrideMimeType(mimeType);\n\t      if (responseType != null) request.responseType = responseType;\n\t      if (callback != null) xhr.on(\"error\", callback).on(\"load\", function(request) {\n\t        callback(null, request);\n\t      });\n\t      dispatch.beforesend.call(xhr, request);\n\t      request.send(data == null ? null : data);\n\t      return xhr;\n\t    };\n\t    xhr.abort = function() {\n\t      request.abort();\n\t      return xhr;\n\t    };\n\t    d3.rebind(xhr, dispatch, \"on\");\n\t    return callback == null ? xhr : xhr.get(d3_xhr_fixCallback(callback));\n\t  }\n\t  function d3_xhr_fixCallback(callback) {\n\t    return callback.length === 1 ? function(error, request) {\n\t      callback(error == null ? request : null);\n\t    } : callback;\n\t  }\n\t  function d3_xhrHasResponse(request) {\n\t    var type = request.responseType;\n\t    return type && type !== \"text\" ? request.response : request.responseText;\n\t  }\n\t  d3.dsv = function(delimiter, mimeType) {\n\t    var reFormat = new RegExp('[\"' + delimiter + \"\\n]\"), delimiterCode = delimiter.charCodeAt(0);\n\t    function dsv(url, row, callback) {\n\t      if (arguments.length < 3) callback = row, row = null;\n\t      var xhr = d3_xhr(url, mimeType, row == null ? response : typedResponse(row), callback);\n\t      xhr.row = function(_) {\n\t        return arguments.length ? xhr.response((row = _) == null ? response : typedResponse(_)) : row;\n\t      };\n\t      return xhr;\n\t    }\n\t    function response(request) {\n\t      return dsv.parse(request.responseText);\n\t    }\n\t    function typedResponse(f) {\n\t      return function(request) {\n\t        return dsv.parse(request.responseText, f);\n\t      };\n\t    }\n\t    dsv.parse = function(text, f) {\n\t      var o;\n\t      return dsv.parseRows(text, function(row, i) {\n\t        if (o) return o(row, i - 1);\n\t        var a = new Function(\"d\", \"return {\" + row.map(function(name, i) {\n\t          return JSON.stringify(name) + \": d[\" + i + \"]\";\n\t        }).join(\",\") + \"}\");\n\t        o = f ? function(row, i) {\n\t          return f(a(row), i);\n\t        } : a;\n\t      });\n\t    };\n\t    dsv.parseRows = function(text, f) {\n\t      var EOL = {}, EOF = {}, rows = [], N = text.length, I = 0, n = 0, t, eol;\n\t      function token() {\n\t        if (I >= N) return EOF;\n\t        if (eol) return eol = false, EOL;\n\t        var j = I;\n\t        if (text.charCodeAt(j) === 34) {\n\t          var i = j;\n\t          while (i++ < N) {\n\t            if (text.charCodeAt(i) === 34) {\n\t              if (text.charCodeAt(i + 1) !== 34) break;\n\t              ++i;\n\t            }\n\t          }\n\t          I = i + 2;\n\t          var c = text.charCodeAt(i + 1);\n\t          if (c === 13) {\n\t            eol = true;\n\t            if (text.charCodeAt(i + 2) === 10) ++I;\n\t          } else if (c === 10) {\n\t            eol = true;\n\t          }\n\t          return text.slice(j + 1, i).replace(/\"\"/g, '\"');\n\t        }\n\t        while (I < N) {\n\t          var c = text.charCodeAt(I++), k = 1;\n\t          if (c === 10) eol = true; else if (c === 13) {\n\t            eol = true;\n\t            if (text.charCodeAt(I) === 10) ++I, ++k;\n\t          } else if (c !== delimiterCode) continue;\n\t          return text.slice(j, I - k);\n\t        }\n\t        return text.slice(j);\n\t      }\n\t      while ((t = token()) !== EOF) {\n\t        var a = [];\n\t        while (t !== EOL && t !== EOF) {\n\t          a.push(t);\n\t          t = token();\n\t        }\n\t        if (f && (a = f(a, n++)) == null) continue;\n\t        rows.push(a);\n\t      }\n\t      return rows;\n\t    };\n\t    dsv.format = function(rows) {\n\t      if (Array.isArray(rows[0])) return dsv.formatRows(rows);\n\t      var fieldSet = new d3_Set(), fields = [];\n\t      rows.forEach(function(row) {\n\t        for (var field in row) {\n\t          if (!fieldSet.has(field)) {\n\t            fields.push(fieldSet.add(field));\n\t          }\n\t        }\n\t      });\n\t      return [ fields.map(formatValue).join(delimiter) ].concat(rows.map(function(row) {\n\t        return fields.map(function(field) {\n\t          return formatValue(row[field]);\n\t        }).join(delimiter);\n\t      })).join(\"\\n\");\n\t    };\n\t    dsv.formatRows = function(rows) {\n\t      return rows.map(formatRow).join(\"\\n\");\n\t    };\n\t    function formatRow(row) {\n\t      return row.map(formatValue).join(delimiter);\n\t    }\n\t    function formatValue(text) {\n\t      return reFormat.test(text) ? '\"' + text.replace(/\\\"/g, '\"\"') + '\"' : text;\n\t    }\n\t    return dsv;\n\t  };\n\t  d3.csv = d3.dsv(\",\", \"text/csv\");\n\t  d3.tsv = d3.dsv(\"\t\", \"text/tab-separated-values\");\n\t  var d3_timer_queueHead, d3_timer_queueTail, d3_timer_interval, d3_timer_timeout, d3_timer_frame = this[d3_vendorSymbol(this, \"requestAnimationFrame\")] || function(callback) {\n\t    setTimeout(callback, 17);\n\t  };\n\t  d3.timer = function() {\n\t    d3_timer.apply(this, arguments);\n\t  };\n\t  function d3_timer(callback, delay, then) {\n\t    var n = arguments.length;\n\t    if (n < 2) delay = 0;\n\t    if (n < 3) then = Date.now();\n\t    var time = then + delay, timer = {\n\t      c: callback,\n\t      t: time,\n\t      n: null\n\t    };\n\t    if (d3_timer_queueTail) d3_timer_queueTail.n = timer; else d3_timer_queueHead = timer;\n\t    d3_timer_queueTail = timer;\n\t    if (!d3_timer_interval) {\n\t      d3_timer_timeout = clearTimeout(d3_timer_timeout);\n\t      d3_timer_interval = 1;\n\t      d3_timer_frame(d3_timer_step);\n\t    }\n\t    return timer;\n\t  }\n\t  function d3_timer_step() {\n\t    var now = d3_timer_mark(), delay = d3_timer_sweep() - now;\n\t    if (delay > 24) {\n\t      if (isFinite(delay)) {\n\t        clearTimeout(d3_timer_timeout);\n\t        d3_timer_timeout = setTimeout(d3_timer_step, delay);\n\t      }\n\t      d3_timer_interval = 0;\n\t    } else {\n\t      d3_timer_interval = 1;\n\t      d3_timer_frame(d3_timer_step);\n\t    }\n\t  }\n\t  d3.timer.flush = function() {\n\t    d3_timer_mark();\n\t    d3_timer_sweep();\n\t  };\n\t  function d3_timer_mark() {\n\t    var now = Date.now(), timer = d3_timer_queueHead;\n\t    while (timer) {\n\t      if (now >= timer.t && timer.c(now - timer.t)) timer.c = null;\n\t      timer = timer.n;\n\t    }\n\t    return now;\n\t  }\n\t  function d3_timer_sweep() {\n\t    var t0, t1 = d3_timer_queueHead, time = Infinity;\n\t    while (t1) {\n\t      if (t1.c) {\n\t        if (t1.t < time) time = t1.t;\n\t        t1 = (t0 = t1).n;\n\t      } else {\n\t        t1 = t0 ? t0.n = t1.n : d3_timer_queueHead = t1.n;\n\t      }\n\t    }\n\t    d3_timer_queueTail = t0;\n\t    return time;\n\t  }\n\t  function d3_format_precision(x, p) {\n\t    return p - (x ? Math.ceil(Math.log(x) / Math.LN10) : 1);\n\t  }\n\t  d3.round = function(x, n) {\n\t    return n ? Math.round(x * (n = Math.pow(10, n))) / n : Math.round(x);\n\t  };\n\t  var d3_formatPrefixes = [ \"y\", \"z\", \"a\", \"f\", \"p\", \"n\", \"µ\", \"m\", \"\", \"k\", \"M\", \"G\", \"T\", \"P\", \"E\", \"Z\", \"Y\" ].map(d3_formatPrefix);\n\t  d3.formatPrefix = function(value, precision) {\n\t    var i = 0;\n\t    if (value = +value) {\n\t      if (value < 0) value *= -1;\n\t      if (precision) value = d3.round(value, d3_format_precision(value, precision));\n\t      i = 1 + Math.floor(1e-12 + Math.log(value) / Math.LN10);\n\t      i = Math.max(-24, Math.min(24, Math.floor((i - 1) / 3) * 3));\n\t    }\n\t    return d3_formatPrefixes[8 + i / 3];\n\t  };\n\t  function d3_formatPrefix(d, i) {\n\t    var k = Math.pow(10, abs(8 - i) * 3);\n\t    return {\n\t      scale: i > 8 ? function(d) {\n\t        return d / k;\n\t      } : function(d) {\n\t        return d * k;\n\t      },\n\t      symbol: d\n\t    };\n\t  }\n\t  function d3_locale_numberFormat(locale) {\n\t    var locale_decimal = locale.decimal, locale_thousands = locale.thousands, locale_grouping = locale.grouping, locale_currency = locale.currency, formatGroup = locale_grouping && locale_thousands ? function(value, width) {\n\t      var i = value.length, t = [], j = 0, g = locale_grouping[0], length = 0;\n\t      while (i > 0 && g > 0) {\n\t        if (length + g + 1 > width) g = Math.max(1, width - length);\n\t        t.push(value.substring(i -= g, i + g));\n\t        if ((length += g + 1) > width) break;\n\t        g = locale_grouping[j = (j + 1) % locale_grouping.length];\n\t      }\n\t      return t.reverse().join(locale_thousands);\n\t    } : d3_identity;\n\t    return function(specifier) {\n\t      var match = d3_format_re.exec(specifier), fill = match[1] || \" \", align = match[2] || \">\", sign = match[3] || \"-\", symbol = match[4] || \"\", zfill = match[5], width = +match[6], comma = match[7], precision = match[8], type = match[9], scale = 1, prefix = \"\", suffix = \"\", integer = false, exponent = true;\n\t      if (precision) precision = +precision.substring(1);\n\t      if (zfill || fill === \"0\" && align === \"=\") {\n\t        zfill = fill = \"0\";\n\t        align = \"=\";\n\t      }\n\t      switch (type) {\n\t       case \"n\":\n\t        comma = true;\n\t        type = \"g\";\n\t        break;\n\t\n\t       case \"%\":\n\t        scale = 100;\n\t        suffix = \"%\";\n\t        type = \"f\";\n\t        break;\n\t\n\t       case \"p\":\n\t        scale = 100;\n\t        suffix = \"%\";\n\t        type = \"r\";\n\t        break;\n\t\n\t       case \"b\":\n\t       case \"o\":\n\t       case \"x\":\n\t       case \"X\":\n\t        if (symbol === \"#\") prefix = \"0\" + type.toLowerCase();\n\t\n\t       case \"c\":\n\t        exponent = false;\n\t\n\t       case \"d\":\n\t        integer = true;\n\t        precision = 0;\n\t        break;\n\t\n\t       case \"s\":\n\t        scale = -1;\n\t        type = \"r\";\n\t        break;\n\t      }\n\t      if (symbol === \"$\") prefix = locale_currency[0], suffix = locale_currency[1];\n\t      if (type == \"r\" && !precision) type = \"g\";\n\t      if (precision != null) {\n\t        if (type == \"g\") precision = Math.max(1, Math.min(21, precision)); else if (type == \"e\" || type == \"f\") precision = Math.max(0, Math.min(20, precision));\n\t      }\n\t      type = d3_format_types.get(type) || d3_format_typeDefault;\n\t      var zcomma = zfill && comma;\n\t      return function(value) {\n\t        var fullSuffix = suffix;\n\t        if (integer && value % 1) return \"\";\n\t        var negative = value < 0 || value === 0 && 1 / value < 0 ? (value = -value, \"-\") : sign === \"-\" ? \"\" : sign;\n\t        if (scale < 0) {\n\t          var unit = d3.formatPrefix(value, precision);\n\t          value = unit.scale(value);\n\t          fullSuffix = unit.symbol + suffix;\n\t        } else {\n\t          value *= scale;\n\t        }\n\t        value = type(value, precision);\n\t        var i = value.lastIndexOf(\".\"), before, after;\n\t        if (i < 0) {\n\t          var j = exponent ? value.lastIndexOf(\"e\") : -1;\n\t          if (j < 0) before = value, after = \"\"; else before = value.substring(0, j), after = value.substring(j);\n\t        } else {\n\t          before = value.substring(0, i);\n\t          after = locale_decimal + value.substring(i + 1);\n\t        }\n\t        if (!zfill && comma) before = formatGroup(before, Infinity);\n\t        var length = prefix.length + before.length + after.length + (zcomma ? 0 : negative.length), padding = length < width ? new Array(length = width - length + 1).join(fill) : \"\";\n\t        if (zcomma) before = formatGroup(padding + before, padding.length ? width - after.length : Infinity);\n\t        negative += prefix;\n\t        value = before + after;\n\t        return (align === \"<\" ? negative + value + padding : align === \">\" ? padding + negative + value : align === \"^\" ? padding.substring(0, length >>= 1) + negative + value + padding.substring(length) : negative + (zcomma ? value : padding + value)) + fullSuffix;\n\t      };\n\t    };\n\t  }\n\t  var d3_format_re = /(?:([^{])?([<>=^]))?([+\\- ])?([$#])?(0)?(\\d+)?(,)?(\\.-?\\d+)?([a-z%])?/i;\n\t  var d3_format_types = d3.map({\n\t    b: function(x) {\n\t      return x.toString(2);\n\t    },\n\t    c: function(x) {\n\t      return String.fromCharCode(x);\n\t    },\n\t    o: function(x) {\n\t      return x.toString(8);\n\t    },\n\t    x: function(x) {\n\t      return x.toString(16);\n\t    },\n\t    X: function(x) {\n\t      return x.toString(16).toUpperCase();\n\t    },\n\t    g: function(x, p) {\n\t      return x.toPrecision(p);\n\t    },\n\t    e: function(x, p) {\n\t      return x.toExponential(p);\n\t    },\n\t    f: function(x, p) {\n\t      return x.toFixed(p);\n\t    },\n\t    r: function(x, p) {\n\t      return (x = d3.round(x, d3_format_precision(x, p))).toFixed(Math.max(0, Math.min(20, d3_format_precision(x * (1 + 1e-15), p))));\n\t    }\n\t  });\n\t  function d3_format_typeDefault(x) {\n\t    return x + \"\";\n\t  }\n\t  var d3_time = d3.time = {}, d3_date = Date;\n\t  function d3_date_utc() {\n\t    this._ = new Date(arguments.length > 1 ? Date.UTC.apply(this, arguments) : arguments[0]);\n\t  }\n\t  d3_date_utc.prototype = {\n\t    getDate: function() {\n\t      return this._.getUTCDate();\n\t    },\n\t    getDay: function() {\n\t      return this._.getUTCDay();\n\t    },\n\t    getFullYear: function() {\n\t      return this._.getUTCFullYear();\n\t    },\n\t    getHours: function() {\n\t      return this._.getUTCHours();\n\t    },\n\t    getMilliseconds: function() {\n\t      return this._.getUTCMilliseconds();\n\t    },\n\t    getMinutes: function() {\n\t      return this._.getUTCMinutes();\n\t    },\n\t    getMonth: function() {\n\t      return this._.getUTCMonth();\n\t    },\n\t    getSeconds: function() {\n\t      return this._.getUTCSeconds();\n\t    },\n\t    getTime: function() {\n\t      return this._.getTime();\n\t    },\n\t    getTimezoneOffset: function() {\n\t      return 0;\n\t    },\n\t    valueOf: function() {\n\t      return this._.valueOf();\n\t    },\n\t    setDate: function() {\n\t      d3_time_prototype.setUTCDate.apply(this._, arguments);\n\t    },\n\t    setDay: function() {\n\t      d3_time_prototype.setUTCDay.apply(this._, arguments);\n\t    },\n\t    setFullYear: function() {\n\t      d3_time_prototype.setUTCFullYear.apply(this._, arguments);\n\t    },\n\t    setHours: function() {\n\t      d3_time_prototype.setUTCHours.apply(this._, arguments);\n\t    },\n\t    setMilliseconds: function() {\n\t      d3_time_prototype.setUTCMilliseconds.apply(this._, arguments);\n\t    },\n\t    setMinutes: function() {\n\t      d3_time_prototype.setUTCMinutes.apply(this._, arguments);\n\t    },\n\t    setMonth: function() {\n\t      d3_time_prototype.setUTCMonth.apply(this._, arguments);\n\t    },\n\t    setSeconds: function() {\n\t      d3_time_prototype.setUTCSeconds.apply(this._, arguments);\n\t    },\n\t    setTime: function() {\n\t      d3_time_prototype.setTime.apply(this._, arguments);\n\t    }\n\t  };\n\t  var d3_time_prototype = Date.prototype;\n\t  function d3_time_interval(local, step, number) {\n\t    function round(date) {\n\t      var d0 = local(date), d1 = offset(d0, 1);\n\t      return date - d0 < d1 - date ? d0 : d1;\n\t    }\n\t    function ceil(date) {\n\t      step(date = local(new d3_date(date - 1)), 1);\n\t      return date;\n\t    }\n\t    function offset(date, k) {\n\t      step(date = new d3_date(+date), k);\n\t      return date;\n\t    }\n\t    function range(t0, t1, dt) {\n\t      var time = ceil(t0), times = [];\n\t      if (dt > 1) {\n\t        while (time < t1) {\n\t          if (!(number(time) % dt)) times.push(new Date(+time));\n\t          step(time, 1);\n\t        }\n\t      } else {\n\t        while (time < t1) times.push(new Date(+time)), step(time, 1);\n\t      }\n\t      return times;\n\t    }\n\t    function range_utc(t0, t1, dt) {\n\t      try {\n\t        d3_date = d3_date_utc;\n\t        var utc = new d3_date_utc();\n\t        utc._ = t0;\n\t        return range(utc, t1, dt);\n\t      } finally {\n\t        d3_date = Date;\n\t      }\n\t    }\n\t    local.floor = local;\n\t    local.round = round;\n\t    local.ceil = ceil;\n\t    local.offset = offset;\n\t    local.range = range;\n\t    var utc = local.utc = d3_time_interval_utc(local);\n\t    utc.floor = utc;\n\t    utc.round = d3_time_interval_utc(round);\n\t    utc.ceil = d3_time_interval_utc(ceil);\n\t    utc.offset = d3_time_interval_utc(offset);\n\t    utc.range = range_utc;\n\t    return local;\n\t  }\n\t  function d3_time_interval_utc(method) {\n\t    return function(date, k) {\n\t      try {\n\t        d3_date = d3_date_utc;\n\t        var utc = new d3_date_utc();\n\t        utc._ = date;\n\t        return method(utc, k)._;\n\t      } finally {\n\t        d3_date = Date;\n\t      }\n\t    };\n\t  }\n\t  d3_time.year = d3_time_interval(function(date) {\n\t    date = d3_time.day(date);\n\t    date.setMonth(0, 1);\n\t    return date;\n\t  }, function(date, offset) {\n\t    date.setFullYear(date.getFullYear() + offset);\n\t  }, function(date) {\n\t    return date.getFullYear();\n\t  });\n\t  d3_time.years = d3_time.year.range;\n\t  d3_time.years.utc = d3_time.year.utc.range;\n\t  d3_time.day = d3_time_interval(function(date) {\n\t    var day = new d3_date(2e3, 0);\n\t    day.setFullYear(date.getFullYear(), date.getMonth(), date.getDate());\n\t    return day;\n\t  }, function(date, offset) {\n\t    date.setDate(date.getDate() + offset);\n\t  }, function(date) {\n\t    return date.getDate() - 1;\n\t  });\n\t  d3_time.days = d3_time.day.range;\n\t  d3_time.days.utc = d3_time.day.utc.range;\n\t  d3_time.dayOfYear = function(date) {\n\t    var year = d3_time.year(date);\n\t    return Math.floor((date - year - (date.getTimezoneOffset() - year.getTimezoneOffset()) * 6e4) / 864e5);\n\t  };\n\t  [ \"sunday\", \"monday\", \"tuesday\", \"wednesday\", \"thursday\", \"friday\", \"saturday\" ].forEach(function(day, i) {\n\t    i = 7 - i;\n\t    var interval = d3_time[day] = d3_time_interval(function(date) {\n\t      (date = d3_time.day(date)).setDate(date.getDate() - (date.getDay() + i) % 7);\n\t      return date;\n\t    }, function(date, offset) {\n\t      date.setDate(date.getDate() + Math.floor(offset) * 7);\n\t    }, function(date) {\n\t      var day = d3_time.year(date).getDay();\n\t      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7) - (day !== i);\n\t    });\n\t    d3_time[day + \"s\"] = interval.range;\n\t    d3_time[day + \"s\"].utc = interval.utc.range;\n\t    d3_time[day + \"OfYear\"] = function(date) {\n\t      var day = d3_time.year(date).getDay();\n\t      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7);\n\t    };\n\t  });\n\t  d3_time.week = d3_time.sunday;\n\t  d3_time.weeks = d3_time.sunday.range;\n\t  d3_time.weeks.utc = d3_time.sunday.utc.range;\n\t  d3_time.weekOfYear = d3_time.sundayOfYear;\n\t  function d3_locale_timeFormat(locale) {\n\t    var locale_dateTime = locale.dateTime, locale_date = locale.date, locale_time = locale.time, locale_periods = locale.periods, locale_days = locale.days, locale_shortDays = locale.shortDays, locale_months = locale.months, locale_shortMonths = locale.shortMonths;\n\t    function d3_time_format(template) {\n\t      var n = template.length;\n\t      function format(date) {\n\t        var string = [], i = -1, j = 0, c, p, f;\n\t        while (++i < n) {\n\t          if (template.charCodeAt(i) === 37) {\n\t            string.push(template.slice(j, i));\n\t            if ((p = d3_time_formatPads[c = template.charAt(++i)]) != null) c = template.charAt(++i);\n\t            if (f = d3_time_formats[c]) c = f(date, p == null ? c === \"e\" ? \" \" : \"0\" : p);\n\t            string.push(c);\n\t            j = i + 1;\n\t          }\n\t        }\n\t        string.push(template.slice(j, i));\n\t        return string.join(\"\");\n\t      }\n\t      format.parse = function(string) {\n\t        var d = {\n\t          y: 1900,\n\t          m: 0,\n\t          d: 1,\n\t          H: 0,\n\t          M: 0,\n\t          S: 0,\n\t          L: 0,\n\t          Z: null\n\t        }, i = d3_time_parse(d, template, string, 0);\n\t        if (i != string.length) return null;\n\t        if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n\t        var localZ = d.Z != null && d3_date !== d3_date_utc, date = new (localZ ? d3_date_utc : d3_date)();\n\t        if (\"j\" in d) date.setFullYear(d.y, 0, d.j); else if (\"W\" in d || \"U\" in d) {\n\t          if (!(\"w\" in d)) d.w = \"W\" in d ? 1 : 0;\n\t          date.setFullYear(d.y, 0, 1);\n\t          date.setFullYear(d.y, 0, \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (date.getDay() + 5) % 7 : d.w + d.U * 7 - (date.getDay() + 6) % 7);\n\t        } else date.setFullYear(d.y, d.m, d.d);\n\t        date.setHours(d.H + (d.Z / 100 | 0), d.M + d.Z % 100, d.S, d.L);\n\t        return localZ ? date._ : date;\n\t      };\n\t      format.toString = function() {\n\t        return template;\n\t      };\n\t      return format;\n\t    }\n\t    function d3_time_parse(date, template, string, j) {\n\t      var c, p, t, i = 0, n = template.length, m = string.length;\n\t      while (i < n) {\n\t        if (j >= m) return -1;\n\t        c = template.charCodeAt(i++);\n\t        if (c === 37) {\n\t          t = template.charAt(i++);\n\t          p = d3_time_parsers[t in d3_time_formatPads ? template.charAt(i++) : t];\n\t          if (!p || (j = p(date, string, j)) < 0) return -1;\n\t        } else if (c != string.charCodeAt(j++)) {\n\t          return -1;\n\t        }\n\t      }\n\t      return j;\n\t    }\n\t    d3_time_format.utc = function(template) {\n\t      var local = d3_time_format(template);\n\t      function format(date) {\n\t        try {\n\t          d3_date = d3_date_utc;\n\t          var utc = new d3_date();\n\t          utc._ = date;\n\t          return local(utc);\n\t        } finally {\n\t          d3_date = Date;\n\t        }\n\t      }\n\t      format.parse = function(string) {\n\t        try {\n\t          d3_date = d3_date_utc;\n\t          var date = local.parse(string);\n\t          return date && date._;\n\t        } finally {\n\t          d3_date = Date;\n\t        }\n\t      };\n\t      format.toString = local.toString;\n\t      return format;\n\t    };\n\t    d3_time_format.multi = d3_time_format.utc.multi = d3_time_formatMulti;\n\t    var d3_time_periodLookup = d3.map(), d3_time_dayRe = d3_time_formatRe(locale_days), d3_time_dayLookup = d3_time_formatLookup(locale_days), d3_time_dayAbbrevRe = d3_time_formatRe(locale_shortDays), d3_time_dayAbbrevLookup = d3_time_formatLookup(locale_shortDays), d3_time_monthRe = d3_time_formatRe(locale_months), d3_time_monthLookup = d3_time_formatLookup(locale_months), d3_time_monthAbbrevRe = d3_time_formatRe(locale_shortMonths), d3_time_monthAbbrevLookup = d3_time_formatLookup(locale_shortMonths);\n\t    locale_periods.forEach(function(p, i) {\n\t      d3_time_periodLookup.set(p.toLowerCase(), i);\n\t    });\n\t    var d3_time_formats = {\n\t      a: function(d) {\n\t        return locale_shortDays[d.getDay()];\n\t      },\n\t      A: function(d) {\n\t        return locale_days[d.getDay()];\n\t      },\n\t      b: function(d) {\n\t        return locale_shortMonths[d.getMonth()];\n\t      },\n\t      B: function(d) {\n\t        return locale_months[d.getMonth()];\n\t      },\n\t      c: d3_time_format(locale_dateTime),\n\t      d: function(d, p) {\n\t        return d3_time_formatPad(d.getDate(), p, 2);\n\t      },\n\t      e: function(d, p) {\n\t        return d3_time_formatPad(d.getDate(), p, 2);\n\t      },\n\t      H: function(d, p) {\n\t        return d3_time_formatPad(d.getHours(), p, 2);\n\t      },\n\t      I: function(d, p) {\n\t        return d3_time_formatPad(d.getHours() % 12 || 12, p, 2);\n\t      },\n\t      j: function(d, p) {\n\t        return d3_time_formatPad(1 + d3_time.dayOfYear(d), p, 3);\n\t      },\n\t      L: function(d, p) {\n\t        return d3_time_formatPad(d.getMilliseconds(), p, 3);\n\t      },\n\t      m: function(d, p) {\n\t        return d3_time_formatPad(d.getMonth() + 1, p, 2);\n\t      },\n\t      M: function(d, p) {\n\t        return d3_time_formatPad(d.getMinutes(), p, 2);\n\t      },\n\t      p: function(d) {\n\t        return locale_periods[+(d.getHours() >= 12)];\n\t      },\n\t      S: function(d, p) {\n\t        return d3_time_formatPad(d.getSeconds(), p, 2);\n\t      },\n\t      U: function(d, p) {\n\t        return d3_time_formatPad(d3_time.sundayOfYear(d), p, 2);\n\t      },\n\t      w: function(d) {\n\t        return d.getDay();\n\t      },\n\t      W: function(d, p) {\n\t        return d3_time_formatPad(d3_time.mondayOfYear(d), p, 2);\n\t      },\n\t      x: d3_time_format(locale_date),\n\t      X: d3_time_format(locale_time),\n\t      y: function(d, p) {\n\t        return d3_time_formatPad(d.getFullYear() % 100, p, 2);\n\t      },\n\t      Y: function(d, p) {\n\t        return d3_time_formatPad(d.getFullYear() % 1e4, p, 4);\n\t      },\n\t      Z: d3_time_zone,\n\t      \"%\": function() {\n\t        return \"%\";\n\t      }\n\t    };\n\t    var d3_time_parsers = {\n\t      a: d3_time_parseWeekdayAbbrev,\n\t      A: d3_time_parseWeekday,\n\t      b: d3_time_parseMonthAbbrev,\n\t      B: d3_time_parseMonth,\n\t      c: d3_time_parseLocaleFull,\n\t      d: d3_time_parseDay,\n\t      e: d3_time_parseDay,\n\t      H: d3_time_parseHour24,\n\t      I: d3_time_parseHour24,\n\t      j: d3_time_parseDayOfYear,\n\t      L: d3_time_parseMilliseconds,\n\t      m: d3_time_parseMonthNumber,\n\t      M: d3_time_parseMinutes,\n\t      p: d3_time_parseAmPm,\n\t      S: d3_time_parseSeconds,\n\t      U: d3_time_parseWeekNumberSunday,\n\t      w: d3_time_parseWeekdayNumber,\n\t      W: d3_time_parseWeekNumberMonday,\n\t      x: d3_time_parseLocaleDate,\n\t      X: d3_time_parseLocaleTime,\n\t      y: d3_time_parseYear,\n\t      Y: d3_time_parseFullYear,\n\t      Z: d3_time_parseZone,\n\t      \"%\": d3_time_parseLiteralPercent\n\t    };\n\t    function d3_time_parseWeekdayAbbrev(date, string, i) {\n\t      d3_time_dayAbbrevRe.lastIndex = 0;\n\t      var n = d3_time_dayAbbrevRe.exec(string.slice(i));\n\t      return n ? (date.w = d3_time_dayAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n\t    }\n\t    function d3_time_parseWeekday(date, string, i) {\n\t      d3_time_dayRe.lastIndex = 0;\n\t      var n = d3_time_dayRe.exec(string.slice(i));\n\t      return n ? (date.w = d3_time_dayLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n\t    }\n\t    function d3_time_parseMonthAbbrev(date, string, i) {\n\t      d3_time_monthAbbrevRe.lastIndex = 0;\n\t      var n = d3_time_monthAbbrevRe.exec(string.slice(i));\n\t      return n ? (date.m = d3_time_monthAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n\t    }\n\t    function d3_time_parseMonth(date, string, i) {\n\t      d3_time_monthRe.lastIndex = 0;\n\t      var n = d3_time_monthRe.exec(string.slice(i));\n\t      return n ? (date.m = d3_time_monthLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n\t    }\n\t    function d3_time_parseLocaleFull(date, string, i) {\n\t      return d3_time_parse(date, d3_time_formats.c.toString(), string, i);\n\t    }\n\t    function d3_time_parseLocaleDate(date, string, i) {\n\t      return d3_time_parse(date, d3_time_formats.x.toString(), string, i);\n\t    }\n\t    function d3_time_parseLocaleTime(date, string, i) {\n\t      return d3_time_parse(date, d3_time_formats.X.toString(), string, i);\n\t    }\n\t    function d3_time_parseAmPm(date, string, i) {\n\t      var n = d3_time_periodLookup.get(string.slice(i, i += 2).toLowerCase());\n\t      return n == null ? -1 : (date.p = n, i);\n\t    }\n\t    return d3_time_format;\n\t  }\n\t  var d3_time_formatPads = {\n\t    \"-\": \"\",\n\t    _: \" \",\n\t    \"0\": \"0\"\n\t  }, d3_time_numberRe = /^\\s*\\d+/, d3_time_percentRe = /^%/;\n\t  function d3_time_formatPad(value, fill, width) {\n\t    var sign = value < 0 ? \"-\" : \"\", string = (sign ? -value : value) + \"\", length = string.length;\n\t    return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n\t  }\n\t  function d3_time_formatRe(names) {\n\t    return new RegExp(\"^(?:\" + names.map(d3.requote).join(\"|\") + \")\", \"i\");\n\t  }\n\t  function d3_time_formatLookup(names) {\n\t    var map = new d3_Map(), i = -1, n = names.length;\n\t    while (++i < n) map.set(names[i].toLowerCase(), i);\n\t    return map;\n\t  }\n\t  function d3_time_parseWeekdayNumber(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 1));\n\t    return n ? (date.w = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseWeekNumberSunday(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i));\n\t    return n ? (date.U = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseWeekNumberMonday(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i));\n\t    return n ? (date.W = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseFullYear(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 4));\n\t    return n ? (date.y = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseYear(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n\t    return n ? (date.y = d3_time_expandYear(+n[0]), i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseZone(date, string, i) {\n\t    return /^[+-]\\d{4}$/.test(string = string.slice(i, i + 5)) ? (date.Z = -string, \n\t    i + 5) : -1;\n\t  }\n\t  function d3_time_expandYear(d) {\n\t    return d + (d > 68 ? 1900 : 2e3);\n\t  }\n\t  function d3_time_parseMonthNumber(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n\t    return n ? (date.m = n[0] - 1, i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseDay(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n\t    return n ? (date.d = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseDayOfYear(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n\t    return n ? (date.j = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseHour24(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n\t    return n ? (date.H = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseMinutes(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n\t    return n ? (date.M = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseSeconds(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n\t    return n ? (date.S = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseMilliseconds(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n\t    return n ? (date.L = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_zone(d) {\n\t    var z = d.getTimezoneOffset(), zs = z > 0 ? \"-\" : \"+\", zh = abs(z) / 60 | 0, zm = abs(z) % 60;\n\t    return zs + d3_time_formatPad(zh, \"0\", 2) + d3_time_formatPad(zm, \"0\", 2);\n\t  }\n\t  function d3_time_parseLiteralPercent(date, string, i) {\n\t    d3_time_percentRe.lastIndex = 0;\n\t    var n = d3_time_percentRe.exec(string.slice(i, i + 1));\n\t    return n ? i + n[0].length : -1;\n\t  }\n\t  function d3_time_formatMulti(formats) {\n\t    var n = formats.length, i = -1;\n\t    while (++i < n) formats[i][0] = this(formats[i][0]);\n\t    return function(date) {\n\t      var i = 0, f = formats[i];\n\t      while (!f[1](date)) f = formats[++i];\n\t      return f[0](date);\n\t    };\n\t  }\n\t  d3.locale = function(locale) {\n\t    return {\n\t      numberFormat: d3_locale_numberFormat(locale),\n\t      timeFormat: d3_locale_timeFormat(locale)\n\t    };\n\t  };\n\t  var d3_locale_enUS = d3.locale({\n\t    decimal: \".\",\n\t    thousands: \",\",\n\t    grouping: [ 3 ],\n\t    currency: [ \"$\", \"\" ],\n\t    dateTime: \"%a %b %e %X %Y\",\n\t    date: \"%m/%d/%Y\",\n\t    time: \"%H:%M:%S\",\n\t    periods: [ \"AM\", \"PM\" ],\n\t    days: [ \"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\" ],\n\t    shortDays: [ \"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\" ],\n\t    months: [ \"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\" ],\n\t    shortMonths: [ \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\" ]\n\t  });\n\t  d3.format = d3_locale_enUS.numberFormat;\n\t  d3.geo = {};\n\t  function d3_adder() {}\n\t  d3_adder.prototype = {\n\t    s: 0,\n\t    t: 0,\n\t    add: function(y) {\n\t      d3_adderSum(y, this.t, d3_adderTemp);\n\t      d3_adderSum(d3_adderTemp.s, this.s, this);\n\t      if (this.s) this.t += d3_adderTemp.t; else this.s = d3_adderTemp.t;\n\t    },\n\t    reset: function() {\n\t      this.s = this.t = 0;\n\t    },\n\t    valueOf: function() {\n\t      return this.s;\n\t    }\n\t  };\n\t  var d3_adderTemp = new d3_adder();\n\t  function d3_adderSum(a, b, o) {\n\t    var x = o.s = a + b, bv = x - a, av = x - bv;\n\t    o.t = a - av + (b - bv);\n\t  }\n\t  d3.geo.stream = function(object, listener) {\n\t    if (object && d3_geo_streamObjectType.hasOwnProperty(object.type)) {\n\t      d3_geo_streamObjectType[object.type](object, listener);\n\t    } else {\n\t      d3_geo_streamGeometry(object, listener);\n\t    }\n\t  };\n\t  function d3_geo_streamGeometry(geometry, listener) {\n\t    if (geometry && d3_geo_streamGeometryType.hasOwnProperty(geometry.type)) {\n\t      d3_geo_streamGeometryType[geometry.type](geometry, listener);\n\t    }\n\t  }\n\t  var d3_geo_streamObjectType = {\n\t    Feature: function(feature, listener) {\n\t      d3_geo_streamGeometry(feature.geometry, listener);\n\t    },\n\t    FeatureCollection: function(object, listener) {\n\t      var features = object.features, i = -1, n = features.length;\n\t      while (++i < n) d3_geo_streamGeometry(features[i].geometry, listener);\n\t    }\n\t  };\n\t  var d3_geo_streamGeometryType = {\n\t    Sphere: function(object, listener) {\n\t      listener.sphere();\n\t    },\n\t    Point: function(object, listener) {\n\t      object = object.coordinates;\n\t      listener.point(object[0], object[1], object[2]);\n\t    },\n\t    MultiPoint: function(object, listener) {\n\t      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n\t      while (++i < n) object = coordinates[i], listener.point(object[0], object[1], object[2]);\n\t    },\n\t    LineString: function(object, listener) {\n\t      d3_geo_streamLine(object.coordinates, listener, 0);\n\t    },\n\t    MultiLineString: function(object, listener) {\n\t      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n\t      while (++i < n) d3_geo_streamLine(coordinates[i], listener, 0);\n\t    },\n\t    Polygon: function(object, listener) {\n\t      d3_geo_streamPolygon(object.coordinates, listener);\n\t    },\n\t    MultiPolygon: function(object, listener) {\n\t      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n\t      while (++i < n) d3_geo_streamPolygon(coordinates[i], listener);\n\t    },\n\t    GeometryCollection: function(object, listener) {\n\t      var geometries = object.geometries, i = -1, n = geometries.length;\n\t      while (++i < n) d3_geo_streamGeometry(geometries[i], listener);\n\t    }\n\t  };\n\t  function d3_geo_streamLine(coordinates, listener, closed) {\n\t    var i = -1, n = coordinates.length - closed, coordinate;\n\t    listener.lineStart();\n\t    while (++i < n) coordinate = coordinates[i], listener.point(coordinate[0], coordinate[1], coordinate[2]);\n\t    listener.lineEnd();\n\t  }\n\t  function d3_geo_streamPolygon(coordinates, listener) {\n\t    var i = -1, n = coordinates.length;\n\t    listener.polygonStart();\n\t    while (++i < n) d3_geo_streamLine(coordinates[i], listener, 1);\n\t    listener.polygonEnd();\n\t  }\n\t  d3.geo.area = function(object) {\n\t    d3_geo_areaSum = 0;\n\t    d3.geo.stream(object, d3_geo_area);\n\t    return d3_geo_areaSum;\n\t  };\n\t  var d3_geo_areaSum, d3_geo_areaRingSum = new d3_adder();\n\t  var d3_geo_area = {\n\t    sphere: function() {\n\t      d3_geo_areaSum += 4 * π;\n\t    },\n\t    point: d3_noop,\n\t    lineStart: d3_noop,\n\t    lineEnd: d3_noop,\n\t    polygonStart: function() {\n\t      d3_geo_areaRingSum.reset();\n\t      d3_geo_area.lineStart = d3_geo_areaRingStart;\n\t    },\n\t    polygonEnd: function() {\n\t      var area = 2 * d3_geo_areaRingSum;\n\t      d3_geo_areaSum += area < 0 ? 4 * π + area : area;\n\t      d3_geo_area.lineStart = d3_geo_area.lineEnd = d3_geo_area.point = d3_noop;\n\t    }\n\t  };\n\t  function d3_geo_areaRingStart() {\n\t    var λ00, φ00, λ0, cosφ0, sinφ0;\n\t    d3_geo_area.point = function(λ, φ) {\n\t      d3_geo_area.point = nextPoint;\n\t      λ0 = (λ00 = λ) * d3_radians, cosφ0 = Math.cos(φ = (φ00 = φ) * d3_radians / 2 + π / 4), \n\t      sinφ0 = Math.sin(φ);\n\t    };\n\t    function nextPoint(λ, φ) {\n\t      λ *= d3_radians;\n\t      φ = φ * d3_radians / 2 + π / 4;\n\t      var dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, cosφ = Math.cos(φ), sinφ = Math.sin(φ), k = sinφ0 * sinφ, u = cosφ0 * cosφ + k * Math.cos(adλ), v = k * sdλ * Math.sin(adλ);\n\t      d3_geo_areaRingSum.add(Math.atan2(v, u));\n\t      λ0 = λ, cosφ0 = cosφ, sinφ0 = sinφ;\n\t    }\n\t    d3_geo_area.lineEnd = function() {\n\t      nextPoint(λ00, φ00);\n\t    };\n\t  }\n\t  function d3_geo_cartesian(spherical) {\n\t    var λ = spherical[0], φ = spherical[1], cosφ = Math.cos(φ);\n\t    return [ cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ) ];\n\t  }\n\t  function d3_geo_cartesianDot(a, b) {\n\t    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n\t  }\n\t  function d3_geo_cartesianCross(a, b) {\n\t    return [ a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0] ];\n\t  }\n\t  function d3_geo_cartesianAdd(a, b) {\n\t    a[0] += b[0];\n\t    a[1] += b[1];\n\t    a[2] += b[2];\n\t  }\n\t  function d3_geo_cartesianScale(vector, k) {\n\t    return [ vector[0] * k, vector[1] * k, vector[2] * k ];\n\t  }\n\t  function d3_geo_cartesianNormalize(d) {\n\t    var l = Math.sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n\t    d[0] /= l;\n\t    d[1] /= l;\n\t    d[2] /= l;\n\t  }\n\t  function d3_geo_spherical(cartesian) {\n\t    return [ Math.atan2(cartesian[1], cartesian[0]), d3_asin(cartesian[2]) ];\n\t  }\n\t  function d3_geo_sphericalEqual(a, b) {\n\t    return abs(a[0] - b[0]) < ε && abs(a[1] - b[1]) < ε;\n\t  }\n\t  d3.geo.bounds = function() {\n\t    var λ0, φ0, λ1, φ1, λ_, λ__, φ__, p0, dλSum, ranges, range;\n\t    var bound = {\n\t      point: point,\n\t      lineStart: lineStart,\n\t      lineEnd: lineEnd,\n\t      polygonStart: function() {\n\t        bound.point = ringPoint;\n\t        bound.lineStart = ringStart;\n\t        bound.lineEnd = ringEnd;\n\t        dλSum = 0;\n\t        d3_geo_area.polygonStart();\n\t      },\n\t      polygonEnd: function() {\n\t        d3_geo_area.polygonEnd();\n\t        bound.point = point;\n\t        bound.lineStart = lineStart;\n\t        bound.lineEnd = lineEnd;\n\t        if (d3_geo_areaRingSum < 0) λ0 = -(λ1 = 180), φ0 = -(φ1 = 90); else if (dλSum > ε) φ1 = 90; else if (dλSum < -ε) φ0 = -90;\n\t        range[0] = λ0, range[1] = λ1;\n\t      }\n\t    };\n\t    function point(λ, φ) {\n\t      ranges.push(range = [ λ0 = λ, λ1 = λ ]);\n\t      if (φ < φ0) φ0 = φ;\n\t      if (φ > φ1) φ1 = φ;\n\t    }\n\t    function linePoint(λ, φ) {\n\t      var p = d3_geo_cartesian([ λ * d3_radians, φ * d3_radians ]);\n\t      if (p0) {\n\t        var normal = d3_geo_cartesianCross(p0, p), equatorial = [ normal[1], -normal[0], 0 ], inflection = d3_geo_cartesianCross(equatorial, normal);\n\t        d3_geo_cartesianNormalize(inflection);\n\t        inflection = d3_geo_spherical(inflection);\n\t        var dλ = λ - λ_, s = dλ > 0 ? 1 : -1, λi = inflection[0] * d3_degrees * s, antimeridian = abs(dλ) > 180;\n\t        if (antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n\t          var φi = inflection[1] * d3_degrees;\n\t          if (φi > φ1) φ1 = φi;\n\t        } else if (λi = (λi + 360) % 360 - 180, antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n\t          var φi = -inflection[1] * d3_degrees;\n\t          if (φi < φ0) φ0 = φi;\n\t        } else {\n\t          if (φ < φ0) φ0 = φ;\n\t          if (φ > φ1) φ1 = φ;\n\t        }\n\t        if (antimeridian) {\n\t          if (λ < λ_) {\n\t            if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n\t          } else {\n\t            if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n\t          }\n\t        } else {\n\t          if (λ1 >= λ0) {\n\t            if (λ < λ0) λ0 = λ;\n\t            if (λ > λ1) λ1 = λ;\n\t          } else {\n\t            if (λ > λ_) {\n\t              if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n\t            } else {\n\t              if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n\t            }\n\t          }\n\t        }\n\t      } else {\n\t        point(λ, φ);\n\t      }\n\t      p0 = p, λ_ = λ;\n\t    }\n\t    function lineStart() {\n\t      bound.point = linePoint;\n\t    }\n\t    function lineEnd() {\n\t      range[0] = λ0, range[1] = λ1;\n\t      bound.point = point;\n\t      p0 = null;\n\t    }\n\t    function ringPoint(λ, φ) {\n\t      if (p0) {\n\t        var dλ = λ - λ_;\n\t        dλSum += abs(dλ) > 180 ? dλ + (dλ > 0 ? 360 : -360) : dλ;\n\t      } else λ__ = λ, φ__ = φ;\n\t      d3_geo_area.point(λ, φ);\n\t      linePoint(λ, φ);\n\t    }\n\t    function ringStart() {\n\t      d3_geo_area.lineStart();\n\t    }\n\t    function ringEnd() {\n\t      ringPoint(λ__, φ__);\n\t      d3_geo_area.lineEnd();\n\t      if (abs(dλSum) > ε) λ0 = -(λ1 = 180);\n\t      range[0] = λ0, range[1] = λ1;\n\t      p0 = null;\n\t    }\n\t    function angle(λ0, λ1) {\n\t      return (λ1 -= λ0) < 0 ? λ1 + 360 : λ1;\n\t    }\n\t    function compareRanges(a, b) {\n\t      return a[0] - b[0];\n\t    }\n\t    function withinRange(x, range) {\n\t      return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n\t    }\n\t    return function(feature) {\n\t      φ1 = λ1 = -(λ0 = φ0 = Infinity);\n\t      ranges = [];\n\t      d3.geo.stream(feature, bound);\n\t      var n = ranges.length;\n\t      if (n) {\n\t        ranges.sort(compareRanges);\n\t        for (var i = 1, a = ranges[0], b, merged = [ a ]; i < n; ++i) {\n\t          b = ranges[i];\n\t          if (withinRange(b[0], a) || withinRange(b[1], a)) {\n\t            if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n\t            if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n\t          } else {\n\t            merged.push(a = b);\n\t          }\n\t        }\n\t        var best = -Infinity, dλ;\n\t        for (var n = merged.length - 1, i = 0, a = merged[n], b; i <= n; a = b, ++i) {\n\t          b = merged[i];\n\t          if ((dλ = angle(a[1], b[0])) > best) best = dλ, λ0 = b[0], λ1 = a[1];\n\t        }\n\t      }\n\t      ranges = range = null;\n\t      return λ0 === Infinity || φ0 === Infinity ? [ [ NaN, NaN ], [ NaN, NaN ] ] : [ [ λ0, φ0 ], [ λ1, φ1 ] ];\n\t    };\n\t  }();\n\t  d3.geo.centroid = function(object) {\n\t    d3_geo_centroidW0 = d3_geo_centroidW1 = d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n\t    d3.geo.stream(object, d3_geo_centroid);\n\t    var x = d3_geo_centroidX2, y = d3_geo_centroidY2, z = d3_geo_centroidZ2, m = x * x + y * y + z * z;\n\t    if (m < ε2) {\n\t      x = d3_geo_centroidX1, y = d3_geo_centroidY1, z = d3_geo_centroidZ1;\n\t      if (d3_geo_centroidW1 < ε) x = d3_geo_centroidX0, y = d3_geo_centroidY0, z = d3_geo_centroidZ0;\n\t      m = x * x + y * y + z * z;\n\t      if (m < ε2) return [ NaN, NaN ];\n\t    }\n\t    return [ Math.atan2(y, x) * d3_degrees, d3_asin(z / Math.sqrt(m)) * d3_degrees ];\n\t  };\n\t  var d3_geo_centroidW0, d3_geo_centroidW1, d3_geo_centroidX0, d3_geo_centroidY0, d3_geo_centroidZ0, d3_geo_centroidX1, d3_geo_centroidY1, d3_geo_centroidZ1, d3_geo_centroidX2, d3_geo_centroidY2, d3_geo_centroidZ2;\n\t  var d3_geo_centroid = {\n\t    sphere: d3_noop,\n\t    point: d3_geo_centroidPoint,\n\t    lineStart: d3_geo_centroidLineStart,\n\t    lineEnd: d3_geo_centroidLineEnd,\n\t    polygonStart: function() {\n\t      d3_geo_centroid.lineStart = d3_geo_centroidRingStart;\n\t    },\n\t    polygonEnd: function() {\n\t      d3_geo_centroid.lineStart = d3_geo_centroidLineStart;\n\t    }\n\t  };\n\t  function d3_geo_centroidPoint(λ, φ) {\n\t    λ *= d3_radians;\n\t    var cosφ = Math.cos(φ *= d3_radians);\n\t    d3_geo_centroidPointXYZ(cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ));\n\t  }\n\t  function d3_geo_centroidPointXYZ(x, y, z) {\n\t    ++d3_geo_centroidW0;\n\t    d3_geo_centroidX0 += (x - d3_geo_centroidX0) / d3_geo_centroidW0;\n\t    d3_geo_centroidY0 += (y - d3_geo_centroidY0) / d3_geo_centroidW0;\n\t    d3_geo_centroidZ0 += (z - d3_geo_centroidZ0) / d3_geo_centroidW0;\n\t  }\n\t  function d3_geo_centroidLineStart() {\n\t    var x0, y0, z0;\n\t    d3_geo_centroid.point = function(λ, φ) {\n\t      λ *= d3_radians;\n\t      var cosφ = Math.cos(φ *= d3_radians);\n\t      x0 = cosφ * Math.cos(λ);\n\t      y0 = cosφ * Math.sin(λ);\n\t      z0 = Math.sin(φ);\n\t      d3_geo_centroid.point = nextPoint;\n\t      d3_geo_centroidPointXYZ(x0, y0, z0);\n\t    };\n\t    function nextPoint(λ, φ) {\n\t      λ *= d3_radians;\n\t      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), w = Math.atan2(Math.sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n\t      d3_geo_centroidW1 += w;\n\t      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n\t      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n\t      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n\t      d3_geo_centroidPointXYZ(x0, y0, z0);\n\t    }\n\t  }\n\t  function d3_geo_centroidLineEnd() {\n\t    d3_geo_centroid.point = d3_geo_centroidPoint;\n\t  }\n\t  function d3_geo_centroidRingStart() {\n\t    var λ00, φ00, x0, y0, z0;\n\t    d3_geo_centroid.point = function(λ, φ) {\n\t      λ00 = λ, φ00 = φ;\n\t      d3_geo_centroid.point = nextPoint;\n\t      λ *= d3_radians;\n\t      var cosφ = Math.cos(φ *= d3_radians);\n\t      x0 = cosφ * Math.cos(λ);\n\t      y0 = cosφ * Math.sin(λ);\n\t      z0 = Math.sin(φ);\n\t      d3_geo_centroidPointXYZ(x0, y0, z0);\n\t    };\n\t    d3_geo_centroid.lineEnd = function() {\n\t      nextPoint(λ00, φ00);\n\t      d3_geo_centroid.lineEnd = d3_geo_centroidLineEnd;\n\t      d3_geo_centroid.point = d3_geo_centroidPoint;\n\t    };\n\t    function nextPoint(λ, φ) {\n\t      λ *= d3_radians;\n\t      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), cx = y0 * z - z0 * y, cy = z0 * x - x0 * z, cz = x0 * y - y0 * x, m = Math.sqrt(cx * cx + cy * cy + cz * cz), u = x0 * x + y0 * y + z0 * z, v = m && -d3_acos(u) / m, w = Math.atan2(m, u);\n\t      d3_geo_centroidX2 += v * cx;\n\t      d3_geo_centroidY2 += v * cy;\n\t      d3_geo_centroidZ2 += v * cz;\n\t      d3_geo_centroidW1 += w;\n\t      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n\t      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n\t      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n\t      d3_geo_centroidPointXYZ(x0, y0, z0);\n\t    }\n\t  }\n\t  function d3_geo_compose(a, b) {\n\t    function compose(x, y) {\n\t      return x = a(x, y), b(x[0], x[1]);\n\t    }\n\t    if (a.invert && b.invert) compose.invert = function(x, y) {\n\t      return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n\t    };\n\t    return compose;\n\t  }\n\t  function d3_true() {\n\t    return true;\n\t  }\n\t  function d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener) {\n\t    var subject = [], clip = [];\n\t    segments.forEach(function(segment) {\n\t      if ((n = segment.length - 1) <= 0) return;\n\t      var n, p0 = segment[0], p1 = segment[n];\n\t      if (d3_geo_sphericalEqual(p0, p1)) {\n\t        listener.lineStart();\n\t        for (var i = 0; i < n; ++i) listener.point((p0 = segment[i])[0], p0[1]);\n\t        listener.lineEnd();\n\t        return;\n\t      }\n\t      var a = new d3_geo_clipPolygonIntersection(p0, segment, null, true), b = new d3_geo_clipPolygonIntersection(p0, null, a, false);\n\t      a.o = b;\n\t      subject.push(a);\n\t      clip.push(b);\n\t      a = new d3_geo_clipPolygonIntersection(p1, segment, null, false);\n\t      b = new d3_geo_clipPolygonIntersection(p1, null, a, true);\n\t      a.o = b;\n\t      subject.push(a);\n\t      clip.push(b);\n\t    });\n\t    clip.sort(compare);\n\t    d3_geo_clipPolygonLinkCircular(subject);\n\t    d3_geo_clipPolygonLinkCircular(clip);\n\t    if (!subject.length) return;\n\t    for (var i = 0, entry = clipStartInside, n = clip.length; i < n; ++i) {\n\t      clip[i].e = entry = !entry;\n\t    }\n\t    var start = subject[0], points, point;\n\t    while (1) {\n\t      var current = start, isSubject = true;\n\t      while (current.v) if ((current = current.n) === start) return;\n\t      points = current.z;\n\t      listener.lineStart();\n\t      do {\n\t        current.v = current.o.v = true;\n\t        if (current.e) {\n\t          if (isSubject) {\n\t            for (var i = 0, n = points.length; i < n; ++i) listener.point((point = points[i])[0], point[1]);\n\t          } else {\n\t            interpolate(current.x, current.n.x, 1, listener);\n\t          }\n\t          current = current.n;\n\t        } else {\n\t          if (isSubject) {\n\t            points = current.p.z;\n\t            for (var i = points.length - 1; i >= 0; --i) listener.point((point = points[i])[0], point[1]);\n\t          } else {\n\t            interpolate(current.x, current.p.x, -1, listener);\n\t          }\n\t          current = current.p;\n\t        }\n\t        current = current.o;\n\t        points = current.z;\n\t        isSubject = !isSubject;\n\t      } while (!current.v);\n\t      listener.lineEnd();\n\t    }\n\t  }\n\t  function d3_geo_clipPolygonLinkCircular(array) {\n\t    if (!(n = array.length)) return;\n\t    var n, i = 0, a = array[0], b;\n\t    while (++i < n) {\n\t      a.n = b = array[i];\n\t      b.p = a;\n\t      a = b;\n\t    }\n\t    a.n = b = array[0];\n\t    b.p = a;\n\t  }\n\t  function d3_geo_clipPolygonIntersection(point, points, other, entry) {\n\t    this.x = point;\n\t    this.z = points;\n\t    this.o = other;\n\t    this.e = entry;\n\t    this.v = false;\n\t    this.n = this.p = null;\n\t  }\n\t  function d3_geo_clip(pointVisible, clipLine, interpolate, clipStart) {\n\t    return function(rotate, listener) {\n\t      var line = clipLine(listener), rotatedClipStart = rotate.invert(clipStart[0], clipStart[1]);\n\t      var clip = {\n\t        point: point,\n\t        lineStart: lineStart,\n\t        lineEnd: lineEnd,\n\t        polygonStart: function() {\n\t          clip.point = pointRing;\n\t          clip.lineStart = ringStart;\n\t          clip.lineEnd = ringEnd;\n\t          segments = [];\n\t          polygon = [];\n\t        },\n\t        polygonEnd: function() {\n\t          clip.point = point;\n\t          clip.lineStart = lineStart;\n\t          clip.lineEnd = lineEnd;\n\t          segments = d3.merge(segments);\n\t          var clipStartInside = d3_geo_pointInPolygon(rotatedClipStart, polygon);\n\t          if (segments.length) {\n\t            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n\t            d3_geo_clipPolygon(segments, d3_geo_clipSort, clipStartInside, interpolate, listener);\n\t          } else if (clipStartInside) {\n\t            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n\t            listener.lineStart();\n\t            interpolate(null, null, 1, listener);\n\t            listener.lineEnd();\n\t          }\n\t          if (polygonStarted) listener.polygonEnd(), polygonStarted = false;\n\t          segments = polygon = null;\n\t        },\n\t        sphere: function() {\n\t          listener.polygonStart();\n\t          listener.lineStart();\n\t          interpolate(null, null, 1, listener);\n\t          listener.lineEnd();\n\t          listener.polygonEnd();\n\t        }\n\t      };\n\t      function point(λ, φ) {\n\t        var point = rotate(λ, φ);\n\t        if (pointVisible(λ = point[0], φ = point[1])) listener.point(λ, φ);\n\t      }\n\t      function pointLine(λ, φ) {\n\t        var point = rotate(λ, φ);\n\t        line.point(point[0], point[1]);\n\t      }\n\t      function lineStart() {\n\t        clip.point = pointLine;\n\t        line.lineStart();\n\t      }\n\t      function lineEnd() {\n\t        clip.point = point;\n\t        line.lineEnd();\n\t      }\n\t      var segments;\n\t      var buffer = d3_geo_clipBufferListener(), ringListener = clipLine(buffer), polygonStarted = false, polygon, ring;\n\t      function pointRing(λ, φ) {\n\t        ring.push([ λ, φ ]);\n\t        var point = rotate(λ, φ);\n\t        ringListener.point(point[0], point[1]);\n\t      }\n\t      function ringStart() {\n\t        ringListener.lineStart();\n\t        ring = [];\n\t      }\n\t      function ringEnd() {\n\t        pointRing(ring[0][0], ring[0][1]);\n\t        ringListener.lineEnd();\n\t        var clean = ringListener.clean(), ringSegments = buffer.buffer(), segment, n = ringSegments.length;\n\t        ring.pop();\n\t        polygon.push(ring);\n\t        ring = null;\n\t        if (!n) return;\n\t        if (clean & 1) {\n\t          segment = ringSegments[0];\n\t          var n = segment.length - 1, i = -1, point;\n\t          if (n > 0) {\n\t            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n\t            listener.lineStart();\n\t            while (++i < n) listener.point((point = segment[i])[0], point[1]);\n\t            listener.lineEnd();\n\t          }\n\t          return;\n\t        }\n\t        if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n\t        segments.push(ringSegments.filter(d3_geo_clipSegmentLength1));\n\t      }\n\t      return clip;\n\t    };\n\t  }\n\t  function d3_geo_clipSegmentLength1(segment) {\n\t    return segment.length > 1;\n\t  }\n\t  function d3_geo_clipBufferListener() {\n\t    var lines = [], line;\n\t    return {\n\t      lineStart: function() {\n\t        lines.push(line = []);\n\t      },\n\t      point: function(λ, φ) {\n\t        line.push([ λ, φ ]);\n\t      },\n\t      lineEnd: d3_noop,\n\t      buffer: function() {\n\t        var buffer = lines;\n\t        lines = [];\n\t        line = null;\n\t        return buffer;\n\t      },\n\t      rejoin: function() {\n\t        if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n\t      }\n\t    };\n\t  }\n\t  function d3_geo_clipSort(a, b) {\n\t    return ((a = a.x)[0] < 0 ? a[1] - halfπ - ε : halfπ - a[1]) - ((b = b.x)[0] < 0 ? b[1] - halfπ - ε : halfπ - b[1]);\n\t  }\n\t  var d3_geo_clipAntimeridian = d3_geo_clip(d3_true, d3_geo_clipAntimeridianLine, d3_geo_clipAntimeridianInterpolate, [ -π, -π / 2 ]);\n\t  function d3_geo_clipAntimeridianLine(listener) {\n\t    var λ0 = NaN, φ0 = NaN, sλ0 = NaN, clean;\n\t    return {\n\t      lineStart: function() {\n\t        listener.lineStart();\n\t        clean = 1;\n\t      },\n\t      point: function(λ1, φ1) {\n\t        var sλ1 = λ1 > 0 ? π : -π, dλ = abs(λ1 - λ0);\n\t        if (abs(dλ - π) < ε) {\n\t          listener.point(λ0, φ0 = (φ0 + φ1) / 2 > 0 ? halfπ : -halfπ);\n\t          listener.point(sλ0, φ0);\n\t          listener.lineEnd();\n\t          listener.lineStart();\n\t          listener.point(sλ1, φ0);\n\t          listener.point(λ1, φ0);\n\t          clean = 0;\n\t        } else if (sλ0 !== sλ1 && dλ >= π) {\n\t          if (abs(λ0 - sλ0) < ε) λ0 -= sλ0 * ε;\n\t          if (abs(λ1 - sλ1) < ε) λ1 -= sλ1 * ε;\n\t          φ0 = d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1);\n\t          listener.point(sλ0, φ0);\n\t          listener.lineEnd();\n\t          listener.lineStart();\n\t          listener.point(sλ1, φ0);\n\t          clean = 0;\n\t        }\n\t        listener.point(λ0 = λ1, φ0 = φ1);\n\t        sλ0 = sλ1;\n\t      },\n\t      lineEnd: function() {\n\t        listener.lineEnd();\n\t        λ0 = φ0 = NaN;\n\t      },\n\t      clean: function() {\n\t        return 2 - clean;\n\t      }\n\t    };\n\t  }\n\t  function d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1) {\n\t    var cosφ0, cosφ1, sinλ0_λ1 = Math.sin(λ0 - λ1);\n\t    return abs(sinλ0_λ1) > ε ? Math.atan((Math.sin(φ0) * (cosφ1 = Math.cos(φ1)) * Math.sin(λ1) - Math.sin(φ1) * (cosφ0 = Math.cos(φ0)) * Math.sin(λ0)) / (cosφ0 * cosφ1 * sinλ0_λ1)) : (φ0 + φ1) / 2;\n\t  }\n\t  function d3_geo_clipAntimeridianInterpolate(from, to, direction, listener) {\n\t    var φ;\n\t    if (from == null) {\n\t      φ = direction * halfπ;\n\t      listener.point(-π, φ);\n\t      listener.point(0, φ);\n\t      listener.point(π, φ);\n\t      listener.point(π, 0);\n\t      listener.point(π, -φ);\n\t      listener.point(0, -φ);\n\t      listener.point(-π, -φ);\n\t      listener.point(-π, 0);\n\t      listener.point(-π, φ);\n\t    } else if (abs(from[0] - to[0]) > ε) {\n\t      var s = from[0] < to[0] ? π : -π;\n\t      φ = direction * s / 2;\n\t      listener.point(-s, φ);\n\t      listener.point(0, φ);\n\t      listener.point(s, φ);\n\t    } else {\n\t      listener.point(to[0], to[1]);\n\t    }\n\t  }\n\t  function d3_geo_pointInPolygon(point, polygon) {\n\t    var meridian = point[0], parallel = point[1], meridianNormal = [ Math.sin(meridian), -Math.cos(meridian), 0 ], polarAngle = 0, winding = 0;\n\t    d3_geo_areaRingSum.reset();\n\t    for (var i = 0, n = polygon.length; i < n; ++i) {\n\t      var ring = polygon[i], m = ring.length;\n\t      if (!m) continue;\n\t      var point0 = ring[0], λ0 = point0[0], φ0 = point0[1] / 2 + π / 4, sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), j = 1;\n\t      while (true) {\n\t        if (j === m) j = 0;\n\t        point = ring[j];\n\t        var λ = point[0], φ = point[1] / 2 + π / 4, sinφ = Math.sin(φ), cosφ = Math.cos(φ), dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, antimeridian = adλ > π, k = sinφ0 * sinφ;\n\t        d3_geo_areaRingSum.add(Math.atan2(k * sdλ * Math.sin(adλ), cosφ0 * cosφ + k * Math.cos(adλ)));\n\t        polarAngle += antimeridian ? dλ + sdλ * τ : dλ;\n\t        if (antimeridian ^ λ0 >= meridian ^ λ >= meridian) {\n\t          var arc = d3_geo_cartesianCross(d3_geo_cartesian(point0), d3_geo_cartesian(point));\n\t          d3_geo_cartesianNormalize(arc);\n\t          var intersection = d3_geo_cartesianCross(meridianNormal, arc);\n\t          d3_geo_cartesianNormalize(intersection);\n\t          var φarc = (antimeridian ^ dλ >= 0 ? -1 : 1) * d3_asin(intersection[2]);\n\t          if (parallel > φarc || parallel === φarc && (arc[0] || arc[1])) {\n\t            winding += antimeridian ^ dλ >= 0 ? 1 : -1;\n\t          }\n\t        }\n\t        if (!j++) break;\n\t        λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ, point0 = point;\n\t      }\n\t    }\n\t    return (polarAngle < -ε || polarAngle < ε && d3_geo_areaRingSum < 0) ^ winding & 1;\n\t  }\n\t  function d3_geo_clipCircle(radius) {\n\t    var cr = Math.cos(radius), smallRadius = cr > 0, notHemisphere = abs(cr) > ε, interpolate = d3_geo_circleInterpolate(radius, 6 * d3_radians);\n\t    return d3_geo_clip(visible, clipLine, interpolate, smallRadius ? [ 0, -radius ] : [ -π, radius - π ]);\n\t    function visible(λ, φ) {\n\t      return Math.cos(λ) * Math.cos(φ) > cr;\n\t    }\n\t    function clipLine(listener) {\n\t      var point0, c0, v0, v00, clean;\n\t      return {\n\t        lineStart: function() {\n\t          v00 = v0 = false;\n\t          clean = 1;\n\t        },\n\t        point: function(λ, φ) {\n\t          var point1 = [ λ, φ ], point2, v = visible(λ, φ), c = smallRadius ? v ? 0 : code(λ, φ) : v ? code(λ + (λ < 0 ? π : -π), φ) : 0;\n\t          if (!point0 && (v00 = v0 = v)) listener.lineStart();\n\t          if (v !== v0) {\n\t            point2 = intersect(point0, point1);\n\t            if (d3_geo_sphericalEqual(point0, point2) || d3_geo_sphericalEqual(point1, point2)) {\n\t              point1[0] += ε;\n\t              point1[1] += ε;\n\t              v = visible(point1[0], point1[1]);\n\t            }\n\t          }\n\t          if (v !== v0) {\n\t            clean = 0;\n\t            if (v) {\n\t              listener.lineStart();\n\t              point2 = intersect(point1, point0);\n\t              listener.point(point2[0], point2[1]);\n\t            } else {\n\t              point2 = intersect(point0, point1);\n\t              listener.point(point2[0], point2[1]);\n\t              listener.lineEnd();\n\t            }\n\t            point0 = point2;\n\t          } else if (notHemisphere && point0 && smallRadius ^ v) {\n\t            var t;\n\t            if (!(c & c0) && (t = intersect(point1, point0, true))) {\n\t              clean = 0;\n\t              if (smallRadius) {\n\t                listener.lineStart();\n\t                listener.point(t[0][0], t[0][1]);\n\t                listener.point(t[1][0], t[1][1]);\n\t                listener.lineEnd();\n\t              } else {\n\t                listener.point(t[1][0], t[1][1]);\n\t                listener.lineEnd();\n\t                listener.lineStart();\n\t                listener.point(t[0][0], t[0][1]);\n\t              }\n\t            }\n\t          }\n\t          if (v && (!point0 || !d3_geo_sphericalEqual(point0, point1))) {\n\t            listener.point(point1[0], point1[1]);\n\t          }\n\t          point0 = point1, v0 = v, c0 = c;\n\t        },\n\t        lineEnd: function() {\n\t          if (v0) listener.lineEnd();\n\t          point0 = null;\n\t        },\n\t        clean: function() {\n\t          return clean | (v00 && v0) << 1;\n\t        }\n\t      };\n\t    }\n\t    function intersect(a, b, two) {\n\t      var pa = d3_geo_cartesian(a), pb = d3_geo_cartesian(b);\n\t      var n1 = [ 1, 0, 0 ], n2 = d3_geo_cartesianCross(pa, pb), n2n2 = d3_geo_cartesianDot(n2, n2), n1n2 = n2[0], determinant = n2n2 - n1n2 * n1n2;\n\t      if (!determinant) return !two && a;\n\t      var c1 = cr * n2n2 / determinant, c2 = -cr * n1n2 / determinant, n1xn2 = d3_geo_cartesianCross(n1, n2), A = d3_geo_cartesianScale(n1, c1), B = d3_geo_cartesianScale(n2, c2);\n\t      d3_geo_cartesianAdd(A, B);\n\t      var u = n1xn2, w = d3_geo_cartesianDot(A, u), uu = d3_geo_cartesianDot(u, u), t2 = w * w - uu * (d3_geo_cartesianDot(A, A) - 1);\n\t      if (t2 < 0) return;\n\t      var t = Math.sqrt(t2), q = d3_geo_cartesianScale(u, (-w - t) / uu);\n\t      d3_geo_cartesianAdd(q, A);\n\t      q = d3_geo_spherical(q);\n\t      if (!two) return q;\n\t      var λ0 = a[0], λ1 = b[0], φ0 = a[1], φ1 = b[1], z;\n\t      if (λ1 < λ0) z = λ0, λ0 = λ1, λ1 = z;\n\t      var δλ = λ1 - λ0, polar = abs(δλ - π) < ε, meridian = polar || δλ < ε;\n\t      if (!polar && φ1 < φ0) z = φ0, φ0 = φ1, φ1 = z;\n\t      if (meridian ? polar ? φ0 + φ1 > 0 ^ q[1] < (abs(q[0] - λ0) < ε ? φ0 : φ1) : φ0 <= q[1] && q[1] <= φ1 : δλ > π ^ (λ0 <= q[0] && q[0] <= λ1)) {\n\t        var q1 = d3_geo_cartesianScale(u, (-w + t) / uu);\n\t        d3_geo_cartesianAdd(q1, A);\n\t        return [ q, d3_geo_spherical(q1) ];\n\t      }\n\t    }\n\t    function code(λ, φ) {\n\t      var r = smallRadius ? radius : π - radius, code = 0;\n\t      if (λ < -r) code |= 1; else if (λ > r) code |= 2;\n\t      if (φ < -r) code |= 4; else if (φ > r) code |= 8;\n\t      return code;\n\t    }\n\t  }\n\t  function d3_geom_clipLine(x0, y0, x1, y1) {\n\t    return function(line) {\n\t      var a = line.a, b = line.b, ax = a.x, ay = a.y, bx = b.x, by = b.y, t0 = 0, t1 = 1, dx = bx - ax, dy = by - ay, r;\n\t      r = x0 - ax;\n\t      if (!dx && r > 0) return;\n\t      r /= dx;\n\t      if (dx < 0) {\n\t        if (r < t0) return;\n\t        if (r < t1) t1 = r;\n\t      } else if (dx > 0) {\n\t        if (r > t1) return;\n\t        if (r > t0) t0 = r;\n\t      }\n\t      r = x1 - ax;\n\t      if (!dx && r < 0) return;\n\t      r /= dx;\n\t      if (dx < 0) {\n\t        if (r > t1) return;\n\t        if (r > t0) t0 = r;\n\t      } else if (dx > 0) {\n\t        if (r < t0) return;\n\t        if (r < t1) t1 = r;\n\t      }\n\t      r = y0 - ay;\n\t      if (!dy && r > 0) return;\n\t      r /= dy;\n\t      if (dy < 0) {\n\t        if (r < t0) return;\n\t        if (r < t1) t1 = r;\n\t      } else if (dy > 0) {\n\t        if (r > t1) return;\n\t        if (r > t0) t0 = r;\n\t      }\n\t      r = y1 - ay;\n\t      if (!dy && r < 0) return;\n\t      r /= dy;\n\t      if (dy < 0) {\n\t        if (r > t1) return;\n\t        if (r > t0) t0 = r;\n\t      } else if (dy > 0) {\n\t        if (r < t0) return;\n\t        if (r < t1) t1 = r;\n\t      }\n\t      if (t0 > 0) line.a = {\n\t        x: ax + t0 * dx,\n\t        y: ay + t0 * dy\n\t      };\n\t      if (t1 < 1) line.b = {\n\t        x: ax + t1 * dx,\n\t        y: ay + t1 * dy\n\t      };\n\t      return line;\n\t    };\n\t  }\n\t  var d3_geo_clipExtentMAX = 1e9;\n\t  d3.geo.clipExtent = function() {\n\t    var x0, y0, x1, y1, stream, clip, clipExtent = {\n\t      stream: function(output) {\n\t        if (stream) stream.valid = false;\n\t        stream = clip(output);\n\t        stream.valid = true;\n\t        return stream;\n\t      },\n\t      extent: function(_) {\n\t        if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n\t        clip = d3_geo_clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]);\n\t        if (stream) stream.valid = false, stream = null;\n\t        return clipExtent;\n\t      }\n\t    };\n\t    return clipExtent.extent([ [ 0, 0 ], [ 960, 500 ] ]);\n\t  };\n\t  function d3_geo_clipExtent(x0, y0, x1, y1) {\n\t    return function(listener) {\n\t      var listener_ = listener, bufferListener = d3_geo_clipBufferListener(), clipLine = d3_geom_clipLine(x0, y0, x1, y1), segments, polygon, ring;\n\t      var clip = {\n\t        point: point,\n\t        lineStart: lineStart,\n\t        lineEnd: lineEnd,\n\t        polygonStart: function() {\n\t          listener = bufferListener;\n\t          segments = [];\n\t          polygon = [];\n\t          clean = true;\n\t        },\n\t        polygonEnd: function() {\n\t          listener = listener_;\n\t          segments = d3.merge(segments);\n\t          var clipStartInside = insidePolygon([ x0, y1 ]), inside = clean && clipStartInside, visible = segments.length;\n\t          if (inside || visible) {\n\t            listener.polygonStart();\n\t            if (inside) {\n\t              listener.lineStart();\n\t              interpolate(null, null, 1, listener);\n\t              listener.lineEnd();\n\t            }\n\t            if (visible) {\n\t              d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener);\n\t            }\n\t            listener.polygonEnd();\n\t          }\n\t          segments = polygon = ring = null;\n\t        }\n\t      };\n\t      function insidePolygon(p) {\n\t        var wn = 0, n = polygon.length, y = p[1];\n\t        for (var i = 0; i < n; ++i) {\n\t          for (var j = 1, v = polygon[i], m = v.length, a = v[0], b; j < m; ++j) {\n\t            b = v[j];\n\t            if (a[1] <= y) {\n\t              if (b[1] > y && d3_cross2d(a, b, p) > 0) ++wn;\n\t            } else {\n\t              if (b[1] <= y && d3_cross2d(a, b, p) < 0) --wn;\n\t            }\n\t            a = b;\n\t          }\n\t        }\n\t        return wn !== 0;\n\t      }\n\t      function interpolate(from, to, direction, listener) {\n\t        var a = 0, a1 = 0;\n\t        if (from == null || (a = corner(from, direction)) !== (a1 = corner(to, direction)) || comparePoints(from, to) < 0 ^ direction > 0) {\n\t          do {\n\t            listener.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n\t          } while ((a = (a + direction + 4) % 4) !== a1);\n\t        } else {\n\t          listener.point(to[0], to[1]);\n\t        }\n\t      }\n\t      function pointVisible(x, y) {\n\t        return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n\t      }\n\t      function point(x, y) {\n\t        if (pointVisible(x, y)) listener.point(x, y);\n\t      }\n\t      var x__, y__, v__, x_, y_, v_, first, clean;\n\t      function lineStart() {\n\t        clip.point = linePoint;\n\t        if (polygon) polygon.push(ring = []);\n\t        first = true;\n\t        v_ = false;\n\t        x_ = y_ = NaN;\n\t      }\n\t      function lineEnd() {\n\t        if (segments) {\n\t          linePoint(x__, y__);\n\t          if (v__ && v_) bufferListener.rejoin();\n\t          segments.push(bufferListener.buffer());\n\t        }\n\t        clip.point = point;\n\t        if (v_) listener.lineEnd();\n\t      }\n\t      function linePoint(x, y) {\n\t        x = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, x));\n\t        y = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, y));\n\t        var v = pointVisible(x, y);\n\t        if (polygon) ring.push([ x, y ]);\n\t        if (first) {\n\t          x__ = x, y__ = y, v__ = v;\n\t          first = false;\n\t          if (v) {\n\t            listener.lineStart();\n\t            listener.point(x, y);\n\t          }\n\t        } else {\n\t          if (v && v_) listener.point(x, y); else {\n\t            var l = {\n\t              a: {\n\t                x: x_,\n\t                y: y_\n\t              },\n\t              b: {\n\t                x: x,\n\t                y: y\n\t              }\n\t            };\n\t            if (clipLine(l)) {\n\t              if (!v_) {\n\t                listener.lineStart();\n\t                listener.point(l.a.x, l.a.y);\n\t              }\n\t              listener.point(l.b.x, l.b.y);\n\t              if (!v) listener.lineEnd();\n\t              clean = false;\n\t            } else if (v) {\n\t              listener.lineStart();\n\t              listener.point(x, y);\n\t              clean = false;\n\t            }\n\t          }\n\t        }\n\t        x_ = x, y_ = y, v_ = v;\n\t      }\n\t      return clip;\n\t    };\n\t    function corner(p, direction) {\n\t      return abs(p[0] - x0) < ε ? direction > 0 ? 0 : 3 : abs(p[0] - x1) < ε ? direction > 0 ? 2 : 1 : abs(p[1] - y0) < ε ? direction > 0 ? 1 : 0 : direction > 0 ? 3 : 2;\n\t    }\n\t    function compare(a, b) {\n\t      return comparePoints(a.x, b.x);\n\t    }\n\t    function comparePoints(a, b) {\n\t      var ca = corner(a, 1), cb = corner(b, 1);\n\t      return ca !== cb ? ca - cb : ca === 0 ? b[1] - a[1] : ca === 1 ? a[0] - b[0] : ca === 2 ? a[1] - b[1] : b[0] - a[0];\n\t    }\n\t  }\n\t  function d3_geo_conic(projectAt) {\n\t    var φ0 = 0, φ1 = π / 3, m = d3_geo_projectionMutator(projectAt), p = m(φ0, φ1);\n\t    p.parallels = function(_) {\n\t      if (!arguments.length) return [ φ0 / π * 180, φ1 / π * 180 ];\n\t      return m(φ0 = _[0] * π / 180, φ1 = _[1] * π / 180);\n\t    };\n\t    return p;\n\t  }\n\t  function d3_geo_conicEqualArea(φ0, φ1) {\n\t    var sinφ0 = Math.sin(φ0), n = (sinφ0 + Math.sin(φ1)) / 2, C = 1 + sinφ0 * (2 * n - sinφ0), ρ0 = Math.sqrt(C) / n;\n\t    function forward(λ, φ) {\n\t      var ρ = Math.sqrt(C - 2 * n * Math.sin(φ)) / n;\n\t      return [ ρ * Math.sin(λ *= n), ρ0 - ρ * Math.cos(λ) ];\n\t    }\n\t    forward.invert = function(x, y) {\n\t      var ρ0_y = ρ0 - y;\n\t      return [ Math.atan2(x, ρ0_y) / n, d3_asin((C - (x * x + ρ0_y * ρ0_y) * n * n) / (2 * n)) ];\n\t    };\n\t    return forward;\n\t  }\n\t  (d3.geo.conicEqualArea = function() {\n\t    return d3_geo_conic(d3_geo_conicEqualArea);\n\t  }).raw = d3_geo_conicEqualArea;\n\t  d3.geo.albers = function() {\n\t    return d3.geo.conicEqualArea().rotate([ 96, 0 ]).center([ -.6, 38.7 ]).parallels([ 29.5, 45.5 ]).scale(1070);\n\t  };\n\t  d3.geo.albersUsa = function() {\n\t    var lower48 = d3.geo.albers();\n\t    var alaska = d3.geo.conicEqualArea().rotate([ 154, 0 ]).center([ -2, 58.5 ]).parallels([ 55, 65 ]);\n\t    var hawaii = d3.geo.conicEqualArea().rotate([ 157, 0 ]).center([ -3, 19.9 ]).parallels([ 8, 18 ]);\n\t    var point, pointStream = {\n\t      point: function(x, y) {\n\t        point = [ x, y ];\n\t      }\n\t    }, lower48Point, alaskaPoint, hawaiiPoint;\n\t    function albersUsa(coordinates) {\n\t      var x = coordinates[0], y = coordinates[1];\n\t      point = null;\n\t      (lower48Point(x, y), point) || (alaskaPoint(x, y), point) || hawaiiPoint(x, y);\n\t      return point;\n\t    }\n\t    albersUsa.invert = function(coordinates) {\n\t      var k = lower48.scale(), t = lower48.translate(), x = (coordinates[0] - t[0]) / k, y = (coordinates[1] - t[1]) / k;\n\t      return (y >= .12 && y < .234 && x >= -.425 && x < -.214 ? alaska : y >= .166 && y < .234 && x >= -.214 && x < -.115 ? hawaii : lower48).invert(coordinates);\n\t    };\n\t    albersUsa.stream = function(stream) {\n\t      var lower48Stream = lower48.stream(stream), alaskaStream = alaska.stream(stream), hawaiiStream = hawaii.stream(stream);\n\t      return {\n\t        point: function(x, y) {\n\t          lower48Stream.point(x, y);\n\t          alaskaStream.point(x, y);\n\t          hawaiiStream.point(x, y);\n\t        },\n\t        sphere: function() {\n\t          lower48Stream.sphere();\n\t          alaskaStream.sphere();\n\t          hawaiiStream.sphere();\n\t        },\n\t        lineStart: function() {\n\t          lower48Stream.lineStart();\n\t          alaskaStream.lineStart();\n\t          hawaiiStream.lineStart();\n\t        },\n\t        lineEnd: function() {\n\t          lower48Stream.lineEnd();\n\t          alaskaStream.lineEnd();\n\t          hawaiiStream.lineEnd();\n\t        },\n\t        polygonStart: function() {\n\t          lower48Stream.polygonStart();\n\t          alaskaStream.polygonStart();\n\t          hawaiiStream.polygonStart();\n\t        },\n\t        polygonEnd: function() {\n\t          lower48Stream.polygonEnd();\n\t          alaskaStream.polygonEnd();\n\t          hawaiiStream.polygonEnd();\n\t        }\n\t      };\n\t    };\n\t    albersUsa.precision = function(_) {\n\t      if (!arguments.length) return lower48.precision();\n\t      lower48.precision(_);\n\t      alaska.precision(_);\n\t      hawaii.precision(_);\n\t      return albersUsa;\n\t    };\n\t    albersUsa.scale = function(_) {\n\t      if (!arguments.length) return lower48.scale();\n\t      lower48.scale(_);\n\t      alaska.scale(_ * .35);\n\t      hawaii.scale(_);\n\t      return albersUsa.translate(lower48.translate());\n\t    };\n\t    albersUsa.translate = function(_) {\n\t      if (!arguments.length) return lower48.translate();\n\t      var k = lower48.scale(), x = +_[0], y = +_[1];\n\t      lower48Point = lower48.translate(_).clipExtent([ [ x - .455 * k, y - .238 * k ], [ x + .455 * k, y + .238 * k ] ]).stream(pointStream).point;\n\t      alaskaPoint = alaska.translate([ x - .307 * k, y + .201 * k ]).clipExtent([ [ x - .425 * k + ε, y + .12 * k + ε ], [ x - .214 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n\t      hawaiiPoint = hawaii.translate([ x - .205 * k, y + .212 * k ]).clipExtent([ [ x - .214 * k + ε, y + .166 * k + ε ], [ x - .115 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n\t      return albersUsa;\n\t    };\n\t    return albersUsa.scale(1070);\n\t  };\n\t  var d3_geo_pathAreaSum, d3_geo_pathAreaPolygon, d3_geo_pathArea = {\n\t    point: d3_noop,\n\t    lineStart: d3_noop,\n\t    lineEnd: d3_noop,\n\t    polygonStart: function() {\n\t      d3_geo_pathAreaPolygon = 0;\n\t      d3_geo_pathArea.lineStart = d3_geo_pathAreaRingStart;\n\t    },\n\t    polygonEnd: function() {\n\t      d3_geo_pathArea.lineStart = d3_geo_pathArea.lineEnd = d3_geo_pathArea.point = d3_noop;\n\t      d3_geo_pathAreaSum += abs(d3_geo_pathAreaPolygon / 2);\n\t    }\n\t  };\n\t  function d3_geo_pathAreaRingStart() {\n\t    var x00, y00, x0, y0;\n\t    d3_geo_pathArea.point = function(x, y) {\n\t      d3_geo_pathArea.point = nextPoint;\n\t      x00 = x0 = x, y00 = y0 = y;\n\t    };\n\t    function nextPoint(x, y) {\n\t      d3_geo_pathAreaPolygon += y0 * x - x0 * y;\n\t      x0 = x, y0 = y;\n\t    }\n\t    d3_geo_pathArea.lineEnd = function() {\n\t      nextPoint(x00, y00);\n\t    };\n\t  }\n\t  var d3_geo_pathBoundsX0, d3_geo_pathBoundsY0, d3_geo_pathBoundsX1, d3_geo_pathBoundsY1;\n\t  var d3_geo_pathBounds = {\n\t    point: d3_geo_pathBoundsPoint,\n\t    lineStart: d3_noop,\n\t    lineEnd: d3_noop,\n\t    polygonStart: d3_noop,\n\t    polygonEnd: d3_noop\n\t  };\n\t  function d3_geo_pathBoundsPoint(x, y) {\n\t    if (x < d3_geo_pathBoundsX0) d3_geo_pathBoundsX0 = x;\n\t    if (x > d3_geo_pathBoundsX1) d3_geo_pathBoundsX1 = x;\n\t    if (y < d3_geo_pathBoundsY0) d3_geo_pathBoundsY0 = y;\n\t    if (y > d3_geo_pathBoundsY1) d3_geo_pathBoundsY1 = y;\n\t  }\n\t  function d3_geo_pathBuffer() {\n\t    var pointCircle = d3_geo_pathBufferCircle(4.5), buffer = [];\n\t    var stream = {\n\t      point: point,\n\t      lineStart: function() {\n\t        stream.point = pointLineStart;\n\t      },\n\t      lineEnd: lineEnd,\n\t      polygonStart: function() {\n\t        stream.lineEnd = lineEndPolygon;\n\t      },\n\t      polygonEnd: function() {\n\t        stream.lineEnd = lineEnd;\n\t        stream.point = point;\n\t      },\n\t      pointRadius: function(_) {\n\t        pointCircle = d3_geo_pathBufferCircle(_);\n\t        return stream;\n\t      },\n\t      result: function() {\n\t        if (buffer.length) {\n\t          var result = buffer.join(\"\");\n\t          buffer = [];\n\t          return result;\n\t        }\n\t      }\n\t    };\n\t    function point(x, y) {\n\t      buffer.push(\"M\", x, \",\", y, pointCircle);\n\t    }\n\t    function pointLineStart(x, y) {\n\t      buffer.push(\"M\", x, \",\", y);\n\t      stream.point = pointLine;\n\t    }\n\t    function pointLine(x, y) {\n\t      buffer.push(\"L\", x, \",\", y);\n\t    }\n\t    function lineEnd() {\n\t      stream.point = point;\n\t    }\n\t    function lineEndPolygon() {\n\t      buffer.push(\"Z\");\n\t    }\n\t    return stream;\n\t  }\n\t  function d3_geo_pathBufferCircle(radius) {\n\t    return \"m0,\" + radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius + \"z\";\n\t  }\n\t  var d3_geo_pathCentroid = {\n\t    point: d3_geo_pathCentroidPoint,\n\t    lineStart: d3_geo_pathCentroidLineStart,\n\t    lineEnd: d3_geo_pathCentroidLineEnd,\n\t    polygonStart: function() {\n\t      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidRingStart;\n\t    },\n\t    polygonEnd: function() {\n\t      d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n\t      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidLineStart;\n\t      d3_geo_pathCentroid.lineEnd = d3_geo_pathCentroidLineEnd;\n\t    }\n\t  };\n\t  function d3_geo_pathCentroidPoint(x, y) {\n\t    d3_geo_centroidX0 += x;\n\t    d3_geo_centroidY0 += y;\n\t    ++d3_geo_centroidZ0;\n\t  }\n\t  function d3_geo_pathCentroidLineStart() {\n\t    var x0, y0;\n\t    d3_geo_pathCentroid.point = function(x, y) {\n\t      d3_geo_pathCentroid.point = nextPoint;\n\t      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n\t    };\n\t    function nextPoint(x, y) {\n\t      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n\t      d3_geo_centroidX1 += z * (x0 + x) / 2;\n\t      d3_geo_centroidY1 += z * (y0 + y) / 2;\n\t      d3_geo_centroidZ1 += z;\n\t      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n\t    }\n\t  }\n\t  function d3_geo_pathCentroidLineEnd() {\n\t    d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n\t  }\n\t  function d3_geo_pathCentroidRingStart() {\n\t    var x00, y00, x0, y0;\n\t    d3_geo_pathCentroid.point = function(x, y) {\n\t      d3_geo_pathCentroid.point = nextPoint;\n\t      d3_geo_pathCentroidPoint(x00 = x0 = x, y00 = y0 = y);\n\t    };\n\t    function nextPoint(x, y) {\n\t      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n\t      d3_geo_centroidX1 += z * (x0 + x) / 2;\n\t      d3_geo_centroidY1 += z * (y0 + y) / 2;\n\t      d3_geo_centroidZ1 += z;\n\t      z = y0 * x - x0 * y;\n\t      d3_geo_centroidX2 += z * (x0 + x);\n\t      d3_geo_centroidY2 += z * (y0 + y);\n\t      d3_geo_centroidZ2 += z * 3;\n\t      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n\t    }\n\t    d3_geo_pathCentroid.lineEnd = function() {\n\t      nextPoint(x00, y00);\n\t    };\n\t  }\n\t  function d3_geo_pathContext(context) {\n\t    var pointRadius = 4.5;\n\t    var stream = {\n\t      point: point,\n\t      lineStart: function() {\n\t        stream.point = pointLineStart;\n\t      },\n\t      lineEnd: lineEnd,\n\t      polygonStart: function() {\n\t        stream.lineEnd = lineEndPolygon;\n\t      },\n\t      polygonEnd: function() {\n\t        stream.lineEnd = lineEnd;\n\t        stream.point = point;\n\t      },\n\t      pointRadius: function(_) {\n\t        pointRadius = _;\n\t        return stream;\n\t      },\n\t      result: d3_noop\n\t    };\n\t    function point(x, y) {\n\t      context.moveTo(x + pointRadius, y);\n\t      context.arc(x, y, pointRadius, 0, τ);\n\t    }\n\t    function pointLineStart(x, y) {\n\t      context.moveTo(x, y);\n\t      stream.point = pointLine;\n\t    }\n\t    function pointLine(x, y) {\n\t      context.lineTo(x, y);\n\t    }\n\t    function lineEnd() {\n\t      stream.point = point;\n\t    }\n\t    function lineEndPolygon() {\n\t      context.closePath();\n\t    }\n\t    return stream;\n\t  }\n\t  function d3_geo_resample(project) {\n\t    var δ2 = .5, cosMinDistance = Math.cos(30 * d3_radians), maxDepth = 16;\n\t    function resample(stream) {\n\t      return (maxDepth ? resampleRecursive : resampleNone)(stream);\n\t    }\n\t    function resampleNone(stream) {\n\t      return d3_geo_transformPoint(stream, function(x, y) {\n\t        x = project(x, y);\n\t        stream.point(x[0], x[1]);\n\t      });\n\t    }\n\t    function resampleRecursive(stream) {\n\t      var λ00, φ00, x00, y00, a00, b00, c00, λ0, x0, y0, a0, b0, c0;\n\t      var resample = {\n\t        point: point,\n\t        lineStart: lineStart,\n\t        lineEnd: lineEnd,\n\t        polygonStart: function() {\n\t          stream.polygonStart();\n\t          resample.lineStart = ringStart;\n\t        },\n\t        polygonEnd: function() {\n\t          stream.polygonEnd();\n\t          resample.lineStart = lineStart;\n\t        }\n\t      };\n\t      function point(x, y) {\n\t        x = project(x, y);\n\t        stream.point(x[0], x[1]);\n\t      }\n\t      function lineStart() {\n\t        x0 = NaN;\n\t        resample.point = linePoint;\n\t        stream.lineStart();\n\t      }\n\t      function linePoint(λ, φ) {\n\t        var c = d3_geo_cartesian([ λ, φ ]), p = project(λ, φ);\n\t        resampleLineTo(x0, y0, λ0, a0, b0, c0, x0 = p[0], y0 = p[1], λ0 = λ, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n\t        stream.point(x0, y0);\n\t      }\n\t      function lineEnd() {\n\t        resample.point = point;\n\t        stream.lineEnd();\n\t      }\n\t      function ringStart() {\n\t        lineStart();\n\t        resample.point = ringPoint;\n\t        resample.lineEnd = ringEnd;\n\t      }\n\t      function ringPoint(λ, φ) {\n\t        linePoint(λ00 = λ, φ00 = φ), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n\t        resample.point = linePoint;\n\t      }\n\t      function ringEnd() {\n\t        resampleLineTo(x0, y0, λ0, a0, b0, c0, x00, y00, λ00, a00, b00, c00, maxDepth, stream);\n\t        resample.lineEnd = lineEnd;\n\t        lineEnd();\n\t      }\n\t      return resample;\n\t    }\n\t    function resampleLineTo(x0, y0, λ0, a0, b0, c0, x1, y1, λ1, a1, b1, c1, depth, stream) {\n\t      var dx = x1 - x0, dy = y1 - y0, d2 = dx * dx + dy * dy;\n\t      if (d2 > 4 * δ2 && depth--) {\n\t        var a = a0 + a1, b = b0 + b1, c = c0 + c1, m = Math.sqrt(a * a + b * b + c * c), φ2 = Math.asin(c /= m), λ2 = abs(abs(c) - 1) < ε || abs(λ0 - λ1) < ε ? (λ0 + λ1) / 2 : Math.atan2(b, a), p = project(λ2, φ2), x2 = p[0], y2 = p[1], dx2 = x2 - x0, dy2 = y2 - y0, dz = dy * dx2 - dx * dy2;\n\t        if (dz * dz / d2 > δ2 || abs((dx * dx2 + dy * dy2) / d2 - .5) > .3 || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) {\n\t          resampleLineTo(x0, y0, λ0, a0, b0, c0, x2, y2, λ2, a /= m, b /= m, c, depth, stream);\n\t          stream.point(x2, y2);\n\t          resampleLineTo(x2, y2, λ2, a, b, c, x1, y1, λ1, a1, b1, c1, depth, stream);\n\t        }\n\t      }\n\t    }\n\t    resample.precision = function(_) {\n\t      if (!arguments.length) return Math.sqrt(δ2);\n\t      maxDepth = (δ2 = _ * _) > 0 && 16;\n\t      return resample;\n\t    };\n\t    return resample;\n\t  }\n\t  d3.geo.path = function() {\n\t    var pointRadius = 4.5, projection, context, projectStream, contextStream, cacheStream;\n\t    function path(object) {\n\t      if (object) {\n\t        if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n\t        if (!cacheStream || !cacheStream.valid) cacheStream = projectStream(contextStream);\n\t        d3.geo.stream(object, cacheStream);\n\t      }\n\t      return contextStream.result();\n\t    }\n\t    path.area = function(object) {\n\t      d3_geo_pathAreaSum = 0;\n\t      d3.geo.stream(object, projectStream(d3_geo_pathArea));\n\t      return d3_geo_pathAreaSum;\n\t    };\n\t    path.centroid = function(object) {\n\t      d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n\t      d3.geo.stream(object, projectStream(d3_geo_pathCentroid));\n\t      return d3_geo_centroidZ2 ? [ d3_geo_centroidX2 / d3_geo_centroidZ2, d3_geo_centroidY2 / d3_geo_centroidZ2 ] : d3_geo_centroidZ1 ? [ d3_geo_centroidX1 / d3_geo_centroidZ1, d3_geo_centroidY1 / d3_geo_centroidZ1 ] : d3_geo_centroidZ0 ? [ d3_geo_centroidX0 / d3_geo_centroidZ0, d3_geo_centroidY0 / d3_geo_centroidZ0 ] : [ NaN, NaN ];\n\t    };\n\t    path.bounds = function(object) {\n\t      d3_geo_pathBoundsX1 = d3_geo_pathBoundsY1 = -(d3_geo_pathBoundsX0 = d3_geo_pathBoundsY0 = Infinity);\n\t      d3.geo.stream(object, projectStream(d3_geo_pathBounds));\n\t      return [ [ d3_geo_pathBoundsX0, d3_geo_pathBoundsY0 ], [ d3_geo_pathBoundsX1, d3_geo_pathBoundsY1 ] ];\n\t    };\n\t    path.projection = function(_) {\n\t      if (!arguments.length) return projection;\n\t      projectStream = (projection = _) ? _.stream || d3_geo_pathProjectStream(_) : d3_identity;\n\t      return reset();\n\t    };\n\t    path.context = function(_) {\n\t      if (!arguments.length) return context;\n\t      contextStream = (context = _) == null ? new d3_geo_pathBuffer() : new d3_geo_pathContext(_);\n\t      if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n\t      return reset();\n\t    };\n\t    path.pointRadius = function(_) {\n\t      if (!arguments.length) return pointRadius;\n\t      pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n\t      return path;\n\t    };\n\t    function reset() {\n\t      cacheStream = null;\n\t      return path;\n\t    }\n\t    return path.projection(d3.geo.albersUsa()).context(null);\n\t  };\n\t  function d3_geo_pathProjectStream(project) {\n\t    var resample = d3_geo_resample(function(x, y) {\n\t      return project([ x * d3_degrees, y * d3_degrees ]);\n\t    });\n\t    return function(stream) {\n\t      return d3_geo_projectionRadians(resample(stream));\n\t    };\n\t  }\n\t  d3.geo.transform = function(methods) {\n\t    return {\n\t      stream: function(stream) {\n\t        var transform = new d3_geo_transform(stream);\n\t        for (var k in methods) transform[k] = methods[k];\n\t        return transform;\n\t      }\n\t    };\n\t  };\n\t  function d3_geo_transform(stream) {\n\t    this.stream = stream;\n\t  }\n\t  d3_geo_transform.prototype = {\n\t    point: function(x, y) {\n\t      this.stream.point(x, y);\n\t    },\n\t    sphere: function() {\n\t      this.stream.sphere();\n\t    },\n\t    lineStart: function() {\n\t      this.stream.lineStart();\n\t    },\n\t    lineEnd: function() {\n\t      this.stream.lineEnd();\n\t    },\n\t    polygonStart: function() {\n\t      this.stream.polygonStart();\n\t    },\n\t    polygonEnd: function() {\n\t      this.stream.polygonEnd();\n\t    }\n\t  };\n\t  function d3_geo_transformPoint(stream, point) {\n\t    return {\n\t      point: point,\n\t      sphere: function() {\n\t        stream.sphere();\n\t      },\n\t      lineStart: function() {\n\t        stream.lineStart();\n\t      },\n\t      lineEnd: function() {\n\t        stream.lineEnd();\n\t      },\n\t      polygonStart: function() {\n\t        stream.polygonStart();\n\t      },\n\t      polygonEnd: function() {\n\t        stream.polygonEnd();\n\t      }\n\t    };\n\t  }\n\t  d3.geo.projection = d3_geo_projection;\n\t  d3.geo.projectionMutator = d3_geo_projectionMutator;\n\t  function d3_geo_projection(project) {\n\t    return d3_geo_projectionMutator(function() {\n\t      return project;\n\t    })();\n\t  }\n\t  function d3_geo_projectionMutator(projectAt) {\n\t    var project, rotate, projectRotate, projectResample = d3_geo_resample(function(x, y) {\n\t      x = project(x, y);\n\t      return [ x[0] * k + δx, δy - x[1] * k ];\n\t    }), k = 150, x = 480, y = 250, λ = 0, φ = 0, δλ = 0, δφ = 0, δγ = 0, δx, δy, preclip = d3_geo_clipAntimeridian, postclip = d3_identity, clipAngle = null, clipExtent = null, stream;\n\t    function projection(point) {\n\t      point = projectRotate(point[0] * d3_radians, point[1] * d3_radians);\n\t      return [ point[0] * k + δx, δy - point[1] * k ];\n\t    }\n\t    function invert(point) {\n\t      point = projectRotate.invert((point[0] - δx) / k, (δy - point[1]) / k);\n\t      return point && [ point[0] * d3_degrees, point[1] * d3_degrees ];\n\t    }\n\t    projection.stream = function(output) {\n\t      if (stream) stream.valid = false;\n\t      stream = d3_geo_projectionRadians(preclip(rotate, projectResample(postclip(output))));\n\t      stream.valid = true;\n\t      return stream;\n\t    };\n\t    projection.clipAngle = function(_) {\n\t      if (!arguments.length) return clipAngle;\n\t      preclip = _ == null ? (clipAngle = _, d3_geo_clipAntimeridian) : d3_geo_clipCircle((clipAngle = +_) * d3_radians);\n\t      return invalidate();\n\t    };\n\t    projection.clipExtent = function(_) {\n\t      if (!arguments.length) return clipExtent;\n\t      clipExtent = _;\n\t      postclip = _ ? d3_geo_clipExtent(_[0][0], _[0][1], _[1][0], _[1][1]) : d3_identity;\n\t      return invalidate();\n\t    };\n\t    projection.scale = function(_) {\n\t      if (!arguments.length) return k;\n\t      k = +_;\n\t      return reset();\n\t    };\n\t    projection.translate = function(_) {\n\t      if (!arguments.length) return [ x, y ];\n\t      x = +_[0];\n\t      y = +_[1];\n\t      return reset();\n\t    };\n\t    projection.center = function(_) {\n\t      if (!arguments.length) return [ λ * d3_degrees, φ * d3_degrees ];\n\t      λ = _[0] % 360 * d3_radians;\n\t      φ = _[1] % 360 * d3_radians;\n\t      return reset();\n\t    };\n\t    projection.rotate = function(_) {\n\t      if (!arguments.length) return [ δλ * d3_degrees, δφ * d3_degrees, δγ * d3_degrees ];\n\t      δλ = _[0] % 360 * d3_radians;\n\t      δφ = _[1] % 360 * d3_radians;\n\t      δγ = _.length > 2 ? _[2] % 360 * d3_radians : 0;\n\t      return reset();\n\t    };\n\t    d3.rebind(projection, projectResample, \"precision\");\n\t    function reset() {\n\t      projectRotate = d3_geo_compose(rotate = d3_geo_rotation(δλ, δφ, δγ), project);\n\t      var center = project(λ, φ);\n\t      δx = x - center[0] * k;\n\t      δy = y + center[1] * k;\n\t      return invalidate();\n\t    }\n\t    function invalidate() {\n\t      if (stream) stream.valid = false, stream = null;\n\t      return projection;\n\t    }\n\t    return function() {\n\t      project = projectAt.apply(this, arguments);\n\t      projection.invert = project.invert && invert;\n\t      return reset();\n\t    };\n\t  }\n\t  function d3_geo_projectionRadians(stream) {\n\t    return d3_geo_transformPoint(stream, function(x, y) {\n\t      stream.point(x * d3_radians, y * d3_radians);\n\t    });\n\t  }\n\t  function d3_geo_equirectangular(λ, φ) {\n\t    return [ λ, φ ];\n\t  }\n\t  (d3.geo.equirectangular = function() {\n\t    return d3_geo_projection(d3_geo_equirectangular);\n\t  }).raw = d3_geo_equirectangular.invert = d3_geo_equirectangular;\n\t  d3.geo.rotation = function(rotate) {\n\t    rotate = d3_geo_rotation(rotate[0] % 360 * d3_radians, rotate[1] * d3_radians, rotate.length > 2 ? rotate[2] * d3_radians : 0);\n\t    function forward(coordinates) {\n\t      coordinates = rotate(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n\t      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n\t    }\n\t    forward.invert = function(coordinates) {\n\t      coordinates = rotate.invert(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n\t      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n\t    };\n\t    return forward;\n\t  };\n\t  function d3_geo_identityRotation(λ, φ) {\n\t    return [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n\t  }\n\t  d3_geo_identityRotation.invert = d3_geo_equirectangular;\n\t  function d3_geo_rotation(δλ, δφ, δγ) {\n\t    return δλ ? δφ || δγ ? d3_geo_compose(d3_geo_rotationλ(δλ), d3_geo_rotationφγ(δφ, δγ)) : d3_geo_rotationλ(δλ) : δφ || δγ ? d3_geo_rotationφγ(δφ, δγ) : d3_geo_identityRotation;\n\t  }\n\t  function d3_geo_forwardRotationλ(δλ) {\n\t    return function(λ, φ) {\n\t      return λ += δλ, [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n\t    };\n\t  }\n\t  function d3_geo_rotationλ(δλ) {\n\t    var rotation = d3_geo_forwardRotationλ(δλ);\n\t    rotation.invert = d3_geo_forwardRotationλ(-δλ);\n\t    return rotation;\n\t  }\n\t  function d3_geo_rotationφγ(δφ, δγ) {\n\t    var cosδφ = Math.cos(δφ), sinδφ = Math.sin(δφ), cosδγ = Math.cos(δγ), sinδγ = Math.sin(δγ);\n\t    function rotation(λ, φ) {\n\t      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδφ + x * sinδφ;\n\t      return [ Math.atan2(y * cosδγ - k * sinδγ, x * cosδφ - z * sinδφ), d3_asin(k * cosδγ + y * sinδγ) ];\n\t    }\n\t    rotation.invert = function(λ, φ) {\n\t      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδγ - y * sinδγ;\n\t      return [ Math.atan2(y * cosδγ + z * sinδγ, x * cosδφ + k * sinδφ), d3_asin(k * cosδφ - x * sinδφ) ];\n\t    };\n\t    return rotation;\n\t  }\n\t  d3.geo.circle = function() {\n\t    var origin = [ 0, 0 ], angle, precision = 6, interpolate;\n\t    function circle() {\n\t      var center = typeof origin === \"function\" ? origin.apply(this, arguments) : origin, rotate = d3_geo_rotation(-center[0] * d3_radians, -center[1] * d3_radians, 0).invert, ring = [];\n\t      interpolate(null, null, 1, {\n\t        point: function(x, y) {\n\t          ring.push(x = rotate(x, y));\n\t          x[0] *= d3_degrees, x[1] *= d3_degrees;\n\t        }\n\t      });\n\t      return {\n\t        type: \"Polygon\",\n\t        coordinates: [ ring ]\n\t      };\n\t    }\n\t    circle.origin = function(x) {\n\t      if (!arguments.length) return origin;\n\t      origin = x;\n\t      return circle;\n\t    };\n\t    circle.angle = function(x) {\n\t      if (!arguments.length) return angle;\n\t      interpolate = d3_geo_circleInterpolate((angle = +x) * d3_radians, precision * d3_radians);\n\t      return circle;\n\t    };\n\t    circle.precision = function(_) {\n\t      if (!arguments.length) return precision;\n\t      interpolate = d3_geo_circleInterpolate(angle * d3_radians, (precision = +_) * d3_radians);\n\t      return circle;\n\t    };\n\t    return circle.angle(90);\n\t  };\n\t  function d3_geo_circleInterpolate(radius, precision) {\n\t    var cr = Math.cos(radius), sr = Math.sin(radius);\n\t    return function(from, to, direction, listener) {\n\t      var step = direction * precision;\n\t      if (from != null) {\n\t        from = d3_geo_circleAngle(cr, from);\n\t        to = d3_geo_circleAngle(cr, to);\n\t        if (direction > 0 ? from < to : from > to) from += direction * τ;\n\t      } else {\n\t        from = radius + direction * τ;\n\t        to = radius - .5 * step;\n\t      }\n\t      for (var point, t = from; direction > 0 ? t > to : t < to; t -= step) {\n\t        listener.point((point = d3_geo_spherical([ cr, -sr * Math.cos(t), -sr * Math.sin(t) ]))[0], point[1]);\n\t      }\n\t    };\n\t  }\n\t  function d3_geo_circleAngle(cr, point) {\n\t    var a = d3_geo_cartesian(point);\n\t    a[0] -= cr;\n\t    d3_geo_cartesianNormalize(a);\n\t    var angle = d3_acos(-a[1]);\n\t    return ((-a[2] < 0 ? -angle : angle) + 2 * Math.PI - ε) % (2 * Math.PI);\n\t  }\n\t  d3.geo.distance = function(a, b) {\n\t    var Δλ = (b[0] - a[0]) * d3_radians, φ0 = a[1] * d3_radians, φ1 = b[1] * d3_radians, sinΔλ = Math.sin(Δλ), cosΔλ = Math.cos(Δλ), sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), sinφ1 = Math.sin(φ1), cosφ1 = Math.cos(φ1), t;\n\t    return Math.atan2(Math.sqrt((t = cosφ1 * sinΔλ) * t + (t = cosφ0 * sinφ1 - sinφ0 * cosφ1 * cosΔλ) * t), sinφ0 * sinφ1 + cosφ0 * cosφ1 * cosΔλ);\n\t  };\n\t  d3.geo.graticule = function() {\n\t    var x1, x0, X1, X0, y1, y0, Y1, Y0, dx = 10, dy = dx, DX = 90, DY = 360, x, y, X, Y, precision = 2.5;\n\t    function graticule() {\n\t      return {\n\t        type: \"MultiLineString\",\n\t        coordinates: lines()\n\t      };\n\t    }\n\t    function lines() {\n\t      return d3.range(Math.ceil(X0 / DX) * DX, X1, DX).map(X).concat(d3.range(Math.ceil(Y0 / DY) * DY, Y1, DY).map(Y)).concat(d3.range(Math.ceil(x0 / dx) * dx, x1, dx).filter(function(x) {\n\t        return abs(x % DX) > ε;\n\t      }).map(x)).concat(d3.range(Math.ceil(y0 / dy) * dy, y1, dy).filter(function(y) {\n\t        return abs(y % DY) > ε;\n\t      }).map(y));\n\t    }\n\t    graticule.lines = function() {\n\t      return lines().map(function(coordinates) {\n\t        return {\n\t          type: \"LineString\",\n\t          coordinates: coordinates\n\t        };\n\t      });\n\t    };\n\t    graticule.outline = function() {\n\t      return {\n\t        type: \"Polygon\",\n\t        coordinates: [ X(X0).concat(Y(Y1).slice(1), X(X1).reverse().slice(1), Y(Y0).reverse().slice(1)) ]\n\t      };\n\t    };\n\t    graticule.extent = function(_) {\n\t      if (!arguments.length) return graticule.minorExtent();\n\t      return graticule.majorExtent(_).minorExtent(_);\n\t    };\n\t    graticule.majorExtent = function(_) {\n\t      if (!arguments.length) return [ [ X0, Y0 ], [ X1, Y1 ] ];\n\t      X0 = +_[0][0], X1 = +_[1][0];\n\t      Y0 = +_[0][1], Y1 = +_[1][1];\n\t      if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n\t      if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n\t      return graticule.precision(precision);\n\t    };\n\t    graticule.minorExtent = function(_) {\n\t      if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n\t      x0 = +_[0][0], x1 = +_[1][0];\n\t      y0 = +_[0][1], y1 = +_[1][1];\n\t      if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n\t      if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n\t      return graticule.precision(precision);\n\t    };\n\t    graticule.step = function(_) {\n\t      if (!arguments.length) return graticule.minorStep();\n\t      return graticule.majorStep(_).minorStep(_);\n\t    };\n\t    graticule.majorStep = function(_) {\n\t      if (!arguments.length) return [ DX, DY ];\n\t      DX = +_[0], DY = +_[1];\n\t      return graticule;\n\t    };\n\t    graticule.minorStep = function(_) {\n\t      if (!arguments.length) return [ dx, dy ];\n\t      dx = +_[0], dy = +_[1];\n\t      return graticule;\n\t    };\n\t    graticule.precision = function(_) {\n\t      if (!arguments.length) return precision;\n\t      precision = +_;\n\t      x = d3_geo_graticuleX(y0, y1, 90);\n\t      y = d3_geo_graticuleY(x0, x1, precision);\n\t      X = d3_geo_graticuleX(Y0, Y1, 90);\n\t      Y = d3_geo_graticuleY(X0, X1, precision);\n\t      return graticule;\n\t    };\n\t    return graticule.majorExtent([ [ -180, -90 + ε ], [ 180, 90 - ε ] ]).minorExtent([ [ -180, -80 - ε ], [ 180, 80 + ε ] ]);\n\t  };\n\t  function d3_geo_graticuleX(y0, y1, dy) {\n\t    var y = d3.range(y0, y1 - ε, dy).concat(y1);\n\t    return function(x) {\n\t      return y.map(function(y) {\n\t        return [ x, y ];\n\t      });\n\t    };\n\t  }\n\t  function d3_geo_graticuleY(x0, x1, dx) {\n\t    var x = d3.range(x0, x1 - ε, dx).concat(x1);\n\t    return function(y) {\n\t      return x.map(function(x) {\n\t        return [ x, y ];\n\t      });\n\t    };\n\t  }\n\t  function d3_source(d) {\n\t    return d.source;\n\t  }\n\t  function d3_target(d) {\n\t    return d.target;\n\t  }\n\t  d3.geo.greatArc = function() {\n\t    var source = d3_source, source_, target = d3_target, target_;\n\t    function greatArc() {\n\t      return {\n\t        type: \"LineString\",\n\t        coordinates: [ source_ || source.apply(this, arguments), target_ || target.apply(this, arguments) ]\n\t      };\n\t    }\n\t    greatArc.distance = function() {\n\t      return d3.geo.distance(source_ || source.apply(this, arguments), target_ || target.apply(this, arguments));\n\t    };\n\t    greatArc.source = function(_) {\n\t      if (!arguments.length) return source;\n\t      source = _, source_ = typeof _ === \"function\" ? null : _;\n\t      return greatArc;\n\t    };\n\t    greatArc.target = function(_) {\n\t      if (!arguments.length) return target;\n\t      target = _, target_ = typeof _ === \"function\" ? null : _;\n\t      return greatArc;\n\t    };\n\t    greatArc.precision = function() {\n\t      return arguments.length ? greatArc : 0;\n\t    };\n\t    return greatArc;\n\t  };\n\t  d3.geo.interpolate = function(source, target) {\n\t    return d3_geo_interpolate(source[0] * d3_radians, source[1] * d3_radians, target[0] * d3_radians, target[1] * d3_radians);\n\t  };\n\t  function d3_geo_interpolate(x0, y0, x1, y1) {\n\t    var cy0 = Math.cos(y0), sy0 = Math.sin(y0), cy1 = Math.cos(y1), sy1 = Math.sin(y1), kx0 = cy0 * Math.cos(x0), ky0 = cy0 * Math.sin(x0), kx1 = cy1 * Math.cos(x1), ky1 = cy1 * Math.sin(x1), d = 2 * Math.asin(Math.sqrt(d3_haversin(y1 - y0) + cy0 * cy1 * d3_haversin(x1 - x0))), k = 1 / Math.sin(d);\n\t    var interpolate = d ? function(t) {\n\t      var B = Math.sin(t *= d) * k, A = Math.sin(d - t) * k, x = A * kx0 + B * kx1, y = A * ky0 + B * ky1, z = A * sy0 + B * sy1;\n\t      return [ Math.atan2(y, x) * d3_degrees, Math.atan2(z, Math.sqrt(x * x + y * y)) * d3_degrees ];\n\t    } : function() {\n\t      return [ x0 * d3_degrees, y0 * d3_degrees ];\n\t    };\n\t    interpolate.distance = d;\n\t    return interpolate;\n\t  }\n\t  d3.geo.length = function(object) {\n\t    d3_geo_lengthSum = 0;\n\t    d3.geo.stream(object, d3_geo_length);\n\t    return d3_geo_lengthSum;\n\t  };\n\t  var d3_geo_lengthSum;\n\t  var d3_geo_length = {\n\t    sphere: d3_noop,\n\t    point: d3_noop,\n\t    lineStart: d3_geo_lengthLineStart,\n\t    lineEnd: d3_noop,\n\t    polygonStart: d3_noop,\n\t    polygonEnd: d3_noop\n\t  };\n\t  function d3_geo_lengthLineStart() {\n\t    var λ0, sinφ0, cosφ0;\n\t    d3_geo_length.point = function(λ, φ) {\n\t      λ0 = λ * d3_radians, sinφ0 = Math.sin(φ *= d3_radians), cosφ0 = Math.cos(φ);\n\t      d3_geo_length.point = nextPoint;\n\t    };\n\t    d3_geo_length.lineEnd = function() {\n\t      d3_geo_length.point = d3_geo_length.lineEnd = d3_noop;\n\t    };\n\t    function nextPoint(λ, φ) {\n\t      var sinφ = Math.sin(φ *= d3_radians), cosφ = Math.cos(φ), t = abs((λ *= d3_radians) - λ0), cosΔλ = Math.cos(t);\n\t      d3_geo_lengthSum += Math.atan2(Math.sqrt((t = cosφ * Math.sin(t)) * t + (t = cosφ0 * sinφ - sinφ0 * cosφ * cosΔλ) * t), sinφ0 * sinφ + cosφ0 * cosφ * cosΔλ);\n\t      λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ;\n\t    }\n\t  }\n\t  function d3_geo_azimuthal(scale, angle) {\n\t    function azimuthal(λ, φ) {\n\t      var cosλ = Math.cos(λ), cosφ = Math.cos(φ), k = scale(cosλ * cosφ);\n\t      return [ k * cosφ * Math.sin(λ), k * Math.sin(φ) ];\n\t    }\n\t    azimuthal.invert = function(x, y) {\n\t      var ρ = Math.sqrt(x * x + y * y), c = angle(ρ), sinc = Math.sin(c), cosc = Math.cos(c);\n\t      return [ Math.atan2(x * sinc, ρ * cosc), Math.asin(ρ && y * sinc / ρ) ];\n\t    };\n\t    return azimuthal;\n\t  }\n\t  var d3_geo_azimuthalEqualArea = d3_geo_azimuthal(function(cosλcosφ) {\n\t    return Math.sqrt(2 / (1 + cosλcosφ));\n\t  }, function(ρ) {\n\t    return 2 * Math.asin(ρ / 2);\n\t  });\n\t  (d3.geo.azimuthalEqualArea = function() {\n\t    return d3_geo_projection(d3_geo_azimuthalEqualArea);\n\t  }).raw = d3_geo_azimuthalEqualArea;\n\t  var d3_geo_azimuthalEquidistant = d3_geo_azimuthal(function(cosλcosφ) {\n\t    var c = Math.acos(cosλcosφ);\n\t    return c && c / Math.sin(c);\n\t  }, d3_identity);\n\t  (d3.geo.azimuthalEquidistant = function() {\n\t    return d3_geo_projection(d3_geo_azimuthalEquidistant);\n\t  }).raw = d3_geo_azimuthalEquidistant;\n\t  function d3_geo_conicConformal(φ0, φ1) {\n\t    var cosφ0 = Math.cos(φ0), t = function(φ) {\n\t      return Math.tan(π / 4 + φ / 2);\n\t    }, n = φ0 === φ1 ? Math.sin(φ0) : Math.log(cosφ0 / Math.cos(φ1)) / Math.log(t(φ1) / t(φ0)), F = cosφ0 * Math.pow(t(φ0), n) / n;\n\t    if (!n) return d3_geo_mercator;\n\t    function forward(λ, φ) {\n\t      if (F > 0) {\n\t        if (φ < -halfπ + ε) φ = -halfπ + ε;\n\t      } else {\n\t        if (φ > halfπ - ε) φ = halfπ - ε;\n\t      }\n\t      var ρ = F / Math.pow(t(φ), n);\n\t      return [ ρ * Math.sin(n * λ), F - ρ * Math.cos(n * λ) ];\n\t    }\n\t    forward.invert = function(x, y) {\n\t      var ρ0_y = F - y, ρ = d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y);\n\t      return [ Math.atan2(x, ρ0_y) / n, 2 * Math.atan(Math.pow(F / ρ, 1 / n)) - halfπ ];\n\t    };\n\t    return forward;\n\t  }\n\t  (d3.geo.conicConformal = function() {\n\t    return d3_geo_conic(d3_geo_conicConformal);\n\t  }).raw = d3_geo_conicConformal;\n\t  function d3_geo_conicEquidistant(φ0, φ1) {\n\t    var cosφ0 = Math.cos(φ0), n = φ0 === φ1 ? Math.sin(φ0) : (cosφ0 - Math.cos(φ1)) / (φ1 - φ0), G = cosφ0 / n + φ0;\n\t    if (abs(n) < ε) return d3_geo_equirectangular;\n\t    function forward(λ, φ) {\n\t      var ρ = G - φ;\n\t      return [ ρ * Math.sin(n * λ), G - ρ * Math.cos(n * λ) ];\n\t    }\n\t    forward.invert = function(x, y) {\n\t      var ρ0_y = G - y;\n\t      return [ Math.atan2(x, ρ0_y) / n, G - d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y) ];\n\t    };\n\t    return forward;\n\t  }\n\t  (d3.geo.conicEquidistant = function() {\n\t    return d3_geo_conic(d3_geo_conicEquidistant);\n\t  }).raw = d3_geo_conicEquidistant;\n\t  var d3_geo_gnomonic = d3_geo_azimuthal(function(cosλcosφ) {\n\t    return 1 / cosλcosφ;\n\t  }, Math.atan);\n\t  (d3.geo.gnomonic = function() {\n\t    return d3_geo_projection(d3_geo_gnomonic);\n\t  }).raw = d3_geo_gnomonic;\n\t  function d3_geo_mercator(λ, φ) {\n\t    return [ λ, Math.log(Math.tan(π / 4 + φ / 2)) ];\n\t  }\n\t  d3_geo_mercator.invert = function(x, y) {\n\t    return [ x, 2 * Math.atan(Math.exp(y)) - halfπ ];\n\t  };\n\t  function d3_geo_mercatorProjection(project) {\n\t    var m = d3_geo_projection(project), scale = m.scale, translate = m.translate, clipExtent = m.clipExtent, clipAuto;\n\t    m.scale = function() {\n\t      var v = scale.apply(m, arguments);\n\t      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n\t    };\n\t    m.translate = function() {\n\t      var v = translate.apply(m, arguments);\n\t      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n\t    };\n\t    m.clipExtent = function(_) {\n\t      var v = clipExtent.apply(m, arguments);\n\t      if (v === m) {\n\t        if (clipAuto = _ == null) {\n\t          var k = π * scale(), t = translate();\n\t          clipExtent([ [ t[0] - k, t[1] - k ], [ t[0] + k, t[1] + k ] ]);\n\t        }\n\t      } else if (clipAuto) {\n\t        v = null;\n\t      }\n\t      return v;\n\t    };\n\t    return m.clipExtent(null);\n\t  }\n\t  (d3.geo.mercator = function() {\n\t    return d3_geo_mercatorProjection(d3_geo_mercator);\n\t  }).raw = d3_geo_mercator;\n\t  var d3_geo_orthographic = d3_geo_azimuthal(function() {\n\t    return 1;\n\t  }, Math.asin);\n\t  (d3.geo.orthographic = function() {\n\t    return d3_geo_projection(d3_geo_orthographic);\n\t  }).raw = d3_geo_orthographic;\n\t  var d3_geo_stereographic = d3_geo_azimuthal(function(cosλcosφ) {\n\t    return 1 / (1 + cosλcosφ);\n\t  }, function(ρ) {\n\t    return 2 * Math.atan(ρ);\n\t  });\n\t  (d3.geo.stereographic = function() {\n\t    return d3_geo_projection(d3_geo_stereographic);\n\t  }).raw = d3_geo_stereographic;\n\t  function d3_geo_transverseMercator(λ, φ) {\n\t    return [ Math.log(Math.tan(π / 4 + φ / 2)), -λ ];\n\t  }\n\t  d3_geo_transverseMercator.invert = function(x, y) {\n\t    return [ -y, 2 * Math.atan(Math.exp(x)) - halfπ ];\n\t  };\n\t  (d3.geo.transverseMercator = function() {\n\t    var projection = d3_geo_mercatorProjection(d3_geo_transverseMercator), center = projection.center, rotate = projection.rotate;\n\t    projection.center = function(_) {\n\t      return _ ? center([ -_[1], _[0] ]) : (_ = center(), [ _[1], -_[0] ]);\n\t    };\n\t    projection.rotate = function(_) {\n\t      return _ ? rotate([ _[0], _[1], _.length > 2 ? _[2] + 90 : 90 ]) : (_ = rotate(), \n\t      [ _[0], _[1], _[2] - 90 ]);\n\t    };\n\t    return rotate([ 0, 0, 90 ]);\n\t  }).raw = d3_geo_transverseMercator;\n\t  d3.geom = {};\n\t  function d3_geom_pointX(d) {\n\t    return d[0];\n\t  }\n\t  function d3_geom_pointY(d) {\n\t    return d[1];\n\t  }\n\t  d3.geom.hull = function(vertices) {\n\t    var x = d3_geom_pointX, y = d3_geom_pointY;\n\t    if (arguments.length) return hull(vertices);\n\t    function hull(data) {\n\t      if (data.length < 3) return [];\n\t      var fx = d3_functor(x), fy = d3_functor(y), i, n = data.length, points = [], flippedPoints = [];\n\t      for (i = 0; i < n; i++) {\n\t        points.push([ +fx.call(this, data[i], i), +fy.call(this, data[i], i), i ]);\n\t      }\n\t      points.sort(d3_geom_hullOrder);\n\t      for (i = 0; i < n; i++) flippedPoints.push([ points[i][0], -points[i][1] ]);\n\t      var upper = d3_geom_hullUpper(points), lower = d3_geom_hullUpper(flippedPoints);\n\t      var skipLeft = lower[0] === upper[0], skipRight = lower[lower.length - 1] === upper[upper.length - 1], polygon = [];\n\t      for (i = upper.length - 1; i >= 0; --i) polygon.push(data[points[upper[i]][2]]);\n\t      for (i = +skipLeft; i < lower.length - skipRight; ++i) polygon.push(data[points[lower[i]][2]]);\n\t      return polygon;\n\t    }\n\t    hull.x = function(_) {\n\t      return arguments.length ? (x = _, hull) : x;\n\t    };\n\t    hull.y = function(_) {\n\t      return arguments.length ? (y = _, hull) : y;\n\t    };\n\t    return hull;\n\t  };\n\t  function d3_geom_hullUpper(points) {\n\t    var n = points.length, hull = [ 0, 1 ], hs = 2;\n\t    for (var i = 2; i < n; i++) {\n\t      while (hs > 1 && d3_cross2d(points[hull[hs - 2]], points[hull[hs - 1]], points[i]) <= 0) --hs;\n\t      hull[hs++] = i;\n\t    }\n\t    return hull.slice(0, hs);\n\t  }\n\t  function d3_geom_hullOrder(a, b) {\n\t    return a[0] - b[0] || a[1] - b[1];\n\t  }\n\t  d3.geom.polygon = function(coordinates) {\n\t    d3_subclass(coordinates, d3_geom_polygonPrototype);\n\t    return coordinates;\n\t  };\n\t  var d3_geom_polygonPrototype = d3.geom.polygon.prototype = [];\n\t  d3_geom_polygonPrototype.area = function() {\n\t    var i = -1, n = this.length, a, b = this[n - 1], area = 0;\n\t    while (++i < n) {\n\t      a = b;\n\t      b = this[i];\n\t      area += a[1] * b[0] - a[0] * b[1];\n\t    }\n\t    return area * .5;\n\t  };\n\t  d3_geom_polygonPrototype.centroid = function(k) {\n\t    var i = -1, n = this.length, x = 0, y = 0, a, b = this[n - 1], c;\n\t    if (!arguments.length) k = -1 / (6 * this.area());\n\t    while (++i < n) {\n\t      a = b;\n\t      b = this[i];\n\t      c = a[0] * b[1] - b[0] * a[1];\n\t      x += (a[0] + b[0]) * c;\n\t      y += (a[1] + b[1]) * c;\n\t    }\n\t    return [ x * k, y * k ];\n\t  };\n\t  d3_geom_polygonPrototype.clip = function(subject) {\n\t    var input, closed = d3_geom_polygonClosed(subject), i = -1, n = this.length - d3_geom_polygonClosed(this), j, m, a = this[n - 1], b, c, d;\n\t    while (++i < n) {\n\t      input = subject.slice();\n\t      subject.length = 0;\n\t      b = this[i];\n\t      c = input[(m = input.length - closed) - 1];\n\t      j = -1;\n\t      while (++j < m) {\n\t        d = input[j];\n\t        if (d3_geom_polygonInside(d, a, b)) {\n\t          if (!d3_geom_polygonInside(c, a, b)) {\n\t            subject.push(d3_geom_polygonIntersect(c, d, a, b));\n\t          }\n\t          subject.push(d);\n\t        } else if (d3_geom_polygonInside(c, a, b)) {\n\t          subject.push(d3_geom_polygonIntersect(c, d, a, b));\n\t        }\n\t        c = d;\n\t      }\n\t      if (closed) subject.push(subject[0]);\n\t      a = b;\n\t    }\n\t    return subject;\n\t  };\n\t  function d3_geom_polygonInside(p, a, b) {\n\t    return (b[0] - a[0]) * (p[1] - a[1]) < (b[1] - a[1]) * (p[0] - a[0]);\n\t  }\n\t  function d3_geom_polygonIntersect(c, d, a, b) {\n\t    var x1 = c[0], x3 = a[0], x21 = d[0] - x1, x43 = b[0] - x3, y1 = c[1], y3 = a[1], y21 = d[1] - y1, y43 = b[1] - y3, ua = (x43 * (y1 - y3) - y43 * (x1 - x3)) / (y43 * x21 - x43 * y21);\n\t    return [ x1 + ua * x21, y1 + ua * y21 ];\n\t  }\n\t  function d3_geom_polygonClosed(coordinates) {\n\t    var a = coordinates[0], b = coordinates[coordinates.length - 1];\n\t    return !(a[0] - b[0] || a[1] - b[1]);\n\t  }\n\t  var d3_geom_voronoiEdges, d3_geom_voronoiCells, d3_geom_voronoiBeaches, d3_geom_voronoiBeachPool = [], d3_geom_voronoiFirstCircle, d3_geom_voronoiCircles, d3_geom_voronoiCirclePool = [];\n\t  function d3_geom_voronoiBeach() {\n\t    d3_geom_voronoiRedBlackNode(this);\n\t    this.edge = this.site = this.circle = null;\n\t  }\n\t  function d3_geom_voronoiCreateBeach(site) {\n\t    var beach = d3_geom_voronoiBeachPool.pop() || new d3_geom_voronoiBeach();\n\t    beach.site = site;\n\t    return beach;\n\t  }\n\t  function d3_geom_voronoiDetachBeach(beach) {\n\t    d3_geom_voronoiDetachCircle(beach);\n\t    d3_geom_voronoiBeaches.remove(beach);\n\t    d3_geom_voronoiBeachPool.push(beach);\n\t    d3_geom_voronoiRedBlackNode(beach);\n\t  }\n\t  function d3_geom_voronoiRemoveBeach(beach) {\n\t    var circle = beach.circle, x = circle.x, y = circle.cy, vertex = {\n\t      x: x,\n\t      y: y\n\t    }, previous = beach.P, next = beach.N, disappearing = [ beach ];\n\t    d3_geom_voronoiDetachBeach(beach);\n\t    var lArc = previous;\n\t    while (lArc.circle && abs(x - lArc.circle.x) < ε && abs(y - lArc.circle.cy) < ε) {\n\t      previous = lArc.P;\n\t      disappearing.unshift(lArc);\n\t      d3_geom_voronoiDetachBeach(lArc);\n\t      lArc = previous;\n\t    }\n\t    disappearing.unshift(lArc);\n\t    d3_geom_voronoiDetachCircle(lArc);\n\t    var rArc = next;\n\t    while (rArc.circle && abs(x - rArc.circle.x) < ε && abs(y - rArc.circle.cy) < ε) {\n\t      next = rArc.N;\n\t      disappearing.push(rArc);\n\t      d3_geom_voronoiDetachBeach(rArc);\n\t      rArc = next;\n\t    }\n\t    disappearing.push(rArc);\n\t    d3_geom_voronoiDetachCircle(rArc);\n\t    var nArcs = disappearing.length, iArc;\n\t    for (iArc = 1; iArc < nArcs; ++iArc) {\n\t      rArc = disappearing[iArc];\n\t      lArc = disappearing[iArc - 1];\n\t      d3_geom_voronoiSetEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n\t    }\n\t    lArc = disappearing[0];\n\t    rArc = disappearing[nArcs - 1];\n\t    rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, rArc.site, null, vertex);\n\t    d3_geom_voronoiAttachCircle(lArc);\n\t    d3_geom_voronoiAttachCircle(rArc);\n\t  }\n\t  function d3_geom_voronoiAddBeach(site) {\n\t    var x = site.x, directrix = site.y, lArc, rArc, dxl, dxr, node = d3_geom_voronoiBeaches._;\n\t    while (node) {\n\t      dxl = d3_geom_voronoiLeftBreakPoint(node, directrix) - x;\n\t      if (dxl > ε) node = node.L; else {\n\t        dxr = x - d3_geom_voronoiRightBreakPoint(node, directrix);\n\t        if (dxr > ε) {\n\t          if (!node.R) {\n\t            lArc = node;\n\t            break;\n\t          }\n\t          node = node.R;\n\t        } else {\n\t          if (dxl > -ε) {\n\t            lArc = node.P;\n\t            rArc = node;\n\t          } else if (dxr > -ε) {\n\t            lArc = node;\n\t            rArc = node.N;\n\t          } else {\n\t            lArc = rArc = node;\n\t          }\n\t          break;\n\t        }\n\t      }\n\t    }\n\t    var newArc = d3_geom_voronoiCreateBeach(site);\n\t    d3_geom_voronoiBeaches.insert(lArc, newArc);\n\t    if (!lArc && !rArc) return;\n\t    if (lArc === rArc) {\n\t      d3_geom_voronoiDetachCircle(lArc);\n\t      rArc = d3_geom_voronoiCreateBeach(lArc.site);\n\t      d3_geom_voronoiBeaches.insert(newArc, rArc);\n\t      newArc.edge = rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n\t      d3_geom_voronoiAttachCircle(lArc);\n\t      d3_geom_voronoiAttachCircle(rArc);\n\t      return;\n\t    }\n\t    if (!rArc) {\n\t      newArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n\t      return;\n\t    }\n\t    d3_geom_voronoiDetachCircle(lArc);\n\t    d3_geom_voronoiDetachCircle(rArc);\n\t    var lSite = lArc.site, ax = lSite.x, ay = lSite.y, bx = site.x - ax, by = site.y - ay, rSite = rArc.site, cx = rSite.x - ax, cy = rSite.y - ay, d = 2 * (bx * cy - by * cx), hb = bx * bx + by * by, hc = cx * cx + cy * cy, vertex = {\n\t      x: (cy * hb - by * hc) / d + ax,\n\t      y: (bx * hc - cx * hb) / d + ay\n\t    };\n\t    d3_geom_voronoiSetEdgeEnd(rArc.edge, lSite, rSite, vertex);\n\t    newArc.edge = d3_geom_voronoiCreateEdge(lSite, site, null, vertex);\n\t    rArc.edge = d3_geom_voronoiCreateEdge(site, rSite, null, vertex);\n\t    d3_geom_voronoiAttachCircle(lArc);\n\t    d3_geom_voronoiAttachCircle(rArc);\n\t  }\n\t  function d3_geom_voronoiLeftBreakPoint(arc, directrix) {\n\t    var site = arc.site, rfocx = site.x, rfocy = site.y, pby2 = rfocy - directrix;\n\t    if (!pby2) return rfocx;\n\t    var lArc = arc.P;\n\t    if (!lArc) return -Infinity;\n\t    site = lArc.site;\n\t    var lfocx = site.x, lfocy = site.y, plby2 = lfocy - directrix;\n\t    if (!plby2) return lfocx;\n\t    var hl = lfocx - rfocx, aby2 = 1 / pby2 - 1 / plby2, b = hl / plby2;\n\t    if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n\t    return (rfocx + lfocx) / 2;\n\t  }\n\t  function d3_geom_voronoiRightBreakPoint(arc, directrix) {\n\t    var rArc = arc.N;\n\t    if (rArc) return d3_geom_voronoiLeftBreakPoint(rArc, directrix);\n\t    var site = arc.site;\n\t    return site.y === directrix ? site.x : Infinity;\n\t  }\n\t  function d3_geom_voronoiCell(site) {\n\t    this.site = site;\n\t    this.edges = [];\n\t  }\n\t  d3_geom_voronoiCell.prototype.prepare = function() {\n\t    var halfEdges = this.edges, iHalfEdge = halfEdges.length, edge;\n\t    while (iHalfEdge--) {\n\t      edge = halfEdges[iHalfEdge].edge;\n\t      if (!edge.b || !edge.a) halfEdges.splice(iHalfEdge, 1);\n\t    }\n\t    halfEdges.sort(d3_geom_voronoiHalfEdgeOrder);\n\t    return halfEdges.length;\n\t  };\n\t  function d3_geom_voronoiCloseCells(extent) {\n\t    var x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], x2, y2, x3, y3, cells = d3_geom_voronoiCells, iCell = cells.length, cell, iHalfEdge, halfEdges, nHalfEdges, start, end;\n\t    while (iCell--) {\n\t      cell = cells[iCell];\n\t      if (!cell || !cell.prepare()) continue;\n\t      halfEdges = cell.edges;\n\t      nHalfEdges = halfEdges.length;\n\t      iHalfEdge = 0;\n\t      while (iHalfEdge < nHalfEdges) {\n\t        end = halfEdges[iHalfEdge].end(), x3 = end.x, y3 = end.y;\n\t        start = halfEdges[++iHalfEdge % nHalfEdges].start(), x2 = start.x, y2 = start.y;\n\t        if (abs(x3 - x2) > ε || abs(y3 - y2) > ε) {\n\t          halfEdges.splice(iHalfEdge, 0, new d3_geom_voronoiHalfEdge(d3_geom_voronoiCreateBorderEdge(cell.site, end, abs(x3 - x0) < ε && y1 - y3 > ε ? {\n\t            x: x0,\n\t            y: abs(x2 - x0) < ε ? y2 : y1\n\t          } : abs(y3 - y1) < ε && x1 - x3 > ε ? {\n\t            x: abs(y2 - y1) < ε ? x2 : x1,\n\t            y: y1\n\t          } : abs(x3 - x1) < ε && y3 - y0 > ε ? {\n\t            x: x1,\n\t            y: abs(x2 - x1) < ε ? y2 : y0\n\t          } : abs(y3 - y0) < ε && x3 - x0 > ε ? {\n\t            x: abs(y2 - y0) < ε ? x2 : x0,\n\t            y: y0\n\t          } : null), cell.site, null));\n\t          ++nHalfEdges;\n\t        }\n\t      }\n\t    }\n\t  }\n\t  function d3_geom_voronoiHalfEdgeOrder(a, b) {\n\t    return b.angle - a.angle;\n\t  }\n\t  function d3_geom_voronoiCircle() {\n\t    d3_geom_voronoiRedBlackNode(this);\n\t    this.x = this.y = this.arc = this.site = this.cy = null;\n\t  }\n\t  function d3_geom_voronoiAttachCircle(arc) {\n\t    var lArc = arc.P, rArc = arc.N;\n\t    if (!lArc || !rArc) return;\n\t    var lSite = lArc.site, cSite = arc.site, rSite = rArc.site;\n\t    if (lSite === rSite) return;\n\t    var bx = cSite.x, by = cSite.y, ax = lSite.x - bx, ay = lSite.y - by, cx = rSite.x - bx, cy = rSite.y - by;\n\t    var d = 2 * (ax * cy - ay * cx);\n\t    if (d >= -ε2) return;\n\t    var ha = ax * ax + ay * ay, hc = cx * cx + cy * cy, x = (cy * ha - ay * hc) / d, y = (ax * hc - cx * ha) / d, cy = y + by;\n\t    var circle = d3_geom_voronoiCirclePool.pop() || new d3_geom_voronoiCircle();\n\t    circle.arc = arc;\n\t    circle.site = cSite;\n\t    circle.x = x + bx;\n\t    circle.y = cy + Math.sqrt(x * x + y * y);\n\t    circle.cy = cy;\n\t    arc.circle = circle;\n\t    var before = null, node = d3_geom_voronoiCircles._;\n\t    while (node) {\n\t      if (circle.y < node.y || circle.y === node.y && circle.x <= node.x) {\n\t        if (node.L) node = node.L; else {\n\t          before = node.P;\n\t          break;\n\t        }\n\t      } else {\n\t        if (node.R) node = node.R; else {\n\t          before = node;\n\t          break;\n\t        }\n\t      }\n\t    }\n\t    d3_geom_voronoiCircles.insert(before, circle);\n\t    if (!before) d3_geom_voronoiFirstCircle = circle;\n\t  }\n\t  function d3_geom_voronoiDetachCircle(arc) {\n\t    var circle = arc.circle;\n\t    if (circle) {\n\t      if (!circle.P) d3_geom_voronoiFirstCircle = circle.N;\n\t      d3_geom_voronoiCircles.remove(circle);\n\t      d3_geom_voronoiCirclePool.push(circle);\n\t      d3_geom_voronoiRedBlackNode(circle);\n\t      arc.circle = null;\n\t    }\n\t  }\n\t  function d3_geom_voronoiClipEdges(extent) {\n\t    var edges = d3_geom_voronoiEdges, clip = d3_geom_clipLine(extent[0][0], extent[0][1], extent[1][0], extent[1][1]), i = edges.length, e;\n\t    while (i--) {\n\t      e = edges[i];\n\t      if (!d3_geom_voronoiConnectEdge(e, extent) || !clip(e) || abs(e.a.x - e.b.x) < ε && abs(e.a.y - e.b.y) < ε) {\n\t        e.a = e.b = null;\n\t        edges.splice(i, 1);\n\t      }\n\t    }\n\t  }\n\t  function d3_geom_voronoiConnectEdge(edge, extent) {\n\t    var vb = edge.b;\n\t    if (vb) return true;\n\t    var va = edge.a, x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], lSite = edge.l, rSite = edge.r, lx = lSite.x, ly = lSite.y, rx = rSite.x, ry = rSite.y, fx = (lx + rx) / 2, fy = (ly + ry) / 2, fm, fb;\n\t    if (ry === ly) {\n\t      if (fx < x0 || fx >= x1) return;\n\t      if (lx > rx) {\n\t        if (!va) va = {\n\t          x: fx,\n\t          y: y0\n\t        }; else if (va.y >= y1) return;\n\t        vb = {\n\t          x: fx,\n\t          y: y1\n\t        };\n\t      } else {\n\t        if (!va) va = {\n\t          x: fx,\n\t          y: y1\n\t        }; else if (va.y < y0) return;\n\t        vb = {\n\t          x: fx,\n\t          y: y0\n\t        };\n\t      }\n\t    } else {\n\t      fm = (lx - rx) / (ry - ly);\n\t      fb = fy - fm * fx;\n\t      if (fm < -1 || fm > 1) {\n\t        if (lx > rx) {\n\t          if (!va) va = {\n\t            x: (y0 - fb) / fm,\n\t            y: y0\n\t          }; else if (va.y >= y1) return;\n\t          vb = {\n\t            x: (y1 - fb) / fm,\n\t            y: y1\n\t          };\n\t        } else {\n\t          if (!va) va = {\n\t            x: (y1 - fb) / fm,\n\t            y: y1\n\t          }; else if (va.y < y0) return;\n\t          vb = {\n\t            x: (y0 - fb) / fm,\n\t            y: y0\n\t          };\n\t        }\n\t      } else {\n\t        if (ly < ry) {\n\t          if (!va) va = {\n\t            x: x0,\n\t            y: fm * x0 + fb\n\t          }; else if (va.x >= x1) return;\n\t          vb = {\n\t            x: x1,\n\t            y: fm * x1 + fb\n\t          };\n\t        } else {\n\t          if (!va) va = {\n\t            x: x1,\n\t            y: fm * x1 + fb\n\t          }; else if (va.x < x0) return;\n\t          vb = {\n\t            x: x0,\n\t            y: fm * x0 + fb\n\t          };\n\t        }\n\t      }\n\t    }\n\t    edge.a = va;\n\t    edge.b = vb;\n\t    return true;\n\t  }\n\t  function d3_geom_voronoiEdge(lSite, rSite) {\n\t    this.l = lSite;\n\t    this.r = rSite;\n\t    this.a = this.b = null;\n\t  }\n\t  function d3_geom_voronoiCreateEdge(lSite, rSite, va, vb) {\n\t    var edge = new d3_geom_voronoiEdge(lSite, rSite);\n\t    d3_geom_voronoiEdges.push(edge);\n\t    if (va) d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, va);\n\t    if (vb) d3_geom_voronoiSetEdgeEnd(edge, rSite, lSite, vb);\n\t    d3_geom_voronoiCells[lSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, lSite, rSite));\n\t    d3_geom_voronoiCells[rSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, rSite, lSite));\n\t    return edge;\n\t  }\n\t  function d3_geom_voronoiCreateBorderEdge(lSite, va, vb) {\n\t    var edge = new d3_geom_voronoiEdge(lSite, null);\n\t    edge.a = va;\n\t    edge.b = vb;\n\t    d3_geom_voronoiEdges.push(edge);\n\t    return edge;\n\t  }\n\t  function d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, vertex) {\n\t    if (!edge.a && !edge.b) {\n\t      edge.a = vertex;\n\t      edge.l = lSite;\n\t      edge.r = rSite;\n\t    } else if (edge.l === rSite) {\n\t      edge.b = vertex;\n\t    } else {\n\t      edge.a = vertex;\n\t    }\n\t  }\n\t  function d3_geom_voronoiHalfEdge(edge, lSite, rSite) {\n\t    var va = edge.a, vb = edge.b;\n\t    this.edge = edge;\n\t    this.site = lSite;\n\t    this.angle = rSite ? Math.atan2(rSite.y - lSite.y, rSite.x - lSite.x) : edge.l === lSite ? Math.atan2(vb.x - va.x, va.y - vb.y) : Math.atan2(va.x - vb.x, vb.y - va.y);\n\t  }\n\t  d3_geom_voronoiHalfEdge.prototype = {\n\t    start: function() {\n\t      return this.edge.l === this.site ? this.edge.a : this.edge.b;\n\t    },\n\t    end: function() {\n\t      return this.edge.l === this.site ? this.edge.b : this.edge.a;\n\t    }\n\t  };\n\t  function d3_geom_voronoiRedBlackTree() {\n\t    this._ = null;\n\t  }\n\t  function d3_geom_voronoiRedBlackNode(node) {\n\t    node.U = node.C = node.L = node.R = node.P = node.N = null;\n\t  }\n\t  d3_geom_voronoiRedBlackTree.prototype = {\n\t    insert: function(after, node) {\n\t      var parent, grandpa, uncle;\n\t      if (after) {\n\t        node.P = after;\n\t        node.N = after.N;\n\t        if (after.N) after.N.P = node;\n\t        after.N = node;\n\t        if (after.R) {\n\t          after = after.R;\n\t          while (after.L) after = after.L;\n\t          after.L = node;\n\t        } else {\n\t          after.R = node;\n\t        }\n\t        parent = after;\n\t      } else if (this._) {\n\t        after = d3_geom_voronoiRedBlackFirst(this._);\n\t        node.P = null;\n\t        node.N = after;\n\t        after.P = after.L = node;\n\t        parent = after;\n\t      } else {\n\t        node.P = node.N = null;\n\t        this._ = node;\n\t        parent = null;\n\t      }\n\t      node.L = node.R = null;\n\t      node.U = parent;\n\t      node.C = true;\n\t      after = node;\n\t      while (parent && parent.C) {\n\t        grandpa = parent.U;\n\t        if (parent === grandpa.L) {\n\t          uncle = grandpa.R;\n\t          if (uncle && uncle.C) {\n\t            parent.C = uncle.C = false;\n\t            grandpa.C = true;\n\t            after = grandpa;\n\t          } else {\n\t            if (after === parent.R) {\n\t              d3_geom_voronoiRedBlackRotateLeft(this, parent);\n\t              after = parent;\n\t              parent = after.U;\n\t            }\n\t            parent.C = false;\n\t            grandpa.C = true;\n\t            d3_geom_voronoiRedBlackRotateRight(this, grandpa);\n\t          }\n\t        } else {\n\t          uncle = grandpa.L;\n\t          if (uncle && uncle.C) {\n\t            parent.C = uncle.C = false;\n\t            grandpa.C = true;\n\t            after = grandpa;\n\t          } else {\n\t            if (after === parent.L) {\n\t              d3_geom_voronoiRedBlackRotateRight(this, parent);\n\t              after = parent;\n\t              parent = after.U;\n\t            }\n\t            parent.C = false;\n\t            grandpa.C = true;\n\t            d3_geom_voronoiRedBlackRotateLeft(this, grandpa);\n\t          }\n\t        }\n\t        parent = after.U;\n\t      }\n\t      this._.C = false;\n\t    },\n\t    remove: function(node) {\n\t      if (node.N) node.N.P = node.P;\n\t      if (node.P) node.P.N = node.N;\n\t      node.N = node.P = null;\n\t      var parent = node.U, sibling, left = node.L, right = node.R, next, red;\n\t      if (!left) next = right; else if (!right) next = left; else next = d3_geom_voronoiRedBlackFirst(right);\n\t      if (parent) {\n\t        if (parent.L === node) parent.L = next; else parent.R = next;\n\t      } else {\n\t        this._ = next;\n\t      }\n\t      if (left && right) {\n\t        red = next.C;\n\t        next.C = node.C;\n\t        next.L = left;\n\t        left.U = next;\n\t        if (next !== right) {\n\t          parent = next.U;\n\t          next.U = node.U;\n\t          node = next.R;\n\t          parent.L = node;\n\t          next.R = right;\n\t          right.U = next;\n\t        } else {\n\t          next.U = parent;\n\t          parent = next;\n\t          node = next.R;\n\t        }\n\t      } else {\n\t        red = node.C;\n\t        node = next;\n\t      }\n\t      if (node) node.U = parent;\n\t      if (red) return;\n\t      if (node && node.C) {\n\t        node.C = false;\n\t        return;\n\t      }\n\t      do {\n\t        if (node === this._) break;\n\t        if (node === parent.L) {\n\t          sibling = parent.R;\n\t          if (sibling.C) {\n\t            sibling.C = false;\n\t            parent.C = true;\n\t            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n\t            sibling = parent.R;\n\t          }\n\t          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n\t            if (!sibling.R || !sibling.R.C) {\n\t              sibling.L.C = false;\n\t              sibling.C = true;\n\t              d3_geom_voronoiRedBlackRotateRight(this, sibling);\n\t              sibling = parent.R;\n\t            }\n\t            sibling.C = parent.C;\n\t            parent.C = sibling.R.C = false;\n\t            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n\t            node = this._;\n\t            break;\n\t          }\n\t        } else {\n\t          sibling = parent.L;\n\t          if (sibling.C) {\n\t            sibling.C = false;\n\t            parent.C = true;\n\t            d3_geom_voronoiRedBlackRotateRight(this, parent);\n\t            sibling = parent.L;\n\t          }\n\t          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n\t            if (!sibling.L || !sibling.L.C) {\n\t              sibling.R.C = false;\n\t              sibling.C = true;\n\t              d3_geom_voronoiRedBlackRotateLeft(this, sibling);\n\t              sibling = parent.L;\n\t            }\n\t            sibling.C = parent.C;\n\t            parent.C = sibling.L.C = false;\n\t            d3_geom_voronoiRedBlackRotateRight(this, parent);\n\t            node = this._;\n\t            break;\n\t          }\n\t        }\n\t        sibling.C = true;\n\t        node = parent;\n\t        parent = parent.U;\n\t      } while (!node.C);\n\t      if (node) node.C = false;\n\t    }\n\t  };\n\t  function d3_geom_voronoiRedBlackRotateLeft(tree, node) {\n\t    var p = node, q = node.R, parent = p.U;\n\t    if (parent) {\n\t      if (parent.L === p) parent.L = q; else parent.R = q;\n\t    } else {\n\t      tree._ = q;\n\t    }\n\t    q.U = parent;\n\t    p.U = q;\n\t    p.R = q.L;\n\t    if (p.R) p.R.U = p;\n\t    q.L = p;\n\t  }\n\t  function d3_geom_voronoiRedBlackRotateRight(tree, node) {\n\t    var p = node, q = node.L, parent = p.U;\n\t    if (parent) {\n\t      if (parent.L === p) parent.L = q; else parent.R = q;\n\t    } else {\n\t      tree._ = q;\n\t    }\n\t    q.U = parent;\n\t    p.U = q;\n\t    p.L = q.R;\n\t    if (p.L) p.L.U = p;\n\t    q.R = p;\n\t  }\n\t  function d3_geom_voronoiRedBlackFirst(node) {\n\t    while (node.L) node = node.L;\n\t    return node;\n\t  }\n\t  function d3_geom_voronoi(sites, bbox) {\n\t    var site = sites.sort(d3_geom_voronoiVertexOrder).pop(), x0, y0, circle;\n\t    d3_geom_voronoiEdges = [];\n\t    d3_geom_voronoiCells = new Array(sites.length);\n\t    d3_geom_voronoiBeaches = new d3_geom_voronoiRedBlackTree();\n\t    d3_geom_voronoiCircles = new d3_geom_voronoiRedBlackTree();\n\t    while (true) {\n\t      circle = d3_geom_voronoiFirstCircle;\n\t      if (site && (!circle || site.y < circle.y || site.y === circle.y && site.x < circle.x)) {\n\t        if (site.x !== x0 || site.y !== y0) {\n\t          d3_geom_voronoiCells[site.i] = new d3_geom_voronoiCell(site);\n\t          d3_geom_voronoiAddBeach(site);\n\t          x0 = site.x, y0 = site.y;\n\t        }\n\t        site = sites.pop();\n\t      } else if (circle) {\n\t        d3_geom_voronoiRemoveBeach(circle.arc);\n\t      } else {\n\t        break;\n\t      }\n\t    }\n\t    if (bbox) d3_geom_voronoiClipEdges(bbox), d3_geom_voronoiCloseCells(bbox);\n\t    var diagram = {\n\t      cells: d3_geom_voronoiCells,\n\t      edges: d3_geom_voronoiEdges\n\t    };\n\t    d3_geom_voronoiBeaches = d3_geom_voronoiCircles = d3_geom_voronoiEdges = d3_geom_voronoiCells = null;\n\t    return diagram;\n\t  }\n\t  function d3_geom_voronoiVertexOrder(a, b) {\n\t    return b.y - a.y || b.x - a.x;\n\t  }\n\t  d3.geom.voronoi = function(points) {\n\t    var x = d3_geom_pointX, y = d3_geom_pointY, fx = x, fy = y, clipExtent = d3_geom_voronoiClipExtent;\n\t    if (points) return voronoi(points);\n\t    function voronoi(data) {\n\t      var polygons = new Array(data.length), x0 = clipExtent[0][0], y0 = clipExtent[0][1], x1 = clipExtent[1][0], y1 = clipExtent[1][1];\n\t      d3_geom_voronoi(sites(data), clipExtent).cells.forEach(function(cell, i) {\n\t        var edges = cell.edges, site = cell.site, polygon = polygons[i] = edges.length ? edges.map(function(e) {\n\t          var s = e.start();\n\t          return [ s.x, s.y ];\n\t        }) : site.x >= x0 && site.x <= x1 && site.y >= y0 && site.y <= y1 ? [ [ x0, y1 ], [ x1, y1 ], [ x1, y0 ], [ x0, y0 ] ] : [];\n\t        polygon.point = data[i];\n\t      });\n\t      return polygons;\n\t    }\n\t    function sites(data) {\n\t      return data.map(function(d, i) {\n\t        return {\n\t          x: Math.round(fx(d, i) / ε) * ε,\n\t          y: Math.round(fy(d, i) / ε) * ε,\n\t          i: i\n\t        };\n\t      });\n\t    }\n\t    voronoi.links = function(data) {\n\t      return d3_geom_voronoi(sites(data)).edges.filter(function(edge) {\n\t        return edge.l && edge.r;\n\t      }).map(function(edge) {\n\t        return {\n\t          source: data[edge.l.i],\n\t          target: data[edge.r.i]\n\t        };\n\t      });\n\t    };\n\t    voronoi.triangles = function(data) {\n\t      var triangles = [];\n\t      d3_geom_voronoi(sites(data)).cells.forEach(function(cell, i) {\n\t        var site = cell.site, edges = cell.edges.sort(d3_geom_voronoiHalfEdgeOrder), j = -1, m = edges.length, e0, s0, e1 = edges[m - 1].edge, s1 = e1.l === site ? e1.r : e1.l;\n\t        while (++j < m) {\n\t          e0 = e1;\n\t          s0 = s1;\n\t          e1 = edges[j].edge;\n\t          s1 = e1.l === site ? e1.r : e1.l;\n\t          if (i < s0.i && i < s1.i && d3_geom_voronoiTriangleArea(site, s0, s1) < 0) {\n\t            triangles.push([ data[i], data[s0.i], data[s1.i] ]);\n\t          }\n\t        }\n\t      });\n\t      return triangles;\n\t    };\n\t    voronoi.x = function(_) {\n\t      return arguments.length ? (fx = d3_functor(x = _), voronoi) : x;\n\t    };\n\t    voronoi.y = function(_) {\n\t      return arguments.length ? (fy = d3_functor(y = _), voronoi) : y;\n\t    };\n\t    voronoi.clipExtent = function(_) {\n\t      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent;\n\t      clipExtent = _ == null ? d3_geom_voronoiClipExtent : _;\n\t      return voronoi;\n\t    };\n\t    voronoi.size = function(_) {\n\t      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent && clipExtent[1];\n\t      return voronoi.clipExtent(_ && [ [ 0, 0 ], _ ]);\n\t    };\n\t    return voronoi;\n\t  };\n\t  var d3_geom_voronoiClipExtent = [ [ -1e6, -1e6 ], [ 1e6, 1e6 ] ];\n\t  function d3_geom_voronoiTriangleArea(a, b, c) {\n\t    return (a.x - c.x) * (b.y - a.y) - (a.x - b.x) * (c.y - a.y);\n\t  }\n\t  d3.geom.delaunay = function(vertices) {\n\t    return d3.geom.voronoi().triangles(vertices);\n\t  };\n\t  d3.geom.quadtree = function(points, x1, y1, x2, y2) {\n\t    var x = d3_geom_pointX, y = d3_geom_pointY, compat;\n\t    if (compat = arguments.length) {\n\t      x = d3_geom_quadtreeCompatX;\n\t      y = d3_geom_quadtreeCompatY;\n\t      if (compat === 3) {\n\t        y2 = y1;\n\t        x2 = x1;\n\t        y1 = x1 = 0;\n\t      }\n\t      return quadtree(points);\n\t    }\n\t    function quadtree(data) {\n\t      var d, fx = d3_functor(x), fy = d3_functor(y), xs, ys, i, n, x1_, y1_, x2_, y2_;\n\t      if (x1 != null) {\n\t        x1_ = x1, y1_ = y1, x2_ = x2, y2_ = y2;\n\t      } else {\n\t        x2_ = y2_ = -(x1_ = y1_ = Infinity);\n\t        xs = [], ys = [];\n\t        n = data.length;\n\t        if (compat) for (i = 0; i < n; ++i) {\n\t          d = data[i];\n\t          if (d.x < x1_) x1_ = d.x;\n\t          if (d.y < y1_) y1_ = d.y;\n\t          if (d.x > x2_) x2_ = d.x;\n\t          if (d.y > y2_) y2_ = d.y;\n\t          xs.push(d.x);\n\t          ys.push(d.y);\n\t        } else for (i = 0; i < n; ++i) {\n\t          var x_ = +fx(d = data[i], i), y_ = +fy(d, i);\n\t          if (x_ < x1_) x1_ = x_;\n\t          if (y_ < y1_) y1_ = y_;\n\t          if (x_ > x2_) x2_ = x_;\n\t          if (y_ > y2_) y2_ = y_;\n\t          xs.push(x_);\n\t          ys.push(y_);\n\t        }\n\t      }\n\t      var dx = x2_ - x1_, dy = y2_ - y1_;\n\t      if (dx > dy) y2_ = y1_ + dx; else x2_ = x1_ + dy;\n\t      function insert(n, d, x, y, x1, y1, x2, y2) {\n\t        if (isNaN(x) || isNaN(y)) return;\n\t        if (n.leaf) {\n\t          var nx = n.x, ny = n.y;\n\t          if (nx != null) {\n\t            if (abs(nx - x) + abs(ny - y) < .01) {\n\t              insertChild(n, d, x, y, x1, y1, x2, y2);\n\t            } else {\n\t              var nPoint = n.point;\n\t              n.x = n.y = n.point = null;\n\t              insertChild(n, nPoint, nx, ny, x1, y1, x2, y2);\n\t              insertChild(n, d, x, y, x1, y1, x2, y2);\n\t            }\n\t          } else {\n\t            n.x = x, n.y = y, n.point = d;\n\t          }\n\t        } else {\n\t          insertChild(n, d, x, y, x1, y1, x2, y2);\n\t        }\n\t      }\n\t      function insertChild(n, d, x, y, x1, y1, x2, y2) {\n\t        var xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym, i = below << 1 | right;\n\t        n.leaf = false;\n\t        n = n.nodes[i] || (n.nodes[i] = d3_geom_quadtreeNode());\n\t        if (right) x1 = xm; else x2 = xm;\n\t        if (below) y1 = ym; else y2 = ym;\n\t        insert(n, d, x, y, x1, y1, x2, y2);\n\t      }\n\t      var root = d3_geom_quadtreeNode();\n\t      root.add = function(d) {\n\t        insert(root, d, +fx(d, ++i), +fy(d, i), x1_, y1_, x2_, y2_);\n\t      };\n\t      root.visit = function(f) {\n\t        d3_geom_quadtreeVisit(f, root, x1_, y1_, x2_, y2_);\n\t      };\n\t      root.find = function(point) {\n\t        return d3_geom_quadtreeFind(root, point[0], point[1], x1_, y1_, x2_, y2_);\n\t      };\n\t      i = -1;\n\t      if (x1 == null) {\n\t        while (++i < n) {\n\t          insert(root, data[i], xs[i], ys[i], x1_, y1_, x2_, y2_);\n\t        }\n\t        --i;\n\t      } else data.forEach(root.add);\n\t      xs = ys = data = d = null;\n\t      return root;\n\t    }\n\t    quadtree.x = function(_) {\n\t      return arguments.length ? (x = _, quadtree) : x;\n\t    };\n\t    quadtree.y = function(_) {\n\t      return arguments.length ? (y = _, quadtree) : y;\n\t    };\n\t    quadtree.extent = function(_) {\n\t      if (!arguments.length) return x1 == null ? null : [ [ x1, y1 ], [ x2, y2 ] ];\n\t      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = +_[0][0], y1 = +_[0][1], x2 = +_[1][0], \n\t      y2 = +_[1][1];\n\t      return quadtree;\n\t    };\n\t    quadtree.size = function(_) {\n\t      if (!arguments.length) return x1 == null ? null : [ x2 - x1, y2 - y1 ];\n\t      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = y1 = 0, x2 = +_[0], y2 = +_[1];\n\t      return quadtree;\n\t    };\n\t    return quadtree;\n\t  };\n\t  function d3_geom_quadtreeCompatX(d) {\n\t    return d.x;\n\t  }\n\t  function d3_geom_quadtreeCompatY(d) {\n\t    return d.y;\n\t  }\n\t  function d3_geom_quadtreeNode() {\n\t    return {\n\t      leaf: true,\n\t      nodes: [],\n\t      point: null,\n\t      x: null,\n\t      y: null\n\t    };\n\t  }\n\t  function d3_geom_quadtreeVisit(f, node, x1, y1, x2, y2) {\n\t    if (!f(node, x1, y1, x2, y2)) {\n\t      var sx = (x1 + x2) * .5, sy = (y1 + y2) * .5, children = node.nodes;\n\t      if (children[0]) d3_geom_quadtreeVisit(f, children[0], x1, y1, sx, sy);\n\t      if (children[1]) d3_geom_quadtreeVisit(f, children[1], sx, y1, x2, sy);\n\t      if (children[2]) d3_geom_quadtreeVisit(f, children[2], x1, sy, sx, y2);\n\t      if (children[3]) d3_geom_quadtreeVisit(f, children[3], sx, sy, x2, y2);\n\t    }\n\t  }\n\t  function d3_geom_quadtreeFind(root, x, y, x0, y0, x3, y3) {\n\t    var minDistance2 = Infinity, closestPoint;\n\t    (function find(node, x1, y1, x2, y2) {\n\t      if (x1 > x3 || y1 > y3 || x2 < x0 || y2 < y0) return;\n\t      if (point = node.point) {\n\t        var point, dx = x - node.x, dy = y - node.y, distance2 = dx * dx + dy * dy;\n\t        if (distance2 < minDistance2) {\n\t          var distance = Math.sqrt(minDistance2 = distance2);\n\t          x0 = x - distance, y0 = y - distance;\n\t          x3 = x + distance, y3 = y + distance;\n\t          closestPoint = point;\n\t        }\n\t      }\n\t      var children = node.nodes, xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym;\n\t      for (var i = below << 1 | right, j = i + 4; i < j; ++i) {\n\t        if (node = children[i & 3]) switch (i & 3) {\n\t         case 0:\n\t          find(node, x1, y1, xm, ym);\n\t          break;\n\t\n\t         case 1:\n\t          find(node, xm, y1, x2, ym);\n\t          break;\n\t\n\t         case 2:\n\t          find(node, x1, ym, xm, y2);\n\t          break;\n\t\n\t         case 3:\n\t          find(node, xm, ym, x2, y2);\n\t          break;\n\t        }\n\t      }\n\t    })(root, x0, y0, x3, y3);\n\t    return closestPoint;\n\t  }\n\t  d3.interpolateRgb = d3_interpolateRgb;\n\t  function d3_interpolateRgb(a, b) {\n\t    a = d3.rgb(a);\n\t    b = d3.rgb(b);\n\t    var ar = a.r, ag = a.g, ab = a.b, br = b.r - ar, bg = b.g - ag, bb = b.b - ab;\n\t    return function(t) {\n\t      return \"#\" + d3_rgb_hex(Math.round(ar + br * t)) + d3_rgb_hex(Math.round(ag + bg * t)) + d3_rgb_hex(Math.round(ab + bb * t));\n\t    };\n\t  }\n\t  d3.interpolateObject = d3_interpolateObject;\n\t  function d3_interpolateObject(a, b) {\n\t    var i = {}, c = {}, k;\n\t    for (k in a) {\n\t      if (k in b) {\n\t        i[k] = d3_interpolate(a[k], b[k]);\n\t      } else {\n\t        c[k] = a[k];\n\t      }\n\t    }\n\t    for (k in b) {\n\t      if (!(k in a)) {\n\t        c[k] = b[k];\n\t      }\n\t    }\n\t    return function(t) {\n\t      for (k in i) c[k] = i[k](t);\n\t      return c;\n\t    };\n\t  }\n\t  d3.interpolateNumber = d3_interpolateNumber;\n\t  function d3_interpolateNumber(a, b) {\n\t    a = +a, b = +b;\n\t    return function(t) {\n\t      return a * (1 - t) + b * t;\n\t    };\n\t  }\n\t  d3.interpolateString = d3_interpolateString;\n\t  function d3_interpolateString(a, b) {\n\t    var bi = d3_interpolate_numberA.lastIndex = d3_interpolate_numberB.lastIndex = 0, am, bm, bs, i = -1, s = [], q = [];\n\t    a = a + \"\", b = b + \"\";\n\t    while ((am = d3_interpolate_numberA.exec(a)) && (bm = d3_interpolate_numberB.exec(b))) {\n\t      if ((bs = bm.index) > bi) {\n\t        bs = b.slice(bi, bs);\n\t        if (s[i]) s[i] += bs; else s[++i] = bs;\n\t      }\n\t      if ((am = am[0]) === (bm = bm[0])) {\n\t        if (s[i]) s[i] += bm; else s[++i] = bm;\n\t      } else {\n\t        s[++i] = null;\n\t        q.push({\n\t          i: i,\n\t          x: d3_interpolateNumber(am, bm)\n\t        });\n\t      }\n\t      bi = d3_interpolate_numberB.lastIndex;\n\t    }\n\t    if (bi < b.length) {\n\t      bs = b.slice(bi);\n\t      if (s[i]) s[i] += bs; else s[++i] = bs;\n\t    }\n\t    return s.length < 2 ? q[0] ? (b = q[0].x, function(t) {\n\t      return b(t) + \"\";\n\t    }) : function() {\n\t      return b;\n\t    } : (b = q.length, function(t) {\n\t      for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n\t      return s.join(\"\");\n\t    });\n\t  }\n\t  var d3_interpolate_numberA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g, d3_interpolate_numberB = new RegExp(d3_interpolate_numberA.source, \"g\");\n\t  d3.interpolate = d3_interpolate;\n\t  function d3_interpolate(a, b) {\n\t    var i = d3.interpolators.length, f;\n\t    while (--i >= 0 && !(f = d3.interpolators[i](a, b))) ;\n\t    return f;\n\t  }\n\t  d3.interpolators = [ function(a, b) {\n\t    var t = typeof b;\n\t    return (t === \"string\" ? d3_rgb_names.has(b.toLowerCase()) || /^(#|rgb\\(|hsl\\()/i.test(b) ? d3_interpolateRgb : d3_interpolateString : b instanceof d3_color ? d3_interpolateRgb : Array.isArray(b) ? d3_interpolateArray : t === \"object\" && isNaN(b) ? d3_interpolateObject : d3_interpolateNumber)(a, b);\n\t  } ];\n\t  d3.interpolateArray = d3_interpolateArray;\n\t  function d3_interpolateArray(a, b) {\n\t    var x = [], c = [], na = a.length, nb = b.length, n0 = Math.min(a.length, b.length), i;\n\t    for (i = 0; i < n0; ++i) x.push(d3_interpolate(a[i], b[i]));\n\t    for (;i < na; ++i) c[i] = a[i];\n\t    for (;i < nb; ++i) c[i] = b[i];\n\t    return function(t) {\n\t      for (i = 0; i < n0; ++i) c[i] = x[i](t);\n\t      return c;\n\t    };\n\t  }\n\t  var d3_ease_default = function() {\n\t    return d3_identity;\n\t  };\n\t  var d3_ease = d3.map({\n\t    linear: d3_ease_default,\n\t    poly: d3_ease_poly,\n\t    quad: function() {\n\t      return d3_ease_quad;\n\t    },\n\t    cubic: function() {\n\t      return d3_ease_cubic;\n\t    },\n\t    sin: function() {\n\t      return d3_ease_sin;\n\t    },\n\t    exp: function() {\n\t      return d3_ease_exp;\n\t    },\n\t    circle: function() {\n\t      return d3_ease_circle;\n\t    },\n\t    elastic: d3_ease_elastic,\n\t    back: d3_ease_back,\n\t    bounce: function() {\n\t      return d3_ease_bounce;\n\t    }\n\t  });\n\t  var d3_ease_mode = d3.map({\n\t    \"in\": d3_identity,\n\t    out: d3_ease_reverse,\n\t    \"in-out\": d3_ease_reflect,\n\t    \"out-in\": function(f) {\n\t      return d3_ease_reflect(d3_ease_reverse(f));\n\t    }\n\t  });\n\t  d3.ease = function(name) {\n\t    var i = name.indexOf(\"-\"), t = i >= 0 ? name.slice(0, i) : name, m = i >= 0 ? name.slice(i + 1) : \"in\";\n\t    t = d3_ease.get(t) || d3_ease_default;\n\t    m = d3_ease_mode.get(m) || d3_identity;\n\t    return d3_ease_clamp(m(t.apply(null, d3_arraySlice.call(arguments, 1))));\n\t  };\n\t  function d3_ease_clamp(f) {\n\t    return function(t) {\n\t      return t <= 0 ? 0 : t >= 1 ? 1 : f(t);\n\t    };\n\t  }\n\t  function d3_ease_reverse(f) {\n\t    return function(t) {\n\t      return 1 - f(1 - t);\n\t    };\n\t  }\n\t  function d3_ease_reflect(f) {\n\t    return function(t) {\n\t      return .5 * (t < .5 ? f(2 * t) : 2 - f(2 - 2 * t));\n\t    };\n\t  }\n\t  function d3_ease_quad(t) {\n\t    return t * t;\n\t  }\n\t  function d3_ease_cubic(t) {\n\t    return t * t * t;\n\t  }\n\t  function d3_ease_cubicInOut(t) {\n\t    if (t <= 0) return 0;\n\t    if (t >= 1) return 1;\n\t    var t2 = t * t, t3 = t2 * t;\n\t    return 4 * (t < .5 ? t3 : 3 * (t - t2) + t3 - .75);\n\t  }\n\t  function d3_ease_poly(e) {\n\t    return function(t) {\n\t      return Math.pow(t, e);\n\t    };\n\t  }\n\t  function d3_ease_sin(t) {\n\t    return 1 - Math.cos(t * halfπ);\n\t  }\n\t  function d3_ease_exp(t) {\n\t    return Math.pow(2, 10 * (t - 1));\n\t  }\n\t  function d3_ease_circle(t) {\n\t    return 1 - Math.sqrt(1 - t * t);\n\t  }\n\t  function d3_ease_elastic(a, p) {\n\t    var s;\n\t    if (arguments.length < 2) p = .45;\n\t    if (arguments.length) s = p / τ * Math.asin(1 / a); else a = 1, s = p / 4;\n\t    return function(t) {\n\t      return 1 + a * Math.pow(2, -10 * t) * Math.sin((t - s) * τ / p);\n\t    };\n\t  }\n\t  function d3_ease_back(s) {\n\t    if (!s) s = 1.70158;\n\t    return function(t) {\n\t      return t * t * ((s + 1) * t - s);\n\t    };\n\t  }\n\t  function d3_ease_bounce(t) {\n\t    return t < 1 / 2.75 ? 7.5625 * t * t : t < 2 / 2.75 ? 7.5625 * (t -= 1.5 / 2.75) * t + .75 : t < 2.5 / 2.75 ? 7.5625 * (t -= 2.25 / 2.75) * t + .9375 : 7.5625 * (t -= 2.625 / 2.75) * t + .984375;\n\t  }\n\t  d3.interpolateHcl = d3_interpolateHcl;\n\t  function d3_interpolateHcl(a, b) {\n\t    a = d3.hcl(a);\n\t    b = d3.hcl(b);\n\t    var ah = a.h, ac = a.c, al = a.l, bh = b.h - ah, bc = b.c - ac, bl = b.l - al;\n\t    if (isNaN(bc)) bc = 0, ac = isNaN(ac) ? b.c : ac;\n\t    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n\t    return function(t) {\n\t      return d3_hcl_lab(ah + bh * t, ac + bc * t, al + bl * t) + \"\";\n\t    };\n\t  }\n\t  d3.interpolateHsl = d3_interpolateHsl;\n\t  function d3_interpolateHsl(a, b) {\n\t    a = d3.hsl(a);\n\t    b = d3.hsl(b);\n\t    var ah = a.h, as = a.s, al = a.l, bh = b.h - ah, bs = b.s - as, bl = b.l - al;\n\t    if (isNaN(bs)) bs = 0, as = isNaN(as) ? b.s : as;\n\t    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n\t    return function(t) {\n\t      return d3_hsl_rgb(ah + bh * t, as + bs * t, al + bl * t) + \"\";\n\t    };\n\t  }\n\t  d3.interpolateLab = d3_interpolateLab;\n\t  function d3_interpolateLab(a, b) {\n\t    a = d3.lab(a);\n\t    b = d3.lab(b);\n\t    var al = a.l, aa = a.a, ab = a.b, bl = b.l - al, ba = b.a - aa, bb = b.b - ab;\n\t    return function(t) {\n\t      return d3_lab_rgb(al + bl * t, aa + ba * t, ab + bb * t) + \"\";\n\t    };\n\t  }\n\t  d3.interpolateRound = d3_interpolateRound;\n\t  function d3_interpolateRound(a, b) {\n\t    b -= a;\n\t    return function(t) {\n\t      return Math.round(a + b * t);\n\t    };\n\t  }\n\t  d3.transform = function(string) {\n\t    var g = d3_document.createElementNS(d3.ns.prefix.svg, \"g\");\n\t    return (d3.transform = function(string) {\n\t      if (string != null) {\n\t        g.setAttribute(\"transform\", string);\n\t        var t = g.transform.baseVal.consolidate();\n\t      }\n\t      return new d3_transform(t ? t.matrix : d3_transformIdentity);\n\t    })(string);\n\t  };\n\t  function d3_transform(m) {\n\t    var r0 = [ m.a, m.b ], r1 = [ m.c, m.d ], kx = d3_transformNormalize(r0), kz = d3_transformDot(r0, r1), ky = d3_transformNormalize(d3_transformCombine(r1, r0, -kz)) || 0;\n\t    if (r0[0] * r1[1] < r1[0] * r0[1]) {\n\t      r0[0] *= -1;\n\t      r0[1] *= -1;\n\t      kx *= -1;\n\t      kz *= -1;\n\t    }\n\t    this.rotate = (kx ? Math.atan2(r0[1], r0[0]) : Math.atan2(-r1[0], r1[1])) * d3_degrees;\n\t    this.translate = [ m.e, m.f ];\n\t    this.scale = [ kx, ky ];\n\t    this.skew = ky ? Math.atan2(kz, ky) * d3_degrees : 0;\n\t  }\n\t  d3_transform.prototype.toString = function() {\n\t    return \"translate(\" + this.translate + \")rotate(\" + this.rotate + \")skewX(\" + this.skew + \")scale(\" + this.scale + \")\";\n\t  };\n\t  function d3_transformDot(a, b) {\n\t    return a[0] * b[0] + a[1] * b[1];\n\t  }\n\t  function d3_transformNormalize(a) {\n\t    var k = Math.sqrt(d3_transformDot(a, a));\n\t    if (k) {\n\t      a[0] /= k;\n\t      a[1] /= k;\n\t    }\n\t    return k;\n\t  }\n\t  function d3_transformCombine(a, b, k) {\n\t    a[0] += k * b[0];\n\t    a[1] += k * b[1];\n\t    return a;\n\t  }\n\t  var d3_transformIdentity = {\n\t    a: 1,\n\t    b: 0,\n\t    c: 0,\n\t    d: 1,\n\t    e: 0,\n\t    f: 0\n\t  };\n\t  d3.interpolateTransform = d3_interpolateTransform;\n\t  function d3_interpolateTransformPop(s) {\n\t    return s.length ? s.pop() + \",\" : \"\";\n\t  }\n\t  function d3_interpolateTranslate(ta, tb, s, q) {\n\t    if (ta[0] !== tb[0] || ta[1] !== tb[1]) {\n\t      var i = s.push(\"translate(\", null, \",\", null, \")\");\n\t      q.push({\n\t        i: i - 4,\n\t        x: d3_interpolateNumber(ta[0], tb[0])\n\t      }, {\n\t        i: i - 2,\n\t        x: d3_interpolateNumber(ta[1], tb[1])\n\t      });\n\t    } else if (tb[0] || tb[1]) {\n\t      s.push(\"translate(\" + tb + \")\");\n\t    }\n\t  }\n\t  function d3_interpolateRotate(ra, rb, s, q) {\n\t    if (ra !== rb) {\n\t      if (ra - rb > 180) rb += 360; else if (rb - ra > 180) ra += 360;\n\t      q.push({\n\t        i: s.push(d3_interpolateTransformPop(s) + \"rotate(\", null, \")\") - 2,\n\t        x: d3_interpolateNumber(ra, rb)\n\t      });\n\t    } else if (rb) {\n\t      s.push(d3_interpolateTransformPop(s) + \"rotate(\" + rb + \")\");\n\t    }\n\t  }\n\t  function d3_interpolateSkew(wa, wb, s, q) {\n\t    if (wa !== wb) {\n\t      q.push({\n\t        i: s.push(d3_interpolateTransformPop(s) + \"skewX(\", null, \")\") - 2,\n\t        x: d3_interpolateNumber(wa, wb)\n\t      });\n\t    } else if (wb) {\n\t      s.push(d3_interpolateTransformPop(s) + \"skewX(\" + wb + \")\");\n\t    }\n\t  }\n\t  function d3_interpolateScale(ka, kb, s, q) {\n\t    if (ka[0] !== kb[0] || ka[1] !== kb[1]) {\n\t      var i = s.push(d3_interpolateTransformPop(s) + \"scale(\", null, \",\", null, \")\");\n\t      q.push({\n\t        i: i - 4,\n\t        x: d3_interpolateNumber(ka[0], kb[0])\n\t      }, {\n\t        i: i - 2,\n\t        x: d3_interpolateNumber(ka[1], kb[1])\n\t      });\n\t    } else if (kb[0] !== 1 || kb[1] !== 1) {\n\t      s.push(d3_interpolateTransformPop(s) + \"scale(\" + kb + \")\");\n\t    }\n\t  }\n\t  function d3_interpolateTransform(a, b) {\n\t    var s = [], q = [];\n\t    a = d3.transform(a), b = d3.transform(b);\n\t    d3_interpolateTranslate(a.translate, b.translate, s, q);\n\t    d3_interpolateRotate(a.rotate, b.rotate, s, q);\n\t    d3_interpolateSkew(a.skew, b.skew, s, q);\n\t    d3_interpolateScale(a.scale, b.scale, s, q);\n\t    a = b = null;\n\t    return function(t) {\n\t      var i = -1, n = q.length, o;\n\t      while (++i < n) s[(o = q[i]).i] = o.x(t);\n\t      return s.join(\"\");\n\t    };\n\t  }\n\t  function d3_uninterpolateNumber(a, b) {\n\t    b = (b -= a = +a) || 1 / b;\n\t    return function(x) {\n\t      return (x - a) / b;\n\t    };\n\t  }\n\t  function d3_uninterpolateClamp(a, b) {\n\t    b = (b -= a = +a) || 1 / b;\n\t    return function(x) {\n\t      return Math.max(0, Math.min(1, (x - a) / b));\n\t    };\n\t  }\n\t  d3.layout = {};\n\t  d3.layout.bundle = function() {\n\t    return function(links) {\n\t      var paths = [], i = -1, n = links.length;\n\t      while (++i < n) paths.push(d3_layout_bundlePath(links[i]));\n\t      return paths;\n\t    };\n\t  };\n\t  function d3_layout_bundlePath(link) {\n\t    var start = link.source, end = link.target, lca = d3_layout_bundleLeastCommonAncestor(start, end), points = [ start ];\n\t    while (start !== lca) {\n\t      start = start.parent;\n\t      points.push(start);\n\t    }\n\t    var k = points.length;\n\t    while (end !== lca) {\n\t      points.splice(k, 0, end);\n\t      end = end.parent;\n\t    }\n\t    return points;\n\t  }\n\t  function d3_layout_bundleAncestors(node) {\n\t    var ancestors = [], parent = node.parent;\n\t    while (parent != null) {\n\t      ancestors.push(node);\n\t      node = parent;\n\t      parent = parent.parent;\n\t    }\n\t    ancestors.push(node);\n\t    return ancestors;\n\t  }\n\t  function d3_layout_bundleLeastCommonAncestor(a, b) {\n\t    if (a === b) return a;\n\t    var aNodes = d3_layout_bundleAncestors(a), bNodes = d3_layout_bundleAncestors(b), aNode = aNodes.pop(), bNode = bNodes.pop(), sharedNode = null;\n\t    while (aNode === bNode) {\n\t      sharedNode = aNode;\n\t      aNode = aNodes.pop();\n\t      bNode = bNodes.pop();\n\t    }\n\t    return sharedNode;\n\t  }\n\t  d3.layout.chord = function() {\n\t    var chord = {}, chords, groups, matrix, n, padding = 0, sortGroups, sortSubgroups, sortChords;\n\t    function relayout() {\n\t      var subgroups = {}, groupSums = [], groupIndex = d3.range(n), subgroupIndex = [], k, x, x0, i, j;\n\t      chords = [];\n\t      groups = [];\n\t      k = 0, i = -1;\n\t      while (++i < n) {\n\t        x = 0, j = -1;\n\t        while (++j < n) {\n\t          x += matrix[i][j];\n\t        }\n\t        groupSums.push(x);\n\t        subgroupIndex.push(d3.range(n));\n\t        k += x;\n\t      }\n\t      if (sortGroups) {\n\t        groupIndex.sort(function(a, b) {\n\t          return sortGroups(groupSums[a], groupSums[b]);\n\t        });\n\t      }\n\t      if (sortSubgroups) {\n\t        subgroupIndex.forEach(function(d, i) {\n\t          d.sort(function(a, b) {\n\t            return sortSubgroups(matrix[i][a], matrix[i][b]);\n\t          });\n\t        });\n\t      }\n\t      k = (τ - padding * n) / k;\n\t      x = 0, i = -1;\n\t      while (++i < n) {\n\t        x0 = x, j = -1;\n\t        while (++j < n) {\n\t          var di = groupIndex[i], dj = subgroupIndex[di][j], v = matrix[di][dj], a0 = x, a1 = x += v * k;\n\t          subgroups[di + \"-\" + dj] = {\n\t            index: di,\n\t            subindex: dj,\n\t            startAngle: a0,\n\t            endAngle: a1,\n\t            value: v\n\t          };\n\t        }\n\t        groups[di] = {\n\t          index: di,\n\t          startAngle: x0,\n\t          endAngle: x,\n\t          value: groupSums[di]\n\t        };\n\t        x += padding;\n\t      }\n\t      i = -1;\n\t      while (++i < n) {\n\t        j = i - 1;\n\t        while (++j < n) {\n\t          var source = subgroups[i + \"-\" + j], target = subgroups[j + \"-\" + i];\n\t          if (source.value || target.value) {\n\t            chords.push(source.value < target.value ? {\n\t              source: target,\n\t              target: source\n\t            } : {\n\t              source: source,\n\t              target: target\n\t            });\n\t          }\n\t        }\n\t      }\n\t      if (sortChords) resort();\n\t    }\n\t    function resort() {\n\t      chords.sort(function(a, b) {\n\t        return sortChords((a.source.value + a.target.value) / 2, (b.source.value + b.target.value) / 2);\n\t      });\n\t    }\n\t    chord.matrix = function(x) {\n\t      if (!arguments.length) return matrix;\n\t      n = (matrix = x) && matrix.length;\n\t      chords = groups = null;\n\t      return chord;\n\t    };\n\t    chord.padding = function(x) {\n\t      if (!arguments.length) return padding;\n\t      padding = x;\n\t      chords = groups = null;\n\t      return chord;\n\t    };\n\t    chord.sortGroups = function(x) {\n\t      if (!arguments.length) return sortGroups;\n\t      sortGroups = x;\n\t      chords = groups = null;\n\t      return chord;\n\t    };\n\t    chord.sortSubgroups = function(x) {\n\t      if (!arguments.length) return sortSubgroups;\n\t      sortSubgroups = x;\n\t      chords = null;\n\t      return chord;\n\t    };\n\t    chord.sortChords = function(x) {\n\t      if (!arguments.length) return sortChords;\n\t      sortChords = x;\n\t      if (chords) resort();\n\t      return chord;\n\t    };\n\t    chord.chords = function() {\n\t      if (!chords) relayout();\n\t      return chords;\n\t    };\n\t    chord.groups = function() {\n\t      if (!groups) relayout();\n\t      return groups;\n\t    };\n\t    return chord;\n\t  };\n\t  d3.layout.force = function() {\n\t    var force = {}, event = d3.dispatch(\"start\", \"tick\", \"end\"), timer, size = [ 1, 1 ], drag, alpha, friction = .9, linkDistance = d3_layout_forceLinkDistance, linkStrength = d3_layout_forceLinkStrength, charge = -30, chargeDistance2 = d3_layout_forceChargeDistance2, gravity = .1, theta2 = .64, nodes = [], links = [], distances, strengths, charges;\n\t    function repulse(node) {\n\t      return function(quad, x1, _, x2) {\n\t        if (quad.point !== node) {\n\t          var dx = quad.cx - node.x, dy = quad.cy - node.y, dw = x2 - x1, dn = dx * dx + dy * dy;\n\t          if (dw * dw / theta2 < dn) {\n\t            if (dn < chargeDistance2) {\n\t              var k = quad.charge / dn;\n\t              node.px -= dx * k;\n\t              node.py -= dy * k;\n\t            }\n\t            return true;\n\t          }\n\t          if (quad.point && dn && dn < chargeDistance2) {\n\t            var k = quad.pointCharge / dn;\n\t            node.px -= dx * k;\n\t            node.py -= dy * k;\n\t          }\n\t        }\n\t        return !quad.charge;\n\t      };\n\t    }\n\t    force.tick = function() {\n\t      if ((alpha *= .99) < .005) {\n\t        timer = null;\n\t        event.end({\n\t          type: \"end\",\n\t          alpha: alpha = 0\n\t        });\n\t        return true;\n\t      }\n\t      var n = nodes.length, m = links.length, q, i, o, s, t, l, k, x, y;\n\t      for (i = 0; i < m; ++i) {\n\t        o = links[i];\n\t        s = o.source;\n\t        t = o.target;\n\t        x = t.x - s.x;\n\t        y = t.y - s.y;\n\t        if (l = x * x + y * y) {\n\t          l = alpha * strengths[i] * ((l = Math.sqrt(l)) - distances[i]) / l;\n\t          x *= l;\n\t          y *= l;\n\t          t.x -= x * (k = s.weight + t.weight ? s.weight / (s.weight + t.weight) : .5);\n\t          t.y -= y * k;\n\t          s.x += x * (k = 1 - k);\n\t          s.y += y * k;\n\t        }\n\t      }\n\t      if (k = alpha * gravity) {\n\t        x = size[0] / 2;\n\t        y = size[1] / 2;\n\t        i = -1;\n\t        if (k) while (++i < n) {\n\t          o = nodes[i];\n\t          o.x += (x - o.x) * k;\n\t          o.y += (y - o.y) * k;\n\t        }\n\t      }\n\t      if (charge) {\n\t        d3_layout_forceAccumulate(q = d3.geom.quadtree(nodes), alpha, charges);\n\t        i = -1;\n\t        while (++i < n) {\n\t          if (!(o = nodes[i]).fixed) {\n\t            q.visit(repulse(o));\n\t          }\n\t        }\n\t      }\n\t      i = -1;\n\t      while (++i < n) {\n\t        o = nodes[i];\n\t        if (o.fixed) {\n\t          o.x = o.px;\n\t          o.y = o.py;\n\t        } else {\n\t          o.x -= (o.px - (o.px = o.x)) * friction;\n\t          o.y -= (o.py - (o.py = o.y)) * friction;\n\t        }\n\t      }\n\t      event.tick({\n\t        type: \"tick\",\n\t        alpha: alpha\n\t      });\n\t    };\n\t    force.nodes = function(x) {\n\t      if (!arguments.length) return nodes;\n\t      nodes = x;\n\t      return force;\n\t    };\n\t    force.links = function(x) {\n\t      if (!arguments.length) return links;\n\t      links = x;\n\t      return force;\n\t    };\n\t    force.size = function(x) {\n\t      if (!arguments.length) return size;\n\t      size = x;\n\t      return force;\n\t    };\n\t    force.linkDistance = function(x) {\n\t      if (!arguments.length) return linkDistance;\n\t      linkDistance = typeof x === \"function\" ? x : +x;\n\t      return force;\n\t    };\n\t    force.distance = force.linkDistance;\n\t    force.linkStrength = function(x) {\n\t      if (!arguments.length) return linkStrength;\n\t      linkStrength = typeof x === \"function\" ? x : +x;\n\t      return force;\n\t    };\n\t    force.friction = function(x) {\n\t      if (!arguments.length) return friction;\n\t      friction = +x;\n\t      return force;\n\t    };\n\t    force.charge = function(x) {\n\t      if (!arguments.length) return charge;\n\t      charge = typeof x === \"function\" ? x : +x;\n\t      return force;\n\t    };\n\t    force.chargeDistance = function(x) {\n\t      if (!arguments.length) return Math.sqrt(chargeDistance2);\n\t      chargeDistance2 = x * x;\n\t      return force;\n\t    };\n\t    force.gravity = function(x) {\n\t      if (!arguments.length) return gravity;\n\t      gravity = +x;\n\t      return force;\n\t    };\n\t    force.theta = function(x) {\n\t      if (!arguments.length) return Math.sqrt(theta2);\n\t      theta2 = x * x;\n\t      return force;\n\t    };\n\t    force.alpha = function(x) {\n\t      if (!arguments.length) return alpha;\n\t      x = +x;\n\t      if (alpha) {\n\t        if (x > 0) {\n\t          alpha = x;\n\t        } else {\n\t          timer.c = null, timer.t = NaN, timer = null;\n\t          event.end({\n\t            type: \"end\",\n\t            alpha: alpha = 0\n\t          });\n\t        }\n\t      } else if (x > 0) {\n\t        event.start({\n\t          type: \"start\",\n\t          alpha: alpha = x\n\t        });\n\t        timer = d3_timer(force.tick);\n\t      }\n\t      return force;\n\t    };\n\t    force.start = function() {\n\t      var i, n = nodes.length, m = links.length, w = size[0], h = size[1], neighbors, o;\n\t      for (i = 0; i < n; ++i) {\n\t        (o = nodes[i]).index = i;\n\t        o.weight = 0;\n\t      }\n\t      for (i = 0; i < m; ++i) {\n\t        o = links[i];\n\t        if (typeof o.source == \"number\") o.source = nodes[o.source];\n\t        if (typeof o.target == \"number\") o.target = nodes[o.target];\n\t        ++o.source.weight;\n\t        ++o.target.weight;\n\t      }\n\t      for (i = 0; i < n; ++i) {\n\t        o = nodes[i];\n\t        if (isNaN(o.x)) o.x = position(\"x\", w);\n\t        if (isNaN(o.y)) o.y = position(\"y\", h);\n\t        if (isNaN(o.px)) o.px = o.x;\n\t        if (isNaN(o.py)) o.py = o.y;\n\t      }\n\t      distances = [];\n\t      if (typeof linkDistance === \"function\") for (i = 0; i < m; ++i) distances[i] = +linkDistance.call(this, links[i], i); else for (i = 0; i < m; ++i) distances[i] = linkDistance;\n\t      strengths = [];\n\t      if (typeof linkStrength === \"function\") for (i = 0; i < m; ++i) strengths[i] = +linkStrength.call(this, links[i], i); else for (i = 0; i < m; ++i) strengths[i] = linkStrength;\n\t      charges = [];\n\t      if (typeof charge === \"function\") for (i = 0; i < n; ++i) charges[i] = +charge.call(this, nodes[i], i); else for (i = 0; i < n; ++i) charges[i] = charge;\n\t      function position(dimension, size) {\n\t        if (!neighbors) {\n\t          neighbors = new Array(n);\n\t          for (j = 0; j < n; ++j) {\n\t            neighbors[j] = [];\n\t          }\n\t          for (j = 0; j < m; ++j) {\n\t            var o = links[j];\n\t            neighbors[o.source.index].push(o.target);\n\t            neighbors[o.target.index].push(o.source);\n\t          }\n\t        }\n\t        var candidates = neighbors[i], j = -1, l = candidates.length, x;\n\t        while (++j < l) if (!isNaN(x = candidates[j][dimension])) return x;\n\t        return Math.random() * size;\n\t      }\n\t      return force.resume();\n\t    };\n\t    force.resume = function() {\n\t      return force.alpha(.1);\n\t    };\n\t    force.stop = function() {\n\t      return force.alpha(0);\n\t    };\n\t    force.drag = function() {\n\t      if (!drag) drag = d3.behavior.drag().origin(d3_identity).on(\"dragstart.force\", d3_layout_forceDragstart).on(\"drag.force\", dragmove).on(\"dragend.force\", d3_layout_forceDragend);\n\t      if (!arguments.length) return drag;\n\t      this.on(\"mouseover.force\", d3_layout_forceMouseover).on(\"mouseout.force\", d3_layout_forceMouseout).call(drag);\n\t    };\n\t    function dragmove(d) {\n\t      d.px = d3.event.x, d.py = d3.event.y;\n\t      force.resume();\n\t    }\n\t    return d3.rebind(force, event, \"on\");\n\t  };\n\t  function d3_layout_forceDragstart(d) {\n\t    d.fixed |= 2;\n\t  }\n\t  function d3_layout_forceDragend(d) {\n\t    d.fixed &= ~6;\n\t  }\n\t  function d3_layout_forceMouseover(d) {\n\t    d.fixed |= 4;\n\t    d.px = d.x, d.py = d.y;\n\t  }\n\t  function d3_layout_forceMouseout(d) {\n\t    d.fixed &= ~4;\n\t  }\n\t  function d3_layout_forceAccumulate(quad, alpha, charges) {\n\t    var cx = 0, cy = 0;\n\t    quad.charge = 0;\n\t    if (!quad.leaf) {\n\t      var nodes = quad.nodes, n = nodes.length, i = -1, c;\n\t      while (++i < n) {\n\t        c = nodes[i];\n\t        if (c == null) continue;\n\t        d3_layout_forceAccumulate(c, alpha, charges);\n\t        quad.charge += c.charge;\n\t        cx += c.charge * c.cx;\n\t        cy += c.charge * c.cy;\n\t      }\n\t    }\n\t    if (quad.point) {\n\t      if (!quad.leaf) {\n\t        quad.point.x += Math.random() - .5;\n\t        quad.point.y += Math.random() - .5;\n\t      }\n\t      var k = alpha * charges[quad.point.index];\n\t      quad.charge += quad.pointCharge = k;\n\t      cx += k * quad.point.x;\n\t      cy += k * quad.point.y;\n\t    }\n\t    quad.cx = cx / quad.charge;\n\t    quad.cy = cy / quad.charge;\n\t  }\n\t  var d3_layout_forceLinkDistance = 20, d3_layout_forceLinkStrength = 1, d3_layout_forceChargeDistance2 = Infinity;\n\t  d3.layout.hierarchy = function() {\n\t    var sort = d3_layout_hierarchySort, children = d3_layout_hierarchyChildren, value = d3_layout_hierarchyValue;\n\t    function hierarchy(root) {\n\t      var stack = [ root ], nodes = [], node;\n\t      root.depth = 0;\n\t      while ((node = stack.pop()) != null) {\n\t        nodes.push(node);\n\t        if ((childs = children.call(hierarchy, node, node.depth)) && (n = childs.length)) {\n\t          var n, childs, child;\n\t          while (--n >= 0) {\n\t            stack.push(child = childs[n]);\n\t            child.parent = node;\n\t            child.depth = node.depth + 1;\n\t          }\n\t          if (value) node.value = 0;\n\t          node.children = childs;\n\t        } else {\n\t          if (value) node.value = +value.call(hierarchy, node, node.depth) || 0;\n\t          delete node.children;\n\t        }\n\t      }\n\t      d3_layout_hierarchyVisitAfter(root, function(node) {\n\t        var childs, parent;\n\t        if (sort && (childs = node.children)) childs.sort(sort);\n\t        if (value && (parent = node.parent)) parent.value += node.value;\n\t      });\n\t      return nodes;\n\t    }\n\t    hierarchy.sort = function(x) {\n\t      if (!arguments.length) return sort;\n\t      sort = x;\n\t      return hierarchy;\n\t    };\n\t    hierarchy.children = function(x) {\n\t      if (!arguments.length) return children;\n\t      children = x;\n\t      return hierarchy;\n\t    };\n\t    hierarchy.value = function(x) {\n\t      if (!arguments.length) return value;\n\t      value = x;\n\t      return hierarchy;\n\t    };\n\t    hierarchy.revalue = function(root) {\n\t      if (value) {\n\t        d3_layout_hierarchyVisitBefore(root, function(node) {\n\t          if (node.children) node.value = 0;\n\t        });\n\t        d3_layout_hierarchyVisitAfter(root, function(node) {\n\t          var parent;\n\t          if (!node.children) node.value = +value.call(hierarchy, node, node.depth) || 0;\n\t          if (parent = node.parent) parent.value += node.value;\n\t        });\n\t      }\n\t      return root;\n\t    };\n\t    return hierarchy;\n\t  };\n\t  function d3_layout_hierarchyRebind(object, hierarchy) {\n\t    d3.rebind(object, hierarchy, \"sort\", \"children\", \"value\");\n\t    object.nodes = object;\n\t    object.links = d3_layout_hierarchyLinks;\n\t    return object;\n\t  }\n\t  function d3_layout_hierarchyVisitBefore(node, callback) {\n\t    var nodes = [ node ];\n\t    while ((node = nodes.pop()) != null) {\n\t      callback(node);\n\t      if ((children = node.children) && (n = children.length)) {\n\t        var n, children;\n\t        while (--n >= 0) nodes.push(children[n]);\n\t      }\n\t    }\n\t  }\n\t  function d3_layout_hierarchyVisitAfter(node, callback) {\n\t    var nodes = [ node ], nodes2 = [];\n\t    while ((node = nodes.pop()) != null) {\n\t      nodes2.push(node);\n\t      if ((children = node.children) && (n = children.length)) {\n\t        var i = -1, n, children;\n\t        while (++i < n) nodes.push(children[i]);\n\t      }\n\t    }\n\t    while ((node = nodes2.pop()) != null) {\n\t      callback(node);\n\t    }\n\t  }\n\t  function d3_layout_hierarchyChildren(d) {\n\t    return d.children;\n\t  }\n\t  function d3_layout_hierarchyValue(d) {\n\t    return d.value;\n\t  }\n\t  function d3_layout_hierarchySort(a, b) {\n\t    return b.value - a.value;\n\t  }\n\t  function d3_layout_hierarchyLinks(nodes) {\n\t    return d3.merge(nodes.map(function(parent) {\n\t      return (parent.children || []).map(function(child) {\n\t        return {\n\t          source: parent,\n\t          target: child\n\t        };\n\t      });\n\t    }));\n\t  }\n\t  d3.layout.partition = function() {\n\t    var hierarchy = d3.layout.hierarchy(), size = [ 1, 1 ];\n\t    function position(node, x, dx, dy) {\n\t      var children = node.children;\n\t      node.x = x;\n\t      node.y = node.depth * dy;\n\t      node.dx = dx;\n\t      node.dy = dy;\n\t      if (children && (n = children.length)) {\n\t        var i = -1, n, c, d;\n\t        dx = node.value ? dx / node.value : 0;\n\t        while (++i < n) {\n\t          position(c = children[i], x, d = c.value * dx, dy);\n\t          x += d;\n\t        }\n\t      }\n\t    }\n\t    function depth(node) {\n\t      var children = node.children, d = 0;\n\t      if (children && (n = children.length)) {\n\t        var i = -1, n;\n\t        while (++i < n) d = Math.max(d, depth(children[i]));\n\t      }\n\t      return 1 + d;\n\t    }\n\t    function partition(d, i) {\n\t      var nodes = hierarchy.call(this, d, i);\n\t      position(nodes[0], 0, size[0], size[1] / depth(nodes[0]));\n\t      return nodes;\n\t    }\n\t    partition.size = function(x) {\n\t      if (!arguments.length) return size;\n\t      size = x;\n\t      return partition;\n\t    };\n\t    return d3_layout_hierarchyRebind(partition, hierarchy);\n\t  };\n\t  d3.layout.pie = function() {\n\t    var value = Number, sort = d3_layout_pieSortByValue, startAngle = 0, endAngle = τ, padAngle = 0;\n\t    function pie(data) {\n\t      var n = data.length, values = data.map(function(d, i) {\n\t        return +value.call(pie, d, i);\n\t      }), a = +(typeof startAngle === \"function\" ? startAngle.apply(this, arguments) : startAngle), da = (typeof endAngle === \"function\" ? endAngle.apply(this, arguments) : endAngle) - a, p = Math.min(Math.abs(da) / n, +(typeof padAngle === \"function\" ? padAngle.apply(this, arguments) : padAngle)), pa = p * (da < 0 ? -1 : 1), sum = d3.sum(values), k = sum ? (da - n * pa) / sum : 0, index = d3.range(n), arcs = [], v;\n\t      if (sort != null) index.sort(sort === d3_layout_pieSortByValue ? function(i, j) {\n\t        return values[j] - values[i];\n\t      } : function(i, j) {\n\t        return sort(data[i], data[j]);\n\t      });\n\t      index.forEach(function(i) {\n\t        arcs[i] = {\n\t          data: data[i],\n\t          value: v = values[i],\n\t          startAngle: a,\n\t          endAngle: a += v * k + pa,\n\t          padAngle: p\n\t        };\n\t      });\n\t      return arcs;\n\t    }\n\t    pie.value = function(_) {\n\t      if (!arguments.length) return value;\n\t      value = _;\n\t      return pie;\n\t    };\n\t    pie.sort = function(_) {\n\t      if (!arguments.length) return sort;\n\t      sort = _;\n\t      return pie;\n\t    };\n\t    pie.startAngle = function(_) {\n\t      if (!arguments.length) return startAngle;\n\t      startAngle = _;\n\t      return pie;\n\t    };\n\t    pie.endAngle = function(_) {\n\t      if (!arguments.length) return endAngle;\n\t      endAngle = _;\n\t      return pie;\n\t    };\n\t    pie.padAngle = function(_) {\n\t      if (!arguments.length) return padAngle;\n\t      padAngle = _;\n\t      return pie;\n\t    };\n\t    return pie;\n\t  };\n\t  var d3_layout_pieSortByValue = {};\n\t  d3.layout.stack = function() {\n\t    var values = d3_identity, order = d3_layout_stackOrderDefault, offset = d3_layout_stackOffsetZero, out = d3_layout_stackOut, x = d3_layout_stackX, y = d3_layout_stackY;\n\t    function stack(data, index) {\n\t      if (!(n = data.length)) return data;\n\t      var series = data.map(function(d, i) {\n\t        return values.call(stack, d, i);\n\t      });\n\t      var points = series.map(function(d) {\n\t        return d.map(function(v, i) {\n\t          return [ x.call(stack, v, i), y.call(stack, v, i) ];\n\t        });\n\t      });\n\t      var orders = order.call(stack, points, index);\n\t      series = d3.permute(series, orders);\n\t      points = d3.permute(points, orders);\n\t      var offsets = offset.call(stack, points, index);\n\t      var m = series[0].length, n, i, j, o;\n\t      for (j = 0; j < m; ++j) {\n\t        out.call(stack, series[0][j], o = offsets[j], points[0][j][1]);\n\t        for (i = 1; i < n; ++i) {\n\t          out.call(stack, series[i][j], o += points[i - 1][j][1], points[i][j][1]);\n\t        }\n\t      }\n\t      return data;\n\t    }\n\t    stack.values = function(x) {\n\t      if (!arguments.length) return values;\n\t      values = x;\n\t      return stack;\n\t    };\n\t    stack.order = function(x) {\n\t      if (!arguments.length) return order;\n\t      order = typeof x === \"function\" ? x : d3_layout_stackOrders.get(x) || d3_layout_stackOrderDefault;\n\t      return stack;\n\t    };\n\t    stack.offset = function(x) {\n\t      if (!arguments.length) return offset;\n\t      offset = typeof x === \"function\" ? x : d3_layout_stackOffsets.get(x) || d3_layout_stackOffsetZero;\n\t      return stack;\n\t    };\n\t    stack.x = function(z) {\n\t      if (!arguments.length) return x;\n\t      x = z;\n\t      return stack;\n\t    };\n\t    stack.y = function(z) {\n\t      if (!arguments.length) return y;\n\t      y = z;\n\t      return stack;\n\t    };\n\t    stack.out = function(z) {\n\t      if (!arguments.length) return out;\n\t      out = z;\n\t      return stack;\n\t    };\n\t    return stack;\n\t  };\n\t  function d3_layout_stackX(d) {\n\t    return d.x;\n\t  }\n\t  function d3_layout_stackY(d) {\n\t    return d.y;\n\t  }\n\t  function d3_layout_stackOut(d, y0, y) {\n\t    d.y0 = y0;\n\t    d.y = y;\n\t  }\n\t  var d3_layout_stackOrders = d3.map({\n\t    \"inside-out\": function(data) {\n\t      var n = data.length, i, j, max = data.map(d3_layout_stackMaxIndex), sums = data.map(d3_layout_stackReduceSum), index = d3.range(n).sort(function(a, b) {\n\t        return max[a] - max[b];\n\t      }), top = 0, bottom = 0, tops = [], bottoms = [];\n\t      for (i = 0; i < n; ++i) {\n\t        j = index[i];\n\t        if (top < bottom) {\n\t          top += sums[j];\n\t          tops.push(j);\n\t        } else {\n\t          bottom += sums[j];\n\t          bottoms.push(j);\n\t        }\n\t      }\n\t      return bottoms.reverse().concat(tops);\n\t    },\n\t    reverse: function(data) {\n\t      return d3.range(data.length).reverse();\n\t    },\n\t    \"default\": d3_layout_stackOrderDefault\n\t  });\n\t  var d3_layout_stackOffsets = d3.map({\n\t    silhouette: function(data) {\n\t      var n = data.length, m = data[0].length, sums = [], max = 0, i, j, o, y0 = [];\n\t      for (j = 0; j < m; ++j) {\n\t        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n\t        if (o > max) max = o;\n\t        sums.push(o);\n\t      }\n\t      for (j = 0; j < m; ++j) {\n\t        y0[j] = (max - sums[j]) / 2;\n\t      }\n\t      return y0;\n\t    },\n\t    wiggle: function(data) {\n\t      var n = data.length, x = data[0], m = x.length, i, j, k, s1, s2, s3, dx, o, o0, y0 = [];\n\t      y0[0] = o = o0 = 0;\n\t      for (j = 1; j < m; ++j) {\n\t        for (i = 0, s1 = 0; i < n; ++i) s1 += data[i][j][1];\n\t        for (i = 0, s2 = 0, dx = x[j][0] - x[j - 1][0]; i < n; ++i) {\n\t          for (k = 0, s3 = (data[i][j][1] - data[i][j - 1][1]) / (2 * dx); k < i; ++k) {\n\t            s3 += (data[k][j][1] - data[k][j - 1][1]) / dx;\n\t          }\n\t          s2 += s3 * data[i][j][1];\n\t        }\n\t        y0[j] = o -= s1 ? s2 / s1 * dx : 0;\n\t        if (o < o0) o0 = o;\n\t      }\n\t      for (j = 0; j < m; ++j) y0[j] -= o0;\n\t      return y0;\n\t    },\n\t    expand: function(data) {\n\t      var n = data.length, m = data[0].length, k = 1 / n, i, j, o, y0 = [];\n\t      for (j = 0; j < m; ++j) {\n\t        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n\t        if (o) for (i = 0; i < n; i++) data[i][j][1] /= o; else for (i = 0; i < n; i++) data[i][j][1] = k;\n\t      }\n\t      for (j = 0; j < m; ++j) y0[j] = 0;\n\t      return y0;\n\t    },\n\t    zero: d3_layout_stackOffsetZero\n\t  });\n\t  function d3_layout_stackOrderDefault(data) {\n\t    return d3.range(data.length);\n\t  }\n\t  function d3_layout_stackOffsetZero(data) {\n\t    var j = -1, m = data[0].length, y0 = [];\n\t    while (++j < m) y0[j] = 0;\n\t    return y0;\n\t  }\n\t  function d3_layout_stackMaxIndex(array) {\n\t    var i = 1, j = 0, v = array[0][1], k, n = array.length;\n\t    for (;i < n; ++i) {\n\t      if ((k = array[i][1]) > v) {\n\t        j = i;\n\t        v = k;\n\t      }\n\t    }\n\t    return j;\n\t  }\n\t  function d3_layout_stackReduceSum(d) {\n\t    return d.reduce(d3_layout_stackSum, 0);\n\t  }\n\t  function d3_layout_stackSum(p, d) {\n\t    return p + d[1];\n\t  }\n\t  d3.layout.histogram = function() {\n\t    var frequency = true, valuer = Number, ranger = d3_layout_histogramRange, binner = d3_layout_histogramBinSturges;\n\t    function histogram(data, i) {\n\t      var bins = [], values = data.map(valuer, this), range = ranger.call(this, values, i), thresholds = binner.call(this, range, values, i), bin, i = -1, n = values.length, m = thresholds.length - 1, k = frequency ? 1 : 1 / n, x;\n\t      while (++i < m) {\n\t        bin = bins[i] = [];\n\t        bin.dx = thresholds[i + 1] - (bin.x = thresholds[i]);\n\t        bin.y = 0;\n\t      }\n\t      if (m > 0) {\n\t        i = -1;\n\t        while (++i < n) {\n\t          x = values[i];\n\t          if (x >= range[0] && x <= range[1]) {\n\t            bin = bins[d3.bisect(thresholds, x, 1, m) - 1];\n\t            bin.y += k;\n\t            bin.push(data[i]);\n\t          }\n\t        }\n\t      }\n\t      return bins;\n\t    }\n\t    histogram.value = function(x) {\n\t      if (!arguments.length) return valuer;\n\t      valuer = x;\n\t      return histogram;\n\t    };\n\t    histogram.range = function(x) {\n\t      if (!arguments.length) return ranger;\n\t      ranger = d3_functor(x);\n\t      return histogram;\n\t    };\n\t    histogram.bins = function(x) {\n\t      if (!arguments.length) return binner;\n\t      binner = typeof x === \"number\" ? function(range) {\n\t        return d3_layout_histogramBinFixed(range, x);\n\t      } : d3_functor(x);\n\t      return histogram;\n\t    };\n\t    histogram.frequency = function(x) {\n\t      if (!arguments.length) return frequency;\n\t      frequency = !!x;\n\t      return histogram;\n\t    };\n\t    return histogram;\n\t  };\n\t  function d3_layout_histogramBinSturges(range, values) {\n\t    return d3_layout_histogramBinFixed(range, Math.ceil(Math.log(values.length) / Math.LN2 + 1));\n\t  }\n\t  function d3_layout_histogramBinFixed(range, n) {\n\t    var x = -1, b = +range[0], m = (range[1] - b) / n, f = [];\n\t    while (++x <= n) f[x] = m * x + b;\n\t    return f;\n\t  }\n\t  function d3_layout_histogramRange(values) {\n\t    return [ d3.min(values), d3.max(values) ];\n\t  }\n\t  d3.layout.pack = function() {\n\t    var hierarchy = d3.layout.hierarchy().sort(d3_layout_packSort), padding = 0, size = [ 1, 1 ], radius;\n\t    function pack(d, i) {\n\t      var nodes = hierarchy.call(this, d, i), root = nodes[0], w = size[0], h = size[1], r = radius == null ? Math.sqrt : typeof radius === \"function\" ? radius : function() {\n\t        return radius;\n\t      };\n\t      root.x = root.y = 0;\n\t      d3_layout_hierarchyVisitAfter(root, function(d) {\n\t        d.r = +r(d.value);\n\t      });\n\t      d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n\t      if (padding) {\n\t        var dr = padding * (radius ? 1 : Math.max(2 * root.r / w, 2 * root.r / h)) / 2;\n\t        d3_layout_hierarchyVisitAfter(root, function(d) {\n\t          d.r += dr;\n\t        });\n\t        d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n\t        d3_layout_hierarchyVisitAfter(root, function(d) {\n\t          d.r -= dr;\n\t        });\n\t      }\n\t      d3_layout_packTransform(root, w / 2, h / 2, radius ? 1 : 1 / Math.max(2 * root.r / w, 2 * root.r / h));\n\t      return nodes;\n\t    }\n\t    pack.size = function(_) {\n\t      if (!arguments.length) return size;\n\t      size = _;\n\t      return pack;\n\t    };\n\t    pack.radius = function(_) {\n\t      if (!arguments.length) return radius;\n\t      radius = _ == null || typeof _ === \"function\" ? _ : +_;\n\t      return pack;\n\t    };\n\t    pack.padding = function(_) {\n\t      if (!arguments.length) return padding;\n\t      padding = +_;\n\t      return pack;\n\t    };\n\t    return d3_layout_hierarchyRebind(pack, hierarchy);\n\t  };\n\t  function d3_layout_packSort(a, b) {\n\t    return a.value - b.value;\n\t  }\n\t  function d3_layout_packInsert(a, b) {\n\t    var c = a._pack_next;\n\t    a._pack_next = b;\n\t    b._pack_prev = a;\n\t    b._pack_next = c;\n\t    c._pack_prev = b;\n\t  }\n\t  function d3_layout_packSplice(a, b) {\n\t    a._pack_next = b;\n\t    b._pack_prev = a;\n\t  }\n\t  function d3_layout_packIntersects(a, b) {\n\t    var dx = b.x - a.x, dy = b.y - a.y, dr = a.r + b.r;\n\t    return .999 * dr * dr > dx * dx + dy * dy;\n\t  }\n\t  function d3_layout_packSiblings(node) {\n\t    if (!(nodes = node.children) || !(n = nodes.length)) return;\n\t    var nodes, xMin = Infinity, xMax = -Infinity, yMin = Infinity, yMax = -Infinity, a, b, c, i, j, k, n;\n\t    function bound(node) {\n\t      xMin = Math.min(node.x - node.r, xMin);\n\t      xMax = Math.max(node.x + node.r, xMax);\n\t      yMin = Math.min(node.y - node.r, yMin);\n\t      yMax = Math.max(node.y + node.r, yMax);\n\t    }\n\t    nodes.forEach(d3_layout_packLink);\n\t    a = nodes[0];\n\t    a.x = -a.r;\n\t    a.y = 0;\n\t    bound(a);\n\t    if (n > 1) {\n\t      b = nodes[1];\n\t      b.x = b.r;\n\t      b.y = 0;\n\t      bound(b);\n\t      if (n > 2) {\n\t        c = nodes[2];\n\t        d3_layout_packPlace(a, b, c);\n\t        bound(c);\n\t        d3_layout_packInsert(a, c);\n\t        a._pack_prev = c;\n\t        d3_layout_packInsert(c, b);\n\t        b = a._pack_next;\n\t        for (i = 3; i < n; i++) {\n\t          d3_layout_packPlace(a, b, c = nodes[i]);\n\t          var isect = 0, s1 = 1, s2 = 1;\n\t          for (j = b._pack_next; j !== b; j = j._pack_next, s1++) {\n\t            if (d3_layout_packIntersects(j, c)) {\n\t              isect = 1;\n\t              break;\n\t            }\n\t          }\n\t          if (isect == 1) {\n\t            for (k = a._pack_prev; k !== j._pack_prev; k = k._pack_prev, s2++) {\n\t              if (d3_layout_packIntersects(k, c)) {\n\t                break;\n\t              }\n\t            }\n\t          }\n\t          if (isect) {\n\t            if (s1 < s2 || s1 == s2 && b.r < a.r) d3_layout_packSplice(a, b = j); else d3_layout_packSplice(a = k, b);\n\t            i--;\n\t          } else {\n\t            d3_layout_packInsert(a, c);\n\t            b = c;\n\t            bound(c);\n\t          }\n\t        }\n\t      }\n\t    }\n\t    var cx = (xMin + xMax) / 2, cy = (yMin + yMax) / 2, cr = 0;\n\t    for (i = 0; i < n; i++) {\n\t      c = nodes[i];\n\t      c.x -= cx;\n\t      c.y -= cy;\n\t      cr = Math.max(cr, c.r + Math.sqrt(c.x * c.x + c.y * c.y));\n\t    }\n\t    node.r = cr;\n\t    nodes.forEach(d3_layout_packUnlink);\n\t  }\n\t  function d3_layout_packLink(node) {\n\t    node._pack_next = node._pack_prev = node;\n\t  }\n\t  function d3_layout_packUnlink(node) {\n\t    delete node._pack_next;\n\t    delete node._pack_prev;\n\t  }\n\t  function d3_layout_packTransform(node, x, y, k) {\n\t    var children = node.children;\n\t    node.x = x += k * node.x;\n\t    node.y = y += k * node.y;\n\t    node.r *= k;\n\t    if (children) {\n\t      var i = -1, n = children.length;\n\t      while (++i < n) d3_layout_packTransform(children[i], x, y, k);\n\t    }\n\t  }\n\t  function d3_layout_packPlace(a, b, c) {\n\t    var db = a.r + c.r, dx = b.x - a.x, dy = b.y - a.y;\n\t    if (db && (dx || dy)) {\n\t      var da = b.r + c.r, dc = dx * dx + dy * dy;\n\t      da *= da;\n\t      db *= db;\n\t      var x = .5 + (db - da) / (2 * dc), y = Math.sqrt(Math.max(0, 2 * da * (db + dc) - (db -= dc) * db - da * da)) / (2 * dc);\n\t      c.x = a.x + x * dx + y * dy;\n\t      c.y = a.y + x * dy - y * dx;\n\t    } else {\n\t      c.x = a.x + db;\n\t      c.y = a.y;\n\t    }\n\t  }\n\t  d3.layout.tree = function() {\n\t    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = null;\n\t    function tree(d, i) {\n\t      var nodes = hierarchy.call(this, d, i), root0 = nodes[0], root1 = wrapTree(root0);\n\t      d3_layout_hierarchyVisitAfter(root1, firstWalk), root1.parent.m = -root1.z;\n\t      d3_layout_hierarchyVisitBefore(root1, secondWalk);\n\t      if (nodeSize) d3_layout_hierarchyVisitBefore(root0, sizeNode); else {\n\t        var left = root0, right = root0, bottom = root0;\n\t        d3_layout_hierarchyVisitBefore(root0, function(node) {\n\t          if (node.x < left.x) left = node;\n\t          if (node.x > right.x) right = node;\n\t          if (node.depth > bottom.depth) bottom = node;\n\t        });\n\t        var tx = separation(left, right) / 2 - left.x, kx = size[0] / (right.x + separation(right, left) / 2 + tx), ky = size[1] / (bottom.depth || 1);\n\t        d3_layout_hierarchyVisitBefore(root0, function(node) {\n\t          node.x = (node.x + tx) * kx;\n\t          node.y = node.depth * ky;\n\t        });\n\t      }\n\t      return nodes;\n\t    }\n\t    function wrapTree(root0) {\n\t      var root1 = {\n\t        A: null,\n\t        children: [ root0 ]\n\t      }, queue = [ root1 ], node1;\n\t      while ((node1 = queue.pop()) != null) {\n\t        for (var children = node1.children, child, i = 0, n = children.length; i < n; ++i) {\n\t          queue.push((children[i] = child = {\n\t            _: children[i],\n\t            parent: node1,\n\t            children: (child = children[i].children) && child.slice() || [],\n\t            A: null,\n\t            a: null,\n\t            z: 0,\n\t            m: 0,\n\t            c: 0,\n\t            s: 0,\n\t            t: null,\n\t            i: i\n\t          }).a = child);\n\t        }\n\t      }\n\t      return root1.children[0];\n\t    }\n\t    function firstWalk(v) {\n\t      var children = v.children, siblings = v.parent.children, w = v.i ? siblings[v.i - 1] : null;\n\t      if (children.length) {\n\t        d3_layout_treeShift(v);\n\t        var midpoint = (children[0].z + children[children.length - 1].z) / 2;\n\t        if (w) {\n\t          v.z = w.z + separation(v._, w._);\n\t          v.m = v.z - midpoint;\n\t        } else {\n\t          v.z = midpoint;\n\t        }\n\t      } else if (w) {\n\t        v.z = w.z + separation(v._, w._);\n\t      }\n\t      v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\n\t    }\n\t    function secondWalk(v) {\n\t      v._.x = v.z + v.parent.m;\n\t      v.m += v.parent.m;\n\t    }\n\t    function apportion(v, w, ancestor) {\n\t      if (w) {\n\t        var vip = v, vop = v, vim = w, vom = vip.parent.children[0], sip = vip.m, sop = vop.m, sim = vim.m, som = vom.m, shift;\n\t        while (vim = d3_layout_treeRight(vim), vip = d3_layout_treeLeft(vip), vim && vip) {\n\t          vom = d3_layout_treeLeft(vom);\n\t          vop = d3_layout_treeRight(vop);\n\t          vop.a = v;\n\t          shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\n\t          if (shift > 0) {\n\t            d3_layout_treeMove(d3_layout_treeAncestor(vim, v, ancestor), v, shift);\n\t            sip += shift;\n\t            sop += shift;\n\t          }\n\t          sim += vim.m;\n\t          sip += vip.m;\n\t          som += vom.m;\n\t          sop += vop.m;\n\t        }\n\t        if (vim && !d3_layout_treeRight(vop)) {\n\t          vop.t = vim;\n\t          vop.m += sim - sop;\n\t        }\n\t        if (vip && !d3_layout_treeLeft(vom)) {\n\t          vom.t = vip;\n\t          vom.m += sip - som;\n\t          ancestor = v;\n\t        }\n\t      }\n\t      return ancestor;\n\t    }\n\t    function sizeNode(node) {\n\t      node.x *= size[0];\n\t      node.y = node.depth * size[1];\n\t    }\n\t    tree.separation = function(x) {\n\t      if (!arguments.length) return separation;\n\t      separation = x;\n\t      return tree;\n\t    };\n\t    tree.size = function(x) {\n\t      if (!arguments.length) return nodeSize ? null : size;\n\t      nodeSize = (size = x) == null ? sizeNode : null;\n\t      return tree;\n\t    };\n\t    tree.nodeSize = function(x) {\n\t      if (!arguments.length) return nodeSize ? size : null;\n\t      nodeSize = (size = x) == null ? null : sizeNode;\n\t      return tree;\n\t    };\n\t    return d3_layout_hierarchyRebind(tree, hierarchy);\n\t  };\n\t  function d3_layout_treeSeparation(a, b) {\n\t    return a.parent == b.parent ? 1 : 2;\n\t  }\n\t  function d3_layout_treeLeft(v) {\n\t    var children = v.children;\n\t    return children.length ? children[0] : v.t;\n\t  }\n\t  function d3_layout_treeRight(v) {\n\t    var children = v.children, n;\n\t    return (n = children.length) ? children[n - 1] : v.t;\n\t  }\n\t  function d3_layout_treeMove(wm, wp, shift) {\n\t    var change = shift / (wp.i - wm.i);\n\t    wp.c -= change;\n\t    wp.s += shift;\n\t    wm.c += change;\n\t    wp.z += shift;\n\t    wp.m += shift;\n\t  }\n\t  function d3_layout_treeShift(v) {\n\t    var shift = 0, change = 0, children = v.children, i = children.length, w;\n\t    while (--i >= 0) {\n\t      w = children[i];\n\t      w.z += shift;\n\t      w.m += shift;\n\t      shift += w.s + (change += w.c);\n\t    }\n\t  }\n\t  function d3_layout_treeAncestor(vim, v, ancestor) {\n\t    return vim.a.parent === v.parent ? vim.a : ancestor;\n\t  }\n\t  d3.layout.cluster = function() {\n\t    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = false;\n\t    function cluster(d, i) {\n\t      var nodes = hierarchy.call(this, d, i), root = nodes[0], previousNode, x = 0;\n\t      d3_layout_hierarchyVisitAfter(root, function(node) {\n\t        var children = node.children;\n\t        if (children && children.length) {\n\t          node.x = d3_layout_clusterX(children);\n\t          node.y = d3_layout_clusterY(children);\n\t        } else {\n\t          node.x = previousNode ? x += separation(node, previousNode) : 0;\n\t          node.y = 0;\n\t          previousNode = node;\n\t        }\n\t      });\n\t      var left = d3_layout_clusterLeft(root), right = d3_layout_clusterRight(root), x0 = left.x - separation(left, right) / 2, x1 = right.x + separation(right, left) / 2;\n\t      d3_layout_hierarchyVisitAfter(root, nodeSize ? function(node) {\n\t        node.x = (node.x - root.x) * size[0];\n\t        node.y = (root.y - node.y) * size[1];\n\t      } : function(node) {\n\t        node.x = (node.x - x0) / (x1 - x0) * size[0];\n\t        node.y = (1 - (root.y ? node.y / root.y : 1)) * size[1];\n\t      });\n\t      return nodes;\n\t    }\n\t    cluster.separation = function(x) {\n\t      if (!arguments.length) return separation;\n\t      separation = x;\n\t      return cluster;\n\t    };\n\t    cluster.size = function(x) {\n\t      if (!arguments.length) return nodeSize ? null : size;\n\t      nodeSize = (size = x) == null;\n\t      return cluster;\n\t    };\n\t    cluster.nodeSize = function(x) {\n\t      if (!arguments.length) return nodeSize ? size : null;\n\t      nodeSize = (size = x) != null;\n\t      return cluster;\n\t    };\n\t    return d3_layout_hierarchyRebind(cluster, hierarchy);\n\t  };\n\t  function d3_layout_clusterY(children) {\n\t    return 1 + d3.max(children, function(child) {\n\t      return child.y;\n\t    });\n\t  }\n\t  function d3_layout_clusterX(children) {\n\t    return children.reduce(function(x, child) {\n\t      return x + child.x;\n\t    }, 0) / children.length;\n\t  }\n\t  function d3_layout_clusterLeft(node) {\n\t    var children = node.children;\n\t    return children && children.length ? d3_layout_clusterLeft(children[0]) : node;\n\t  }\n\t  function d3_layout_clusterRight(node) {\n\t    var children = node.children, n;\n\t    return children && (n = children.length) ? d3_layout_clusterRight(children[n - 1]) : node;\n\t  }\n\t  d3.layout.treemap = function() {\n\t    var hierarchy = d3.layout.hierarchy(), round = Math.round, size = [ 1, 1 ], padding = null, pad = d3_layout_treemapPadNull, sticky = false, stickies, mode = \"squarify\", ratio = .5 * (1 + Math.sqrt(5));\n\t    function scale(children, k) {\n\t      var i = -1, n = children.length, child, area;\n\t      while (++i < n) {\n\t        area = (child = children[i]).value * (k < 0 ? 0 : k);\n\t        child.area = isNaN(area) || area <= 0 ? 0 : area;\n\t      }\n\t    }\n\t    function squarify(node) {\n\t      var children = node.children;\n\t      if (children && children.length) {\n\t        var rect = pad(node), row = [], remaining = children.slice(), child, best = Infinity, score, u = mode === \"slice\" ? rect.dx : mode === \"dice\" ? rect.dy : mode === \"slice-dice\" ? node.depth & 1 ? rect.dy : rect.dx : Math.min(rect.dx, rect.dy), n;\n\t        scale(remaining, rect.dx * rect.dy / node.value);\n\t        row.area = 0;\n\t        while ((n = remaining.length) > 0) {\n\t          row.push(child = remaining[n - 1]);\n\t          row.area += child.area;\n\t          if (mode !== \"squarify\" || (score = worst(row, u)) <= best) {\n\t            remaining.pop();\n\t            best = score;\n\t          } else {\n\t            row.area -= row.pop().area;\n\t            position(row, u, rect, false);\n\t            u = Math.min(rect.dx, rect.dy);\n\t            row.length = row.area = 0;\n\t            best = Infinity;\n\t          }\n\t        }\n\t        if (row.length) {\n\t          position(row, u, rect, true);\n\t          row.length = row.area = 0;\n\t        }\n\t        children.forEach(squarify);\n\t      }\n\t    }\n\t    function stickify(node) {\n\t      var children = node.children;\n\t      if (children && children.length) {\n\t        var rect = pad(node), remaining = children.slice(), child, row = [];\n\t        scale(remaining, rect.dx * rect.dy / node.value);\n\t        row.area = 0;\n\t        while (child = remaining.pop()) {\n\t          row.push(child);\n\t          row.area += child.area;\n\t          if (child.z != null) {\n\t            position(row, child.z ? rect.dx : rect.dy, rect, !remaining.length);\n\t            row.length = row.area = 0;\n\t          }\n\t        }\n\t        children.forEach(stickify);\n\t      }\n\t    }\n\t    function worst(row, u) {\n\t      var s = row.area, r, rmax = 0, rmin = Infinity, i = -1, n = row.length;\n\t      while (++i < n) {\n\t        if (!(r = row[i].area)) continue;\n\t        if (r < rmin) rmin = r;\n\t        if (r > rmax) rmax = r;\n\t      }\n\t      s *= s;\n\t      u *= u;\n\t      return s ? Math.max(u * rmax * ratio / s, s / (u * rmin * ratio)) : Infinity;\n\t    }\n\t    function position(row, u, rect, flush) {\n\t      var i = -1, n = row.length, x = rect.x, y = rect.y, v = u ? round(row.area / u) : 0, o;\n\t      if (u == rect.dx) {\n\t        if (flush || v > rect.dy) v = rect.dy;\n\t        while (++i < n) {\n\t          o = row[i];\n\t          o.x = x;\n\t          o.y = y;\n\t          o.dy = v;\n\t          x += o.dx = Math.min(rect.x + rect.dx - x, v ? round(o.area / v) : 0);\n\t        }\n\t        o.z = true;\n\t        o.dx += rect.x + rect.dx - x;\n\t        rect.y += v;\n\t        rect.dy -= v;\n\t      } else {\n\t        if (flush || v > rect.dx) v = rect.dx;\n\t        while (++i < n) {\n\t          o = row[i];\n\t          o.x = x;\n\t          o.y = y;\n\t          o.dx = v;\n\t          y += o.dy = Math.min(rect.y + rect.dy - y, v ? round(o.area / v) : 0);\n\t        }\n\t        o.z = false;\n\t        o.dy += rect.y + rect.dy - y;\n\t        rect.x += v;\n\t        rect.dx -= v;\n\t      }\n\t    }\n\t    function treemap(d) {\n\t      var nodes = stickies || hierarchy(d), root = nodes[0];\n\t      root.x = root.y = 0;\n\t      if (root.value) root.dx = size[0], root.dy = size[1]; else root.dx = root.dy = 0;\n\t      if (stickies) hierarchy.revalue(root);\n\t      scale([ root ], root.dx * root.dy / root.value);\n\t      (stickies ? stickify : squarify)(root);\n\t      if (sticky) stickies = nodes;\n\t      return nodes;\n\t    }\n\t    treemap.size = function(x) {\n\t      if (!arguments.length) return size;\n\t      size = x;\n\t      return treemap;\n\t    };\n\t    treemap.padding = function(x) {\n\t      if (!arguments.length) return padding;\n\t      function padFunction(node) {\n\t        var p = x.call(treemap, node, node.depth);\n\t        return p == null ? d3_layout_treemapPadNull(node) : d3_layout_treemapPad(node, typeof p === \"number\" ? [ p, p, p, p ] : p);\n\t      }\n\t      function padConstant(node) {\n\t        return d3_layout_treemapPad(node, x);\n\t      }\n\t      var type;\n\t      pad = (padding = x) == null ? d3_layout_treemapPadNull : (type = typeof x) === \"function\" ? padFunction : type === \"number\" ? (x = [ x, x, x, x ], \n\t      padConstant) : padConstant;\n\t      return treemap;\n\t    };\n\t    treemap.round = function(x) {\n\t      if (!arguments.length) return round != Number;\n\t      round = x ? Math.round : Number;\n\t      return treemap;\n\t    };\n\t    treemap.sticky = function(x) {\n\t      if (!arguments.length) return sticky;\n\t      sticky = x;\n\t      stickies = null;\n\t      return treemap;\n\t    };\n\t    treemap.ratio = function(x) {\n\t      if (!arguments.length) return ratio;\n\t      ratio = x;\n\t      return treemap;\n\t    };\n\t    treemap.mode = function(x) {\n\t      if (!arguments.length) return mode;\n\t      mode = x + \"\";\n\t      return treemap;\n\t    };\n\t    return d3_layout_hierarchyRebind(treemap, hierarchy);\n\t  };\n\t  function d3_layout_treemapPadNull(node) {\n\t    return {\n\t      x: node.x,\n\t      y: node.y,\n\t      dx: node.dx,\n\t      dy: node.dy\n\t    };\n\t  }\n\t  function d3_layout_treemapPad(node, padding) {\n\t    var x = node.x + padding[3], y = node.y + padding[0], dx = node.dx - padding[1] - padding[3], dy = node.dy - padding[0] - padding[2];\n\t    if (dx < 0) {\n\t      x += dx / 2;\n\t      dx = 0;\n\t    }\n\t    if (dy < 0) {\n\t      y += dy / 2;\n\t      dy = 0;\n\t    }\n\t    return {\n\t      x: x,\n\t      y: y,\n\t      dx: dx,\n\t      dy: dy\n\t    };\n\t  }\n\t  d3.random = {\n\t    normal: function(µ, σ) {\n\t      var n = arguments.length;\n\t      if (n < 2) σ = 1;\n\t      if (n < 1) µ = 0;\n\t      return function() {\n\t        var x, y, r;\n\t        do {\n\t          x = Math.random() * 2 - 1;\n\t          y = Math.random() * 2 - 1;\n\t          r = x * x + y * y;\n\t        } while (!r || r > 1);\n\t        return µ + σ * x * Math.sqrt(-2 * Math.log(r) / r);\n\t      };\n\t    },\n\t    logNormal: function() {\n\t      var random = d3.random.normal.apply(d3, arguments);\n\t      return function() {\n\t        return Math.exp(random());\n\t      };\n\t    },\n\t    bates: function(m) {\n\t      var random = d3.random.irwinHall(m);\n\t      return function() {\n\t        return random() / m;\n\t      };\n\t    },\n\t    irwinHall: function(m) {\n\t      return function() {\n\t        for (var s = 0, j = 0; j < m; j++) s += Math.random();\n\t        return s;\n\t      };\n\t    }\n\t  };\n\t  d3.scale = {};\n\t  function d3_scaleExtent(domain) {\n\t    var start = domain[0], stop = domain[domain.length - 1];\n\t    return start < stop ? [ start, stop ] : [ stop, start ];\n\t  }\n\t  function d3_scaleRange(scale) {\n\t    return scale.rangeExtent ? scale.rangeExtent() : d3_scaleExtent(scale.range());\n\t  }\n\t  function d3_scale_bilinear(domain, range, uninterpolate, interpolate) {\n\t    var u = uninterpolate(domain[0], domain[1]), i = interpolate(range[0], range[1]);\n\t    return function(x) {\n\t      return i(u(x));\n\t    };\n\t  }\n\t  function d3_scale_nice(domain, nice) {\n\t    var i0 = 0, i1 = domain.length - 1, x0 = domain[i0], x1 = domain[i1], dx;\n\t    if (x1 < x0) {\n\t      dx = i0, i0 = i1, i1 = dx;\n\t      dx = x0, x0 = x1, x1 = dx;\n\t    }\n\t    domain[i0] = nice.floor(x0);\n\t    domain[i1] = nice.ceil(x1);\n\t    return domain;\n\t  }\n\t  function d3_scale_niceStep(step) {\n\t    return step ? {\n\t      floor: function(x) {\n\t        return Math.floor(x / step) * step;\n\t      },\n\t      ceil: function(x) {\n\t        return Math.ceil(x / step) * step;\n\t      }\n\t    } : d3_scale_niceIdentity;\n\t  }\n\t  var d3_scale_niceIdentity = {\n\t    floor: d3_identity,\n\t    ceil: d3_identity\n\t  };\n\t  function d3_scale_polylinear(domain, range, uninterpolate, interpolate) {\n\t    var u = [], i = [], j = 0, k = Math.min(domain.length, range.length) - 1;\n\t    if (domain[k] < domain[0]) {\n\t      domain = domain.slice().reverse();\n\t      range = range.slice().reverse();\n\t    }\n\t    while (++j <= k) {\n\t      u.push(uninterpolate(domain[j - 1], domain[j]));\n\t      i.push(interpolate(range[j - 1], range[j]));\n\t    }\n\t    return function(x) {\n\t      var j = d3.bisect(domain, x, 1, k) - 1;\n\t      return i[j](u[j](x));\n\t    };\n\t  }\n\t  d3.scale.linear = function() {\n\t    return d3_scale_linear([ 0, 1 ], [ 0, 1 ], d3_interpolate, false);\n\t  };\n\t  function d3_scale_linear(domain, range, interpolate, clamp) {\n\t    var output, input;\n\t    function rescale() {\n\t      var linear = Math.min(domain.length, range.length) > 2 ? d3_scale_polylinear : d3_scale_bilinear, uninterpolate = clamp ? d3_uninterpolateClamp : d3_uninterpolateNumber;\n\t      output = linear(domain, range, uninterpolate, interpolate);\n\t      input = linear(range, domain, uninterpolate, d3_interpolate);\n\t      return scale;\n\t    }\n\t    function scale(x) {\n\t      return output(x);\n\t    }\n\t    scale.invert = function(y) {\n\t      return input(y);\n\t    };\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return domain;\n\t      domain = x.map(Number);\n\t      return rescale();\n\t    };\n\t    scale.range = function(x) {\n\t      if (!arguments.length) return range;\n\t      range = x;\n\t      return rescale();\n\t    };\n\t    scale.rangeRound = function(x) {\n\t      return scale.range(x).interpolate(d3_interpolateRound);\n\t    };\n\t    scale.clamp = function(x) {\n\t      if (!arguments.length) return clamp;\n\t      clamp = x;\n\t      return rescale();\n\t    };\n\t    scale.interpolate = function(x) {\n\t      if (!arguments.length) return interpolate;\n\t      interpolate = x;\n\t      return rescale();\n\t    };\n\t    scale.ticks = function(m) {\n\t      return d3_scale_linearTicks(domain, m);\n\t    };\n\t    scale.tickFormat = function(m, format) {\n\t      return d3_scale_linearTickFormat(domain, m, format);\n\t    };\n\t    scale.nice = function(m) {\n\t      d3_scale_linearNice(domain, m);\n\t      return rescale();\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_linear(domain, range, interpolate, clamp);\n\t    };\n\t    return rescale();\n\t  }\n\t  function d3_scale_linearRebind(scale, linear) {\n\t    return d3.rebind(scale, linear, \"range\", \"rangeRound\", \"interpolate\", \"clamp\");\n\t  }\n\t  function d3_scale_linearNice(domain, m) {\n\t    d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));\n\t    d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));\n\t    return domain;\n\t  }\n\t  function d3_scale_linearTickRange(domain, m) {\n\t    if (m == null) m = 10;\n\t    var extent = d3_scaleExtent(domain), span = extent[1] - extent[0], step = Math.pow(10, Math.floor(Math.log(span / m) / Math.LN10)), err = m / span * step;\n\t    if (err <= .15) step *= 10; else if (err <= .35) step *= 5; else if (err <= .75) step *= 2;\n\t    extent[0] = Math.ceil(extent[0] / step) * step;\n\t    extent[1] = Math.floor(extent[1] / step) * step + step * .5;\n\t    extent[2] = step;\n\t    return extent;\n\t  }\n\t  function d3_scale_linearTicks(domain, m) {\n\t    return d3.range.apply(d3, d3_scale_linearTickRange(domain, m));\n\t  }\n\t  function d3_scale_linearTickFormat(domain, m, format) {\n\t    var range = d3_scale_linearTickRange(domain, m);\n\t    if (format) {\n\t      var match = d3_format_re.exec(format);\n\t      match.shift();\n\t      if (match[8] === \"s\") {\n\t        var prefix = d3.formatPrefix(Math.max(abs(range[0]), abs(range[1])));\n\t        if (!match[7]) match[7] = \".\" + d3_scale_linearPrecision(prefix.scale(range[2]));\n\t        match[8] = \"f\";\n\t        format = d3.format(match.join(\"\"));\n\t        return function(d) {\n\t          return format(prefix.scale(d)) + prefix.symbol;\n\t        };\n\t      }\n\t      if (!match[7]) match[7] = \".\" + d3_scale_linearFormatPrecision(match[8], range);\n\t      format = match.join(\"\");\n\t    } else {\n\t      format = \",.\" + d3_scale_linearPrecision(range[2]) + \"f\";\n\t    }\n\t    return d3.format(format);\n\t  }\n\t  var d3_scale_linearFormatSignificant = {\n\t    s: 1,\n\t    g: 1,\n\t    p: 1,\n\t    r: 1,\n\t    e: 1\n\t  };\n\t  function d3_scale_linearPrecision(value) {\n\t    return -Math.floor(Math.log(value) / Math.LN10 + .01);\n\t  }\n\t  function d3_scale_linearFormatPrecision(type, range) {\n\t    var p = d3_scale_linearPrecision(range[2]);\n\t    return type in d3_scale_linearFormatSignificant ? Math.abs(p - d3_scale_linearPrecision(Math.max(abs(range[0]), abs(range[1])))) + +(type !== \"e\") : p - (type === \"%\") * 2;\n\t  }\n\t  d3.scale.log = function() {\n\t    return d3_scale_log(d3.scale.linear().domain([ 0, 1 ]), 10, true, [ 1, 10 ]);\n\t  };\n\t  function d3_scale_log(linear, base, positive, domain) {\n\t    function log(x) {\n\t      return (positive ? Math.log(x < 0 ? 0 : x) : -Math.log(x > 0 ? 0 : -x)) / Math.log(base);\n\t    }\n\t    function pow(x) {\n\t      return positive ? Math.pow(base, x) : -Math.pow(base, -x);\n\t    }\n\t    function scale(x) {\n\t      return linear(log(x));\n\t    }\n\t    scale.invert = function(x) {\n\t      return pow(linear.invert(x));\n\t    };\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return domain;\n\t      positive = x[0] >= 0;\n\t      linear.domain((domain = x.map(Number)).map(log));\n\t      return scale;\n\t    };\n\t    scale.base = function(_) {\n\t      if (!arguments.length) return base;\n\t      base = +_;\n\t      linear.domain(domain.map(log));\n\t      return scale;\n\t    };\n\t    scale.nice = function() {\n\t      var niced = d3_scale_nice(domain.map(log), positive ? Math : d3_scale_logNiceNegative);\n\t      linear.domain(niced);\n\t      domain = niced.map(pow);\n\t      return scale;\n\t    };\n\t    scale.ticks = function() {\n\t      var extent = d3_scaleExtent(domain), ticks = [], u = extent[0], v = extent[1], i = Math.floor(log(u)), j = Math.ceil(log(v)), n = base % 1 ? 2 : base;\n\t      if (isFinite(j - i)) {\n\t        if (positive) {\n\t          for (;i < j; i++) for (var k = 1; k < n; k++) ticks.push(pow(i) * k);\n\t          ticks.push(pow(i));\n\t        } else {\n\t          ticks.push(pow(i));\n\t          for (;i++ < j; ) for (var k = n - 1; k > 0; k--) ticks.push(pow(i) * k);\n\t        }\n\t        for (i = 0; ticks[i] < u; i++) {}\n\t        for (j = ticks.length; ticks[j - 1] > v; j--) {}\n\t        ticks = ticks.slice(i, j);\n\t      }\n\t      return ticks;\n\t    };\n\t    scale.tickFormat = function(n, format) {\n\t      if (!arguments.length) return d3_scale_logFormat;\n\t      if (arguments.length < 2) format = d3_scale_logFormat; else if (typeof format !== \"function\") format = d3.format(format);\n\t      var k = Math.max(1, base * n / scale.ticks().length);\n\t      return function(d) {\n\t        var i = d / pow(Math.round(log(d)));\n\t        if (i * base < base - .5) i *= base;\n\t        return i <= k ? format(d) : \"\";\n\t      };\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_log(linear.copy(), base, positive, domain);\n\t    };\n\t    return d3_scale_linearRebind(scale, linear);\n\t  }\n\t  var d3_scale_logFormat = d3.format(\".0e\"), d3_scale_logNiceNegative = {\n\t    floor: function(x) {\n\t      return -Math.ceil(-x);\n\t    },\n\t    ceil: function(x) {\n\t      return -Math.floor(-x);\n\t    }\n\t  };\n\t  d3.scale.pow = function() {\n\t    return d3_scale_pow(d3.scale.linear(), 1, [ 0, 1 ]);\n\t  };\n\t  function d3_scale_pow(linear, exponent, domain) {\n\t    var powp = d3_scale_powPow(exponent), powb = d3_scale_powPow(1 / exponent);\n\t    function scale(x) {\n\t      return linear(powp(x));\n\t    }\n\t    scale.invert = function(x) {\n\t      return powb(linear.invert(x));\n\t    };\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return domain;\n\t      linear.domain((domain = x.map(Number)).map(powp));\n\t      return scale;\n\t    };\n\t    scale.ticks = function(m) {\n\t      return d3_scale_linearTicks(domain, m);\n\t    };\n\t    scale.tickFormat = function(m, format) {\n\t      return d3_scale_linearTickFormat(domain, m, format);\n\t    };\n\t    scale.nice = function(m) {\n\t      return scale.domain(d3_scale_linearNice(domain, m));\n\t    };\n\t    scale.exponent = function(x) {\n\t      if (!arguments.length) return exponent;\n\t      powp = d3_scale_powPow(exponent = x);\n\t      powb = d3_scale_powPow(1 / exponent);\n\t      linear.domain(domain.map(powp));\n\t      return scale;\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_pow(linear.copy(), exponent, domain);\n\t    };\n\t    return d3_scale_linearRebind(scale, linear);\n\t  }\n\t  function d3_scale_powPow(e) {\n\t    return function(x) {\n\t      return x < 0 ? -Math.pow(-x, e) : Math.pow(x, e);\n\t    };\n\t  }\n\t  d3.scale.sqrt = function() {\n\t    return d3.scale.pow().exponent(.5);\n\t  };\n\t  d3.scale.ordinal = function() {\n\t    return d3_scale_ordinal([], {\n\t      t: \"range\",\n\t      a: [ [] ]\n\t    });\n\t  };\n\t  function d3_scale_ordinal(domain, ranger) {\n\t    var index, range, rangeBand;\n\t    function scale(x) {\n\t      return range[((index.get(x) || (ranger.t === \"range\" ? index.set(x, domain.push(x)) : NaN)) - 1) % range.length];\n\t    }\n\t    function steps(start, step) {\n\t      return d3.range(domain.length).map(function(i) {\n\t        return start + step * i;\n\t      });\n\t    }\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return domain;\n\t      domain = [];\n\t      index = new d3_Map();\n\t      var i = -1, n = x.length, xi;\n\t      while (++i < n) if (!index.has(xi = x[i])) index.set(xi, domain.push(xi));\n\t      return scale[ranger.t].apply(scale, ranger.a);\n\t    };\n\t    scale.range = function(x) {\n\t      if (!arguments.length) return range;\n\t      range = x;\n\t      rangeBand = 0;\n\t      ranger = {\n\t        t: \"range\",\n\t        a: arguments\n\t      };\n\t      return scale;\n\t    };\n\t    scale.rangePoints = function(x, padding) {\n\t      if (arguments.length < 2) padding = 0;\n\t      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = (start + stop) / 2, \n\t      0) : (stop - start) / (domain.length - 1 + padding);\n\t      range = steps(start + step * padding / 2, step);\n\t      rangeBand = 0;\n\t      ranger = {\n\t        t: \"rangePoints\",\n\t        a: arguments\n\t      };\n\t      return scale;\n\t    };\n\t    scale.rangeRoundPoints = function(x, padding) {\n\t      if (arguments.length < 2) padding = 0;\n\t      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = stop = Math.round((start + stop) / 2), \n\t      0) : (stop - start) / (domain.length - 1 + padding) | 0;\n\t      range = steps(start + Math.round(step * padding / 2 + (stop - start - (domain.length - 1 + padding) * step) / 2), step);\n\t      rangeBand = 0;\n\t      ranger = {\n\t        t: \"rangeRoundPoints\",\n\t        a: arguments\n\t      };\n\t      return scale;\n\t    };\n\t    scale.rangeBands = function(x, padding, outerPadding) {\n\t      if (arguments.length < 2) padding = 0;\n\t      if (arguments.length < 3) outerPadding = padding;\n\t      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = (stop - start) / (domain.length - padding + 2 * outerPadding);\n\t      range = steps(start + step * outerPadding, step);\n\t      if (reverse) range.reverse();\n\t      rangeBand = step * (1 - padding);\n\t      ranger = {\n\t        t: \"rangeBands\",\n\t        a: arguments\n\t      };\n\t      return scale;\n\t    };\n\t    scale.rangeRoundBands = function(x, padding, outerPadding) {\n\t      if (arguments.length < 2) padding = 0;\n\t      if (arguments.length < 3) outerPadding = padding;\n\t      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = Math.floor((stop - start) / (domain.length - padding + 2 * outerPadding));\n\t      range = steps(start + Math.round((stop - start - (domain.length - padding) * step) / 2), step);\n\t      if (reverse) range.reverse();\n\t      rangeBand = Math.round(step * (1 - padding));\n\t      ranger = {\n\t        t: \"rangeRoundBands\",\n\t        a: arguments\n\t      };\n\t      return scale;\n\t    };\n\t    scale.rangeBand = function() {\n\t      return rangeBand;\n\t    };\n\t    scale.rangeExtent = function() {\n\t      return d3_scaleExtent(ranger.a[0]);\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_ordinal(domain, ranger);\n\t    };\n\t    return scale.domain(domain);\n\t  }\n\t  d3.scale.category10 = function() {\n\t    return d3.scale.ordinal().range(d3_category10);\n\t  };\n\t  d3.scale.category20 = function() {\n\t    return d3.scale.ordinal().range(d3_category20);\n\t  };\n\t  d3.scale.category20b = function() {\n\t    return d3.scale.ordinal().range(d3_category20b);\n\t  };\n\t  d3.scale.category20c = function() {\n\t    return d3.scale.ordinal().range(d3_category20c);\n\t  };\n\t  var d3_category10 = [ 2062260, 16744206, 2924588, 14034728, 9725885, 9197131, 14907330, 8355711, 12369186, 1556175 ].map(d3_rgbString);\n\t  var d3_category20 = [ 2062260, 11454440, 16744206, 16759672, 2924588, 10018698, 14034728, 16750742, 9725885, 12955861, 9197131, 12885140, 14907330, 16234194, 8355711, 13092807, 12369186, 14408589, 1556175, 10410725 ].map(d3_rgbString);\n\t  var d3_category20b = [ 3750777, 5395619, 7040719, 10264286, 6519097, 9216594, 11915115, 13556636, 9202993, 12426809, 15186514, 15190932, 8666169, 11356490, 14049643, 15177372, 8077683, 10834324, 13528509, 14589654 ].map(d3_rgbString);\n\t  var d3_category20c = [ 3244733, 7057110, 10406625, 13032431, 15095053, 16616764, 16625259, 16634018, 3253076, 7652470, 10607003, 13101504, 7695281, 10394312, 12369372, 14342891, 6513507, 9868950, 12434877, 14277081 ].map(d3_rgbString);\n\t  d3.scale.quantile = function() {\n\t    return d3_scale_quantile([], []);\n\t  };\n\t  function d3_scale_quantile(domain, range) {\n\t    var thresholds;\n\t    function rescale() {\n\t      var k = 0, q = range.length;\n\t      thresholds = [];\n\t      while (++k < q) thresholds[k - 1] = d3.quantile(domain, k / q);\n\t      return scale;\n\t    }\n\t    function scale(x) {\n\t      if (!isNaN(x = +x)) return range[d3.bisect(thresholds, x)];\n\t    }\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return domain;\n\t      domain = x.map(d3_number).filter(d3_numeric).sort(d3_ascending);\n\t      return rescale();\n\t    };\n\t    scale.range = function(x) {\n\t      if (!arguments.length) return range;\n\t      range = x;\n\t      return rescale();\n\t    };\n\t    scale.quantiles = function() {\n\t      return thresholds;\n\t    };\n\t    scale.invertExtent = function(y) {\n\t      y = range.indexOf(y);\n\t      return y < 0 ? [ NaN, NaN ] : [ y > 0 ? thresholds[y - 1] : domain[0], y < thresholds.length ? thresholds[y] : domain[domain.length - 1] ];\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_quantile(domain, range);\n\t    };\n\t    return rescale();\n\t  }\n\t  d3.scale.quantize = function() {\n\t    return d3_scale_quantize(0, 1, [ 0, 1 ]);\n\t  };\n\t  function d3_scale_quantize(x0, x1, range) {\n\t    var kx, i;\n\t    function scale(x) {\n\t      return range[Math.max(0, Math.min(i, Math.floor(kx * (x - x0))))];\n\t    }\n\t    function rescale() {\n\t      kx = range.length / (x1 - x0);\n\t      i = range.length - 1;\n\t      return scale;\n\t    }\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return [ x0, x1 ];\n\t      x0 = +x[0];\n\t      x1 = +x[x.length - 1];\n\t      return rescale();\n\t    };\n\t    scale.range = function(x) {\n\t      if (!arguments.length) return range;\n\t      range = x;\n\t      return rescale();\n\t    };\n\t    scale.invertExtent = function(y) {\n\t      y = range.indexOf(y);\n\t      y = y < 0 ? NaN : y / kx + x0;\n\t      return [ y, y + 1 / kx ];\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_quantize(x0, x1, range);\n\t    };\n\t    return rescale();\n\t  }\n\t  d3.scale.threshold = function() {\n\t    return d3_scale_threshold([ .5 ], [ 0, 1 ]);\n\t  };\n\t  function d3_scale_threshold(domain, range) {\n\t    function scale(x) {\n\t      if (x <= x) return range[d3.bisect(domain, x)];\n\t    }\n\t    scale.domain = function(_) {\n\t      if (!arguments.length) return domain;\n\t      domain = _;\n\t      return scale;\n\t    };\n\t    scale.range = function(_) {\n\t      if (!arguments.length) return range;\n\t      range = _;\n\t      return scale;\n\t    };\n\t    scale.invertExtent = function(y) {\n\t      y = range.indexOf(y);\n\t      return [ domain[y - 1], domain[y] ];\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_threshold(domain, range);\n\t    };\n\t    return scale;\n\t  }\n\t  d3.scale.identity = function() {\n\t    return d3_scale_identity([ 0, 1 ]);\n\t  };\n\t  function d3_scale_identity(domain) {\n\t    function identity(x) {\n\t      return +x;\n\t    }\n\t    identity.invert = identity;\n\t    identity.domain = identity.range = function(x) {\n\t      if (!arguments.length) return domain;\n\t      domain = x.map(identity);\n\t      return identity;\n\t    };\n\t    identity.ticks = function(m) {\n\t      return d3_scale_linearTicks(domain, m);\n\t    };\n\t    identity.tickFormat = function(m, format) {\n\t      return d3_scale_linearTickFormat(domain, m, format);\n\t    };\n\t    identity.copy = function() {\n\t      return d3_scale_identity(domain);\n\t    };\n\t    return identity;\n\t  }\n\t  d3.svg = {};\n\t  function d3_zero() {\n\t    return 0;\n\t  }\n\t  d3.svg.arc = function() {\n\t    var innerRadius = d3_svg_arcInnerRadius, outerRadius = d3_svg_arcOuterRadius, cornerRadius = d3_zero, padRadius = d3_svg_arcAuto, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle, padAngle = d3_svg_arcPadAngle;\n\t    function arc() {\n\t      var r0 = Math.max(0, +innerRadius.apply(this, arguments)), r1 = Math.max(0, +outerRadius.apply(this, arguments)), a0 = startAngle.apply(this, arguments) - halfπ, a1 = endAngle.apply(this, arguments) - halfπ, da = Math.abs(a1 - a0), cw = a0 > a1 ? 0 : 1;\n\t      if (r1 < r0) rc = r1, r1 = r0, r0 = rc;\n\t      if (da >= τε) return circleSegment(r1, cw) + (r0 ? circleSegment(r0, 1 - cw) : \"\") + \"Z\";\n\t      var rc, cr, rp, ap, p0 = 0, p1 = 0, x0, y0, x1, y1, x2, y2, x3, y3, path = [];\n\t      if (ap = (+padAngle.apply(this, arguments) || 0) / 2) {\n\t        rp = padRadius === d3_svg_arcAuto ? Math.sqrt(r0 * r0 + r1 * r1) : +padRadius.apply(this, arguments);\n\t        if (!cw) p1 *= -1;\n\t        if (r1) p1 = d3_asin(rp / r1 * Math.sin(ap));\n\t        if (r0) p0 = d3_asin(rp / r0 * Math.sin(ap));\n\t      }\n\t      if (r1) {\n\t        x0 = r1 * Math.cos(a0 + p1);\n\t        y0 = r1 * Math.sin(a0 + p1);\n\t        x1 = r1 * Math.cos(a1 - p1);\n\t        y1 = r1 * Math.sin(a1 - p1);\n\t        var l1 = Math.abs(a1 - a0 - 2 * p1) <= π ? 0 : 1;\n\t        if (p1 && d3_svg_arcSweep(x0, y0, x1, y1) === cw ^ l1) {\n\t          var h1 = (a0 + a1) / 2;\n\t          x0 = r1 * Math.cos(h1);\n\t          y0 = r1 * Math.sin(h1);\n\t          x1 = y1 = null;\n\t        }\n\t      } else {\n\t        x0 = y0 = 0;\n\t      }\n\t      if (r0) {\n\t        x2 = r0 * Math.cos(a1 - p0);\n\t        y2 = r0 * Math.sin(a1 - p0);\n\t        x3 = r0 * Math.cos(a0 + p0);\n\t        y3 = r0 * Math.sin(a0 + p0);\n\t        var l0 = Math.abs(a0 - a1 + 2 * p0) <= π ? 0 : 1;\n\t        if (p0 && d3_svg_arcSweep(x2, y2, x3, y3) === 1 - cw ^ l0) {\n\t          var h0 = (a0 + a1) / 2;\n\t          x2 = r0 * Math.cos(h0);\n\t          y2 = r0 * Math.sin(h0);\n\t          x3 = y3 = null;\n\t        }\n\t      } else {\n\t        x2 = y2 = 0;\n\t      }\n\t      if (da > ε && (rc = Math.min(Math.abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments))) > .001) {\n\t        cr = r0 < r1 ^ cw ? 0 : 1;\n\t        var rc1 = rc, rc0 = rc;\n\t        if (da < π) {\n\t          var oc = x3 == null ? [ x2, y2 ] : x1 == null ? [ x0, y0 ] : d3_geom_polygonIntersect([ x0, y0 ], [ x3, y3 ], [ x1, y1 ], [ x2, y2 ]), ax = x0 - oc[0], ay = y0 - oc[1], bx = x1 - oc[0], by = y1 - oc[1], kc = 1 / Math.sin(Math.acos((ax * bx + ay * by) / (Math.sqrt(ax * ax + ay * ay) * Math.sqrt(bx * bx + by * by))) / 2), lc = Math.sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n\t          rc0 = Math.min(rc, (r0 - lc) / (kc - 1));\n\t          rc1 = Math.min(rc, (r1 - lc) / (kc + 1));\n\t        }\n\t        if (x1 != null) {\n\t          var t30 = d3_svg_arcCornerTangents(x3 == null ? [ x2, y2 ] : [ x3, y3 ], [ x0, y0 ], r1, rc1, cw), t12 = d3_svg_arcCornerTangents([ x1, y1 ], [ x2, y2 ], r1, rc1, cw);\n\t          if (rc === rc1) {\n\t            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t30[1], \"A\", r1, \",\", r1, \" 0 \", 1 - cw ^ d3_svg_arcSweep(t30[1][0], t30[1][1], t12[1][0], t12[1][1]), \",\", cw, \" \", t12[1], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t12[0]);\n\t          } else {\n\t            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 1,\", cr, \" \", t12[0]);\n\t          }\n\t        } else {\n\t          path.push(\"M\", x0, \",\", y0);\n\t        }\n\t        if (x3 != null) {\n\t          var t03 = d3_svg_arcCornerTangents([ x0, y0 ], [ x3, y3 ], r0, -rc0, cw), t21 = d3_svg_arcCornerTangents([ x2, y2 ], x1 == null ? [ x0, y0 ] : [ x1, y1 ], r0, -rc0, cw);\n\t          if (rc === rc0) {\n\t            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t21[1], \"A\", r0, \",\", r0, \" 0 \", cw ^ d3_svg_arcSweep(t21[1][0], t21[1][1], t03[1][0], t03[1][1]), \",\", 1 - cw, \" \", t03[1], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\n\t          } else {\n\t            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\n\t          }\n\t        } else {\n\t          path.push(\"L\", x2, \",\", y2);\n\t        }\n\t      } else {\n\t        path.push(\"M\", x0, \",\", y0);\n\t        if (x1 != null) path.push(\"A\", r1, \",\", r1, \" 0 \", l1, \",\", cw, \" \", x1, \",\", y1);\n\t        path.push(\"L\", x2, \",\", y2);\n\t        if (x3 != null) path.push(\"A\", r0, \",\", r0, \" 0 \", l0, \",\", 1 - cw, \" \", x3, \",\", y3);\n\t      }\n\t      path.push(\"Z\");\n\t      return path.join(\"\");\n\t    }\n\t    function circleSegment(r1, cw) {\n\t      return \"M0,\" + r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + -r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + r1;\n\t    }\n\t    arc.innerRadius = function(v) {\n\t      if (!arguments.length) return innerRadius;\n\t      innerRadius = d3_functor(v);\n\t      return arc;\n\t    };\n\t    arc.outerRadius = function(v) {\n\t      if (!arguments.length) return outerRadius;\n\t      outerRadius = d3_functor(v);\n\t      return arc;\n\t    };\n\t    arc.cornerRadius = function(v) {\n\t      if (!arguments.length) return cornerRadius;\n\t      cornerRadius = d3_functor(v);\n\t      return arc;\n\t    };\n\t    arc.padRadius = function(v) {\n\t      if (!arguments.length) return padRadius;\n\t      padRadius = v == d3_svg_arcAuto ? d3_svg_arcAuto : d3_functor(v);\n\t      return arc;\n\t    };\n\t    arc.startAngle = function(v) {\n\t      if (!arguments.length) return startAngle;\n\t      startAngle = d3_functor(v);\n\t      return arc;\n\t    };\n\t    arc.endAngle = function(v) {\n\t      if (!arguments.length) return endAngle;\n\t      endAngle = d3_functor(v);\n\t      return arc;\n\t    };\n\t    arc.padAngle = function(v) {\n\t      if (!arguments.length) return padAngle;\n\t      padAngle = d3_functor(v);\n\t      return arc;\n\t    };\n\t    arc.centroid = function() {\n\t      var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2, a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - halfπ;\n\t      return [ Math.cos(a) * r, Math.sin(a) * r ];\n\t    };\n\t    return arc;\n\t  };\n\t  var d3_svg_arcAuto = \"auto\";\n\t  function d3_svg_arcInnerRadius(d) {\n\t    return d.innerRadius;\n\t  }\n\t  function d3_svg_arcOuterRadius(d) {\n\t    return d.outerRadius;\n\t  }\n\t  function d3_svg_arcStartAngle(d) {\n\t    return d.startAngle;\n\t  }\n\t  function d3_svg_arcEndAngle(d) {\n\t    return d.endAngle;\n\t  }\n\t  function d3_svg_arcPadAngle(d) {\n\t    return d && d.padAngle;\n\t  }\n\t  function d3_svg_arcSweep(x0, y0, x1, y1) {\n\t    return (x0 - x1) * y0 - (y0 - y1) * x0 > 0 ? 0 : 1;\n\t  }\n\t  function d3_svg_arcCornerTangents(p0, p1, r1, rc, cw) {\n\t    var x01 = p0[0] - p1[0], y01 = p0[1] - p1[1], lo = (cw ? rc : -rc) / Math.sqrt(x01 * x01 + y01 * y01), ox = lo * y01, oy = -lo * x01, x1 = p0[0] + ox, y1 = p0[1] + oy, x2 = p1[0] + ox, y2 = p1[1] + oy, x3 = (x1 + x2) / 2, y3 = (y1 + y2) / 2, dx = x2 - x1, dy = y2 - y1, d2 = dx * dx + dy * dy, r = r1 - rc, D = x1 * y2 - x2 * y1, d = (dy < 0 ? -1 : 1) * Math.sqrt(Math.max(0, r * r * d2 - D * D)), cx0 = (D * dy - dx * d) / d2, cy0 = (-D * dx - dy * d) / d2, cx1 = (D * dy + dx * d) / d2, cy1 = (-D * dx + dy * d) / d2, dx0 = cx0 - x3, dy0 = cy0 - y3, dx1 = cx1 - x3, dy1 = cy1 - y3;\n\t    if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n\t    return [ [ cx0 - ox, cy0 - oy ], [ cx0 * r1 / r, cy0 * r1 / r ] ];\n\t  }\n\t  function d3_svg_line(projection) {\n\t    var x = d3_geom_pointX, y = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, tension = .7;\n\t    function line(data) {\n\t      var segments = [], points = [], i = -1, n = data.length, d, fx = d3_functor(x), fy = d3_functor(y);\n\t      function segment() {\n\t        segments.push(\"M\", interpolate(projection(points), tension));\n\t      }\n\t      while (++i < n) {\n\t        if (defined.call(this, d = data[i], i)) {\n\t          points.push([ +fx.call(this, d, i), +fy.call(this, d, i) ]);\n\t        } else if (points.length) {\n\t          segment();\n\t          points = [];\n\t        }\n\t      }\n\t      if (points.length) segment();\n\t      return segments.length ? segments.join(\"\") : null;\n\t    }\n\t    line.x = function(_) {\n\t      if (!arguments.length) return x;\n\t      x = _;\n\t      return line;\n\t    };\n\t    line.y = function(_) {\n\t      if (!arguments.length) return y;\n\t      y = _;\n\t      return line;\n\t    };\n\t    line.defined = function(_) {\n\t      if (!arguments.length) return defined;\n\t      defined = _;\n\t      return line;\n\t    };\n\t    line.interpolate = function(_) {\n\t      if (!arguments.length) return interpolateKey;\n\t      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n\t      return line;\n\t    };\n\t    line.tension = function(_) {\n\t      if (!arguments.length) return tension;\n\t      tension = _;\n\t      return line;\n\t    };\n\t    return line;\n\t  }\n\t  d3.svg.line = function() {\n\t    return d3_svg_line(d3_identity);\n\t  };\n\t  var d3_svg_lineInterpolators = d3.map({\n\t    linear: d3_svg_lineLinear,\n\t    \"linear-closed\": d3_svg_lineLinearClosed,\n\t    step: d3_svg_lineStep,\n\t    \"step-before\": d3_svg_lineStepBefore,\n\t    \"step-after\": d3_svg_lineStepAfter,\n\t    basis: d3_svg_lineBasis,\n\t    \"basis-open\": d3_svg_lineBasisOpen,\n\t    \"basis-closed\": d3_svg_lineBasisClosed,\n\t    bundle: d3_svg_lineBundle,\n\t    cardinal: d3_svg_lineCardinal,\n\t    \"cardinal-open\": d3_svg_lineCardinalOpen,\n\t    \"cardinal-closed\": d3_svg_lineCardinalClosed,\n\t    monotone: d3_svg_lineMonotone\n\t  });\n\t  d3_svg_lineInterpolators.forEach(function(key, value) {\n\t    value.key = key;\n\t    value.closed = /-closed$/.test(key);\n\t  });\n\t  function d3_svg_lineLinear(points) {\n\t    return points.length > 1 ? points.join(\"L\") : points + \"Z\";\n\t  }\n\t  function d3_svg_lineLinearClosed(points) {\n\t    return points.join(\"L\") + \"Z\";\n\t  }\n\t  function d3_svg_lineStep(points) {\n\t    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n\t    while (++i < n) path.push(\"H\", (p[0] + (p = points[i])[0]) / 2, \"V\", p[1]);\n\t    if (n > 1) path.push(\"H\", p[0]);\n\t    return path.join(\"\");\n\t  }\n\t  function d3_svg_lineStepBefore(points) {\n\t    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n\t    while (++i < n) path.push(\"V\", (p = points[i])[1], \"H\", p[0]);\n\t    return path.join(\"\");\n\t  }\n\t  function d3_svg_lineStepAfter(points) {\n\t    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n\t    while (++i < n) path.push(\"H\", (p = points[i])[0], \"V\", p[1]);\n\t    return path.join(\"\");\n\t  }\n\t  function d3_svg_lineCardinalOpen(points, tension) {\n\t    return points.length < 4 ? d3_svg_lineLinear(points) : points[1] + d3_svg_lineHermite(points.slice(1, -1), d3_svg_lineCardinalTangents(points, tension));\n\t  }\n\t  function d3_svg_lineCardinalClosed(points, tension) {\n\t    return points.length < 3 ? d3_svg_lineLinearClosed(points) : points[0] + d3_svg_lineHermite((points.push(points[0]), \n\t    points), d3_svg_lineCardinalTangents([ points[points.length - 2] ].concat(points, [ points[1] ]), tension));\n\t  }\n\t  function d3_svg_lineCardinal(points, tension) {\n\t    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineCardinalTangents(points, tension));\n\t  }\n\t  function d3_svg_lineHermite(points, tangents) {\n\t    if (tangents.length < 1 || points.length != tangents.length && points.length != tangents.length + 2) {\n\t      return d3_svg_lineLinear(points);\n\t    }\n\t    var quad = points.length != tangents.length, path = \"\", p0 = points[0], p = points[1], t0 = tangents[0], t = t0, pi = 1;\n\t    if (quad) {\n\t      path += \"Q\" + (p[0] - t0[0] * 2 / 3) + \",\" + (p[1] - t0[1] * 2 / 3) + \",\" + p[0] + \",\" + p[1];\n\t      p0 = points[1];\n\t      pi = 2;\n\t    }\n\t    if (tangents.length > 1) {\n\t      t = tangents[1];\n\t      p = points[pi];\n\t      pi++;\n\t      path += \"C\" + (p0[0] + t0[0]) + \",\" + (p0[1] + t0[1]) + \",\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n\t      for (var i = 2; i < tangents.length; i++, pi++) {\n\t        p = points[pi];\n\t        t = tangents[i];\n\t        path += \"S\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n\t      }\n\t    }\n\t    if (quad) {\n\t      var lp = points[pi];\n\t      path += \"Q\" + (p[0] + t[0] * 2 / 3) + \",\" + (p[1] + t[1] * 2 / 3) + \",\" + lp[0] + \",\" + lp[1];\n\t    }\n\t    return path;\n\t  }\n\t  function d3_svg_lineCardinalTangents(points, tension) {\n\t    var tangents = [], a = (1 - tension) / 2, p0, p1 = points[0], p2 = points[1], i = 1, n = points.length;\n\t    while (++i < n) {\n\t      p0 = p1;\n\t      p1 = p2;\n\t      p2 = points[i];\n\t      tangents.push([ a * (p2[0] - p0[0]), a * (p2[1] - p0[1]) ]);\n\t    }\n\t    return tangents;\n\t  }\n\t  function d3_svg_lineBasis(points) {\n\t    if (points.length < 3) return d3_svg_lineLinear(points);\n\t    var i = 1, n = points.length, pi = points[0], x0 = pi[0], y0 = pi[1], px = [ x0, x0, x0, (pi = points[1])[0] ], py = [ y0, y0, y0, pi[1] ], path = [ x0, \",\", y0, \"L\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n\t    points.push(points[n - 1]);\n\t    while (++i <= n) {\n\t      pi = points[i];\n\t      px.shift();\n\t      px.push(pi[0]);\n\t      py.shift();\n\t      py.push(pi[1]);\n\t      d3_svg_lineBasisBezier(path, px, py);\n\t    }\n\t    points.pop();\n\t    path.push(\"L\", pi);\n\t    return path.join(\"\");\n\t  }\n\t  function d3_svg_lineBasisOpen(points) {\n\t    if (points.length < 4) return d3_svg_lineLinear(points);\n\t    var path = [], i = -1, n = points.length, pi, px = [ 0 ], py = [ 0 ];\n\t    while (++i < 3) {\n\t      pi = points[i];\n\t      px.push(pi[0]);\n\t      py.push(pi[1]);\n\t    }\n\t    path.push(d3_svg_lineDot4(d3_svg_lineBasisBezier3, px) + \",\" + d3_svg_lineDot4(d3_svg_lineBasisBezier3, py));\n\t    --i;\n\t    while (++i < n) {\n\t      pi = points[i];\n\t      px.shift();\n\t      px.push(pi[0]);\n\t      py.shift();\n\t      py.push(pi[1]);\n\t      d3_svg_lineBasisBezier(path, px, py);\n\t    }\n\t    return path.join(\"\");\n\t  }\n\t  function d3_svg_lineBasisClosed(points) {\n\t    var path, i = -1, n = points.length, m = n + 4, pi, px = [], py = [];\n\t    while (++i < 4) {\n\t      pi = points[i % n];\n\t      px.push(pi[0]);\n\t      py.push(pi[1]);\n\t    }\n\t    path = [ d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n\t    --i;\n\t    while (++i < m) {\n\t      pi = points[i % n];\n\t      px.shift();\n\t      px.push(pi[0]);\n\t      py.shift();\n\t      py.push(pi[1]);\n\t      d3_svg_lineBasisBezier(path, px, py);\n\t    }\n\t    return path.join(\"\");\n\t  }\n\t  function d3_svg_lineBundle(points, tension) {\n\t    var n = points.length - 1;\n\t    if (n) {\n\t      var x0 = points[0][0], y0 = points[0][1], dx = points[n][0] - x0, dy = points[n][1] - y0, i = -1, p, t;\n\t      while (++i <= n) {\n\t        p = points[i];\n\t        t = i / n;\n\t        p[0] = tension * p[0] + (1 - tension) * (x0 + t * dx);\n\t        p[1] = tension * p[1] + (1 - tension) * (y0 + t * dy);\n\t      }\n\t    }\n\t    return d3_svg_lineBasis(points);\n\t  }\n\t  function d3_svg_lineDot4(a, b) {\n\t    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n\t  }\n\t  var d3_svg_lineBasisBezier1 = [ 0, 2 / 3, 1 / 3, 0 ], d3_svg_lineBasisBezier2 = [ 0, 1 / 3, 2 / 3, 0 ], d3_svg_lineBasisBezier3 = [ 0, 1 / 6, 2 / 3, 1 / 6 ];\n\t  function d3_svg_lineBasisBezier(path, x, y) {\n\t    path.push(\"C\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, y));\n\t  }\n\t  function d3_svg_lineSlope(p0, p1) {\n\t    return (p1[1] - p0[1]) / (p1[0] - p0[0]);\n\t  }\n\t  function d3_svg_lineFiniteDifferences(points) {\n\t    var i = 0, j = points.length - 1, m = [], p0 = points[0], p1 = points[1], d = m[0] = d3_svg_lineSlope(p0, p1);\n\t    while (++i < j) {\n\t      m[i] = (d + (d = d3_svg_lineSlope(p0 = p1, p1 = points[i + 1]))) / 2;\n\t    }\n\t    m[i] = d;\n\t    return m;\n\t  }\n\t  function d3_svg_lineMonotoneTangents(points) {\n\t    var tangents = [], d, a, b, s, m = d3_svg_lineFiniteDifferences(points), i = -1, j = points.length - 1;\n\t    while (++i < j) {\n\t      d = d3_svg_lineSlope(points[i], points[i + 1]);\n\t      if (abs(d) < ε) {\n\t        m[i] = m[i + 1] = 0;\n\t      } else {\n\t        a = m[i] / d;\n\t        b = m[i + 1] / d;\n\t        s = a * a + b * b;\n\t        if (s > 9) {\n\t          s = d * 3 / Math.sqrt(s);\n\t          m[i] = s * a;\n\t          m[i + 1] = s * b;\n\t        }\n\t      }\n\t    }\n\t    i = -1;\n\t    while (++i <= j) {\n\t      s = (points[Math.min(j, i + 1)][0] - points[Math.max(0, i - 1)][0]) / (6 * (1 + m[i] * m[i]));\n\t      tangents.push([ s || 0, m[i] * s || 0 ]);\n\t    }\n\t    return tangents;\n\t  }\n\t  function d3_svg_lineMonotone(points) {\n\t    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineMonotoneTangents(points));\n\t  }\n\t  d3.svg.line.radial = function() {\n\t    var line = d3_svg_line(d3_svg_lineRadial);\n\t    line.radius = line.x, delete line.x;\n\t    line.angle = line.y, delete line.y;\n\t    return line;\n\t  };\n\t  function d3_svg_lineRadial(points) {\n\t    var point, i = -1, n = points.length, r, a;\n\t    while (++i < n) {\n\t      point = points[i];\n\t      r = point[0];\n\t      a = point[1] - halfπ;\n\t      point[0] = r * Math.cos(a);\n\t      point[1] = r * Math.sin(a);\n\t    }\n\t    return points;\n\t  }\n\t  function d3_svg_area(projection) {\n\t    var x0 = d3_geom_pointX, x1 = d3_geom_pointX, y0 = 0, y1 = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, interpolateReverse = interpolate, L = \"L\", tension = .7;\n\t    function area(data) {\n\t      var segments = [], points0 = [], points1 = [], i = -1, n = data.length, d, fx0 = d3_functor(x0), fy0 = d3_functor(y0), fx1 = x0 === x1 ? function() {\n\t        return x;\n\t      } : d3_functor(x1), fy1 = y0 === y1 ? function() {\n\t        return y;\n\t      } : d3_functor(y1), x, y;\n\t      function segment() {\n\t        segments.push(\"M\", interpolate(projection(points1), tension), L, interpolateReverse(projection(points0.reverse()), tension), \"Z\");\n\t      }\n\t      while (++i < n) {\n\t        if (defined.call(this, d = data[i], i)) {\n\t          points0.push([ x = +fx0.call(this, d, i), y = +fy0.call(this, d, i) ]);\n\t          points1.push([ +fx1.call(this, d, i), +fy1.call(this, d, i) ]);\n\t        } else if (points0.length) {\n\t          segment();\n\t          points0 = [];\n\t          points1 = [];\n\t        }\n\t      }\n\t      if (points0.length) segment();\n\t      return segments.length ? segments.join(\"\") : null;\n\t    }\n\t    area.x = function(_) {\n\t      if (!arguments.length) return x1;\n\t      x0 = x1 = _;\n\t      return area;\n\t    };\n\t    area.x0 = function(_) {\n\t      if (!arguments.length) return x0;\n\t      x0 = _;\n\t      return area;\n\t    };\n\t    area.x1 = function(_) {\n\t      if (!arguments.length) return x1;\n\t      x1 = _;\n\t      return area;\n\t    };\n\t    area.y = function(_) {\n\t      if (!arguments.length) return y1;\n\t      y0 = y1 = _;\n\t      return area;\n\t    };\n\t    area.y0 = function(_) {\n\t      if (!arguments.length) return y0;\n\t      y0 = _;\n\t      return area;\n\t    };\n\t    area.y1 = function(_) {\n\t      if (!arguments.length) return y1;\n\t      y1 = _;\n\t      return area;\n\t    };\n\t    area.defined = function(_) {\n\t      if (!arguments.length) return defined;\n\t      defined = _;\n\t      return area;\n\t    };\n\t    area.interpolate = function(_) {\n\t      if (!arguments.length) return interpolateKey;\n\t      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n\t      interpolateReverse = interpolate.reverse || interpolate;\n\t      L = interpolate.closed ? \"M\" : \"L\";\n\t      return area;\n\t    };\n\t    area.tension = function(_) {\n\t      if (!arguments.length) return tension;\n\t      tension = _;\n\t      return area;\n\t    };\n\t    return area;\n\t  }\n\t  d3_svg_lineStepBefore.reverse = d3_svg_lineStepAfter;\n\t  d3_svg_lineStepAfter.reverse = d3_svg_lineStepBefore;\n\t  d3.svg.area = function() {\n\t    return d3_svg_area(d3_identity);\n\t  };\n\t  d3.svg.area.radial = function() {\n\t    var area = d3_svg_area(d3_svg_lineRadial);\n\t    area.radius = area.x, delete area.x;\n\t    area.innerRadius = area.x0, delete area.x0;\n\t    area.outerRadius = area.x1, delete area.x1;\n\t    area.angle = area.y, delete area.y;\n\t    area.startAngle = area.y0, delete area.y0;\n\t    area.endAngle = area.y1, delete area.y1;\n\t    return area;\n\t  };\n\t  d3.svg.chord = function() {\n\t    var source = d3_source, target = d3_target, radius = d3_svg_chordRadius, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle;\n\t    function chord(d, i) {\n\t      var s = subgroup(this, source, d, i), t = subgroup(this, target, d, i);\n\t      return \"M\" + s.p0 + arc(s.r, s.p1, s.a1 - s.a0) + (equals(s, t) ? curve(s.r, s.p1, s.r, s.p0) : curve(s.r, s.p1, t.r, t.p0) + arc(t.r, t.p1, t.a1 - t.a0) + curve(t.r, t.p1, s.r, s.p0)) + \"Z\";\n\t    }\n\t    function subgroup(self, f, d, i) {\n\t      var subgroup = f.call(self, d, i), r = radius.call(self, subgroup, i), a0 = startAngle.call(self, subgroup, i) - halfπ, a1 = endAngle.call(self, subgroup, i) - halfπ;\n\t      return {\n\t        r: r,\n\t        a0: a0,\n\t        a1: a1,\n\t        p0: [ r * Math.cos(a0), r * Math.sin(a0) ],\n\t        p1: [ r * Math.cos(a1), r * Math.sin(a1) ]\n\t      };\n\t    }\n\t    function equals(a, b) {\n\t      return a.a0 == b.a0 && a.a1 == b.a1;\n\t    }\n\t    function arc(r, p, a) {\n\t      return \"A\" + r + \",\" + r + \" 0 \" + +(a > π) + \",1 \" + p;\n\t    }\n\t    function curve(r0, p0, r1, p1) {\n\t      return \"Q 0,0 \" + p1;\n\t    }\n\t    chord.radius = function(v) {\n\t      if (!arguments.length) return radius;\n\t      radius = d3_functor(v);\n\t      return chord;\n\t    };\n\t    chord.source = function(v) {\n\t      if (!arguments.length) return source;\n\t      source = d3_functor(v);\n\t      return chord;\n\t    };\n\t    chord.target = function(v) {\n\t      if (!arguments.length) return target;\n\t      target = d3_functor(v);\n\t      return chord;\n\t    };\n\t    chord.startAngle = function(v) {\n\t      if (!arguments.length) return startAngle;\n\t      startAngle = d3_functor(v);\n\t      return chord;\n\t    };\n\t    chord.endAngle = function(v) {\n\t      if (!arguments.length) return endAngle;\n\t      endAngle = d3_functor(v);\n\t      return chord;\n\t    };\n\t    return chord;\n\t  };\n\t  function d3_svg_chordRadius(d) {\n\t    return d.radius;\n\t  }\n\t  d3.svg.diagonal = function() {\n\t    var source = d3_source, target = d3_target, projection = d3_svg_diagonalProjection;\n\t    function diagonal(d, i) {\n\t      var p0 = source.call(this, d, i), p3 = target.call(this, d, i), m = (p0.y + p3.y) / 2, p = [ p0, {\n\t        x: p0.x,\n\t        y: m\n\t      }, {\n\t        x: p3.x,\n\t        y: m\n\t      }, p3 ];\n\t      p = p.map(projection);\n\t      return \"M\" + p[0] + \"C\" + p[1] + \" \" + p[2] + \" \" + p[3];\n\t    }\n\t    diagonal.source = function(x) {\n\t      if (!arguments.length) return source;\n\t      source = d3_functor(x);\n\t      return diagonal;\n\t    };\n\t    diagonal.target = function(x) {\n\t      if (!arguments.length) return target;\n\t      target = d3_functor(x);\n\t      return diagonal;\n\t    };\n\t    diagonal.projection = function(x) {\n\t      if (!arguments.length) return projection;\n\t      projection = x;\n\t      return diagonal;\n\t    };\n\t    return diagonal;\n\t  };\n\t  function d3_svg_diagonalProjection(d) {\n\t    return [ d.x, d.y ];\n\t  }\n\t  d3.svg.diagonal.radial = function() {\n\t    var diagonal = d3.svg.diagonal(), projection = d3_svg_diagonalProjection, projection_ = diagonal.projection;\n\t    diagonal.projection = function(x) {\n\t      return arguments.length ? projection_(d3_svg_diagonalRadialProjection(projection = x)) : projection;\n\t    };\n\t    return diagonal;\n\t  };\n\t  function d3_svg_diagonalRadialProjection(projection) {\n\t    return function() {\n\t      var d = projection.apply(this, arguments), r = d[0], a = d[1] - halfπ;\n\t      return [ r * Math.cos(a), r * Math.sin(a) ];\n\t    };\n\t  }\n\t  d3.svg.symbol = function() {\n\t    var type = d3_svg_symbolType, size = d3_svg_symbolSize;\n\t    function symbol(d, i) {\n\t      return (d3_svg_symbols.get(type.call(this, d, i)) || d3_svg_symbolCircle)(size.call(this, d, i));\n\t    }\n\t    symbol.type = function(x) {\n\t      if (!arguments.length) return type;\n\t      type = d3_functor(x);\n\t      return symbol;\n\t    };\n\t    symbol.size = function(x) {\n\t      if (!arguments.length) return size;\n\t      size = d3_functor(x);\n\t      return symbol;\n\t    };\n\t    return symbol;\n\t  };\n\t  function d3_svg_symbolSize() {\n\t    return 64;\n\t  }\n\t  function d3_svg_symbolType() {\n\t    return \"circle\";\n\t  }\n\t  function d3_svg_symbolCircle(size) {\n\t    var r = Math.sqrt(size / π);\n\t    return \"M0,\" + r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + -r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + r + \"Z\";\n\t  }\n\t  var d3_svg_symbols = d3.map({\n\t    circle: d3_svg_symbolCircle,\n\t    cross: function(size) {\n\t      var r = Math.sqrt(size / 5) / 2;\n\t      return \"M\" + -3 * r + \",\" + -r + \"H\" + -r + \"V\" + -3 * r + \"H\" + r + \"V\" + -r + \"H\" + 3 * r + \"V\" + r + \"H\" + r + \"V\" + 3 * r + \"H\" + -r + \"V\" + r + \"H\" + -3 * r + \"Z\";\n\t    },\n\t    diamond: function(size) {\n\t      var ry = Math.sqrt(size / (2 * d3_svg_symbolTan30)), rx = ry * d3_svg_symbolTan30;\n\t      return \"M0,\" + -ry + \"L\" + rx + \",0\" + \" 0,\" + ry + \" \" + -rx + \",0\" + \"Z\";\n\t    },\n\t    square: function(size) {\n\t      var r = Math.sqrt(size) / 2;\n\t      return \"M\" + -r + \",\" + -r + \"L\" + r + \",\" + -r + \" \" + r + \",\" + r + \" \" + -r + \",\" + r + \"Z\";\n\t    },\n\t    \"triangle-down\": function(size) {\n\t      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n\t      return \"M0,\" + ry + \"L\" + rx + \",\" + -ry + \" \" + -rx + \",\" + -ry + \"Z\";\n\t    },\n\t    \"triangle-up\": function(size) {\n\t      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n\t      return \"M0,\" + -ry + \"L\" + rx + \",\" + ry + \" \" + -rx + \",\" + ry + \"Z\";\n\t    }\n\t  });\n\t  d3.svg.symbolTypes = d3_svg_symbols.keys();\n\t  var d3_svg_symbolSqrt3 = Math.sqrt(3), d3_svg_symbolTan30 = Math.tan(30 * d3_radians);\n\t  d3_selectionPrototype.transition = function(name) {\n\t    var id = d3_transitionInheritId || ++d3_transitionId, ns = d3_transitionNamespace(name), subgroups = [], subgroup, node, transition = d3_transitionInherit || {\n\t      time: Date.now(),\n\t      ease: d3_ease_cubicInOut,\n\t      delay: 0,\n\t      duration: 250\n\t    };\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      subgroups.push(subgroup = []);\n\t      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n\t        if (node = group[i]) d3_transitionNode(node, i, ns, id, transition);\n\t        subgroup.push(node);\n\t      }\n\t    }\n\t    return d3_transition(subgroups, ns, id);\n\t  };\n\t  d3_selectionPrototype.interrupt = function(name) {\n\t    return this.each(name == null ? d3_selection_interrupt : d3_selection_interruptNS(d3_transitionNamespace(name)));\n\t  };\n\t  var d3_selection_interrupt = d3_selection_interruptNS(d3_transitionNamespace());\n\t  function d3_selection_interruptNS(ns) {\n\t    return function() {\n\t      var lock, activeId, active;\n\t      if ((lock = this[ns]) && (active = lock[activeId = lock.active])) {\n\t        active.timer.c = null;\n\t        active.timer.t = NaN;\n\t        if (--lock.count) delete lock[activeId]; else delete this[ns];\n\t        lock.active += .5;\n\t        active.event && active.event.interrupt.call(this, this.__data__, active.index);\n\t      }\n\t    };\n\t  }\n\t  function d3_transition(groups, ns, id) {\n\t    d3_subclass(groups, d3_transitionPrototype);\n\t    groups.namespace = ns;\n\t    groups.id = id;\n\t    return groups;\n\t  }\n\t  var d3_transitionPrototype = [], d3_transitionId = 0, d3_transitionInheritId, d3_transitionInherit;\n\t  d3_transitionPrototype.call = d3_selectionPrototype.call;\n\t  d3_transitionPrototype.empty = d3_selectionPrototype.empty;\n\t  d3_transitionPrototype.node = d3_selectionPrototype.node;\n\t  d3_transitionPrototype.size = d3_selectionPrototype.size;\n\t  d3.transition = function(selection, name) {\n\t    return selection && selection.transition ? d3_transitionInheritId ? selection.transition(name) : selection : d3.selection().transition(selection);\n\t  };\n\t  d3.transition.prototype = d3_transitionPrototype;\n\t  d3_transitionPrototype.select = function(selector) {\n\t    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnode, node;\n\t    selector = d3_selection_selector(selector);\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      subgroups.push(subgroup = []);\n\t      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n\t        if ((node = group[i]) && (subnode = selector.call(node, node.__data__, i, j))) {\n\t          if (\"__data__\" in node) subnode.__data__ = node.__data__;\n\t          d3_transitionNode(subnode, i, ns, id, node[ns][id]);\n\t          subgroup.push(subnode);\n\t        } else {\n\t          subgroup.push(null);\n\t        }\n\t      }\n\t    }\n\t    return d3_transition(subgroups, ns, id);\n\t  };\n\t  d3_transitionPrototype.selectAll = function(selector) {\n\t    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnodes, node, subnode, transition;\n\t    selector = d3_selection_selectorAll(selector);\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n\t        if (node = group[i]) {\n\t          transition = node[ns][id];\n\t          subnodes = selector.call(node, node.__data__, i, j);\n\t          subgroups.push(subgroup = []);\n\t          for (var k = -1, o = subnodes.length; ++k < o; ) {\n\t            if (subnode = subnodes[k]) d3_transitionNode(subnode, k, ns, id, transition);\n\t            subgroup.push(subnode);\n\t          }\n\t        }\n\t      }\n\t    }\n\t    return d3_transition(subgroups, ns, id);\n\t  };\n\t  d3_transitionPrototype.filter = function(filter) {\n\t    var subgroups = [], subgroup, group, node;\n\t    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n\t    for (var j = 0, m = this.length; j < m; j++) {\n\t      subgroups.push(subgroup = []);\n\t      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n\t        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n\t          subgroup.push(node);\n\t        }\n\t      }\n\t    }\n\t    return d3_transition(subgroups, this.namespace, this.id);\n\t  };\n\t  d3_transitionPrototype.tween = function(name, tween) {\n\t    var id = this.id, ns = this.namespace;\n\t    if (arguments.length < 2) return this.node()[ns][id].tween.get(name);\n\t    return d3_selection_each(this, tween == null ? function(node) {\n\t      node[ns][id].tween.remove(name);\n\t    } : function(node) {\n\t      node[ns][id].tween.set(name, tween);\n\t    });\n\t  };\n\t  function d3_transition_tween(groups, name, value, tween) {\n\t    var id = groups.id, ns = groups.namespace;\n\t    return d3_selection_each(groups, typeof value === \"function\" ? function(node, i, j) {\n\t      node[ns][id].tween.set(name, tween(value.call(node, node.__data__, i, j)));\n\t    } : (value = tween(value), function(node) {\n\t      node[ns][id].tween.set(name, value);\n\t    }));\n\t  }\n\t  d3_transitionPrototype.attr = function(nameNS, value) {\n\t    if (arguments.length < 2) {\n\t      for (value in nameNS) this.attr(value, nameNS[value]);\n\t      return this;\n\t    }\n\t    var interpolate = nameNS == \"transform\" ? d3_interpolateTransform : d3_interpolate, name = d3.ns.qualify(nameNS);\n\t    function attrNull() {\n\t      this.removeAttribute(name);\n\t    }\n\t    function attrNullNS() {\n\t      this.removeAttributeNS(name.space, name.local);\n\t    }\n\t    function attrTween(b) {\n\t      return b == null ? attrNull : (b += \"\", function() {\n\t        var a = this.getAttribute(name), i;\n\t        return a !== b && (i = interpolate(a, b), function(t) {\n\t          this.setAttribute(name, i(t));\n\t        });\n\t      });\n\t    }\n\t    function attrTweenNS(b) {\n\t      return b == null ? attrNullNS : (b += \"\", function() {\n\t        var a = this.getAttributeNS(name.space, name.local), i;\n\t        return a !== b && (i = interpolate(a, b), function(t) {\n\t          this.setAttributeNS(name.space, name.local, i(t));\n\t        });\n\t      });\n\t    }\n\t    return d3_transition_tween(this, \"attr.\" + nameNS, value, name.local ? attrTweenNS : attrTween);\n\t  };\n\t  d3_transitionPrototype.attrTween = function(nameNS, tween) {\n\t    var name = d3.ns.qualify(nameNS);\n\t    function attrTween(d, i) {\n\t      var f = tween.call(this, d, i, this.getAttribute(name));\n\t      return f && function(t) {\n\t        this.setAttribute(name, f(t));\n\t      };\n\t    }\n\t    function attrTweenNS(d, i) {\n\t      var f = tween.call(this, d, i, this.getAttributeNS(name.space, name.local));\n\t      return f && function(t) {\n\t        this.setAttributeNS(name.space, name.local, f(t));\n\t      };\n\t    }\n\t    return this.tween(\"attr.\" + nameNS, name.local ? attrTweenNS : attrTween);\n\t  };\n\t  d3_transitionPrototype.style = function(name, value, priority) {\n\t    var n = arguments.length;\n\t    if (n < 3) {\n\t      if (typeof name !== \"string\") {\n\t        if (n < 2) value = \"\";\n\t        for (priority in name) this.style(priority, name[priority], value);\n\t        return this;\n\t      }\n\t      priority = \"\";\n\t    }\n\t    function styleNull() {\n\t      this.style.removeProperty(name);\n\t    }\n\t    function styleString(b) {\n\t      return b == null ? styleNull : (b += \"\", function() {\n\t        var a = d3_window(this).getComputedStyle(this, null).getPropertyValue(name), i;\n\t        return a !== b && (i = d3_interpolate(a, b), function(t) {\n\t          this.style.setProperty(name, i(t), priority);\n\t        });\n\t      });\n\t    }\n\t    return d3_transition_tween(this, \"style.\" + name, value, styleString);\n\t  };\n\t  d3_transitionPrototype.styleTween = function(name, tween, priority) {\n\t    if (arguments.length < 3) priority = \"\";\n\t    function styleTween(d, i) {\n\t      var f = tween.call(this, d, i, d3_window(this).getComputedStyle(this, null).getPropertyValue(name));\n\t      return f && function(t) {\n\t        this.style.setProperty(name, f(t), priority);\n\t      };\n\t    }\n\t    return this.tween(\"style.\" + name, styleTween);\n\t  };\n\t  d3_transitionPrototype.text = function(value) {\n\t    return d3_transition_tween(this, \"text\", value, d3_transition_text);\n\t  };\n\t  function d3_transition_text(b) {\n\t    if (b == null) b = \"\";\n\t    return function() {\n\t      this.textContent = b;\n\t    };\n\t  }\n\t  d3_transitionPrototype.remove = function() {\n\t    var ns = this.namespace;\n\t    return this.each(\"end.transition\", function() {\n\t      var p;\n\t      if (this[ns].count < 2 && (p = this.parentNode)) p.removeChild(this);\n\t    });\n\t  };\n\t  d3_transitionPrototype.ease = function(value) {\n\t    var id = this.id, ns = this.namespace;\n\t    if (arguments.length < 1) return this.node()[ns][id].ease;\n\t    if (typeof value !== \"function\") value = d3.ease.apply(d3, arguments);\n\t    return d3_selection_each(this, function(node) {\n\t      node[ns][id].ease = value;\n\t    });\n\t  };\n\t  d3_transitionPrototype.delay = function(value) {\n\t    var id = this.id, ns = this.namespace;\n\t    if (arguments.length < 1) return this.node()[ns][id].delay;\n\t    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n\t      node[ns][id].delay = +value.call(node, node.__data__, i, j);\n\t    } : (value = +value, function(node) {\n\t      node[ns][id].delay = value;\n\t    }));\n\t  };\n\t  d3_transitionPrototype.duration = function(value) {\n\t    var id = this.id, ns = this.namespace;\n\t    if (arguments.length < 1) return this.node()[ns][id].duration;\n\t    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n\t      node[ns][id].duration = Math.max(1, value.call(node, node.__data__, i, j));\n\t    } : (value = Math.max(1, value), function(node) {\n\t      node[ns][id].duration = value;\n\t    }));\n\t  };\n\t  d3_transitionPrototype.each = function(type, listener) {\n\t    var id = this.id, ns = this.namespace;\n\t    if (arguments.length < 2) {\n\t      var inherit = d3_transitionInherit, inheritId = d3_transitionInheritId;\n\t      try {\n\t        d3_transitionInheritId = id;\n\t        d3_selection_each(this, function(node, i, j) {\n\t          d3_transitionInherit = node[ns][id];\n\t          type.call(node, node.__data__, i, j);\n\t        });\n\t      } finally {\n\t        d3_transitionInherit = inherit;\n\t        d3_transitionInheritId = inheritId;\n\t      }\n\t    } else {\n\t      d3_selection_each(this, function(node) {\n\t        var transition = node[ns][id];\n\t        (transition.event || (transition.event = d3.dispatch(\"start\", \"end\", \"interrupt\"))).on(type, listener);\n\t      });\n\t    }\n\t    return this;\n\t  };\n\t  d3_transitionPrototype.transition = function() {\n\t    var id0 = this.id, id1 = ++d3_transitionId, ns = this.namespace, subgroups = [], subgroup, group, node, transition;\n\t    for (var j = 0, m = this.length; j < m; j++) {\n\t      subgroups.push(subgroup = []);\n\t      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n\t        if (node = group[i]) {\n\t          transition = node[ns][id0];\n\t          d3_transitionNode(node, i, ns, id1, {\n\t            time: transition.time,\n\t            ease: transition.ease,\n\t            delay: transition.delay + transition.duration,\n\t            duration: transition.duration\n\t          });\n\t        }\n\t        subgroup.push(node);\n\t      }\n\t    }\n\t    return d3_transition(subgroups, ns, id1);\n\t  };\n\t  function d3_transitionNamespace(name) {\n\t    return name == null ? \"__transition__\" : \"__transition_\" + name + \"__\";\n\t  }\n\t  function d3_transitionNode(node, i, ns, id, inherit) {\n\t    var lock = node[ns] || (node[ns] = {\n\t      active: 0,\n\t      count: 0\n\t    }), transition = lock[id], time, timer, duration, ease, tweens;\n\t    function schedule(elapsed) {\n\t      var delay = transition.delay;\n\t      timer.t = delay + time;\n\t      if (delay <= elapsed) return start(elapsed - delay);\n\t      timer.c = start;\n\t    }\n\t    function start(elapsed) {\n\t      var activeId = lock.active, active = lock[activeId];\n\t      if (active) {\n\t        active.timer.c = null;\n\t        active.timer.t = NaN;\n\t        --lock.count;\n\t        delete lock[activeId];\n\t        active.event && active.event.interrupt.call(node, node.__data__, active.index);\n\t      }\n\t      for (var cancelId in lock) {\n\t        if (+cancelId < id) {\n\t          var cancel = lock[cancelId];\n\t          cancel.timer.c = null;\n\t          cancel.timer.t = NaN;\n\t          --lock.count;\n\t          delete lock[cancelId];\n\t        }\n\t      }\n\t      timer.c = tick;\n\t      d3_timer(function() {\n\t        if (timer.c && tick(elapsed || 1)) {\n\t          timer.c = null;\n\t          timer.t = NaN;\n\t        }\n\t        return 1;\n\t      }, 0, time);\n\t      lock.active = id;\n\t      transition.event && transition.event.start.call(node, node.__data__, i);\n\t      tweens = [];\n\t      transition.tween.forEach(function(key, value) {\n\t        if (value = value.call(node, node.__data__, i)) {\n\t          tweens.push(value);\n\t        }\n\t      });\n\t      ease = transition.ease;\n\t      duration = transition.duration;\n\t    }\n\t    function tick(elapsed) {\n\t      var t = elapsed / duration, e = ease(t), n = tweens.length;\n\t      while (n > 0) {\n\t        tweens[--n].call(node, e);\n\t      }\n\t      if (t >= 1) {\n\t        transition.event && transition.event.end.call(node, node.__data__, i);\n\t        if (--lock.count) delete lock[id]; else delete node[ns];\n\t        return 1;\n\t      }\n\t    }\n\t    if (!transition) {\n\t      time = inherit.time;\n\t      timer = d3_timer(schedule, 0, time);\n\t      transition = lock[id] = {\n\t        tween: new d3_Map(),\n\t        time: time,\n\t        timer: timer,\n\t        delay: inherit.delay,\n\t        duration: inherit.duration,\n\t        ease: inherit.ease,\n\t        index: i\n\t      };\n\t      inherit = null;\n\t      ++lock.count;\n\t    }\n\t  }\n\t  d3.svg.axis = function() {\n\t    var scale = d3.scale.linear(), orient = d3_svg_axisDefaultOrient, innerTickSize = 6, outerTickSize = 6, tickPadding = 3, tickArguments_ = [ 10 ], tickValues = null, tickFormat_;\n\t    function axis(g) {\n\t      g.each(function() {\n\t        var g = d3.select(this);\n\t        var scale0 = this.__chart__ || scale, scale1 = this.__chart__ = scale.copy();\n\t        var ticks = tickValues == null ? scale1.ticks ? scale1.ticks.apply(scale1, tickArguments_) : scale1.domain() : tickValues, tickFormat = tickFormat_ == null ? scale1.tickFormat ? scale1.tickFormat.apply(scale1, tickArguments_) : d3_identity : tickFormat_, tick = g.selectAll(\".tick\").data(ticks, scale1), tickEnter = tick.enter().insert(\"g\", \".domain\").attr(\"class\", \"tick\").style(\"opacity\", ε), tickExit = d3.transition(tick.exit()).style(\"opacity\", ε).remove(), tickUpdate = d3.transition(tick.order()).style(\"opacity\", 1), tickSpacing = Math.max(innerTickSize, 0) + tickPadding, tickTransform;\n\t        var range = d3_scaleRange(scale1), path = g.selectAll(\".domain\").data([ 0 ]), pathUpdate = (path.enter().append(\"path\").attr(\"class\", \"domain\"), \n\t        d3.transition(path));\n\t        tickEnter.append(\"line\");\n\t        tickEnter.append(\"text\");\n\t        var lineEnter = tickEnter.select(\"line\"), lineUpdate = tickUpdate.select(\"line\"), text = tick.select(\"text\").text(tickFormat), textEnter = tickEnter.select(\"text\"), textUpdate = tickUpdate.select(\"text\"), sign = orient === \"top\" || orient === \"left\" ? -1 : 1, x1, x2, y1, y2;\n\t        if (orient === \"bottom\" || orient === \"top\") {\n\t          tickTransform = d3_svg_axisX, x1 = \"x\", y1 = \"y\", x2 = \"x2\", y2 = \"y2\";\n\t          text.attr(\"dy\", sign < 0 ? \"0em\" : \".71em\").style(\"text-anchor\", \"middle\");\n\t          pathUpdate.attr(\"d\", \"M\" + range[0] + \",\" + sign * outerTickSize + \"V0H\" + range[1] + \"V\" + sign * outerTickSize);\n\t        } else {\n\t          tickTransform = d3_svg_axisY, x1 = \"y\", y1 = \"x\", x2 = \"y2\", y2 = \"x2\";\n\t          text.attr(\"dy\", \".32em\").style(\"text-anchor\", sign < 0 ? \"end\" : \"start\");\n\t          pathUpdate.attr(\"d\", \"M\" + sign * outerTickSize + \",\" + range[0] + \"H0V\" + range[1] + \"H\" + sign * outerTickSize);\n\t        }\n\t        lineEnter.attr(y2, sign * innerTickSize);\n\t        textEnter.attr(y1, sign * tickSpacing);\n\t        lineUpdate.attr(x2, 0).attr(y2, sign * innerTickSize);\n\t        textUpdate.attr(x1, 0).attr(y1, sign * tickSpacing);\n\t        if (scale1.rangeBand) {\n\t          var x = scale1, dx = x.rangeBand() / 2;\n\t          scale0 = scale1 = function(d) {\n\t            return x(d) + dx;\n\t          };\n\t        } else if (scale0.rangeBand) {\n\t          scale0 = scale1;\n\t        } else {\n\t          tickExit.call(tickTransform, scale1, scale0);\n\t        }\n\t        tickEnter.call(tickTransform, scale0, scale1);\n\t        tickUpdate.call(tickTransform, scale1, scale1);\n\t      });\n\t    }\n\t    axis.scale = function(x) {\n\t      if (!arguments.length) return scale;\n\t      scale = x;\n\t      return axis;\n\t    };\n\t    axis.orient = function(x) {\n\t      if (!arguments.length) return orient;\n\t      orient = x in d3_svg_axisOrients ? x + \"\" : d3_svg_axisDefaultOrient;\n\t      return axis;\n\t    };\n\t    axis.ticks = function() {\n\t      if (!arguments.length) return tickArguments_;\n\t      tickArguments_ = d3_array(arguments);\n\t      return axis;\n\t    };\n\t    axis.tickValues = function(x) {\n\t      if (!arguments.length) return tickValues;\n\t      tickValues = x;\n\t      return axis;\n\t    };\n\t    axis.tickFormat = function(x) {\n\t      if (!arguments.length) return tickFormat_;\n\t      tickFormat_ = x;\n\t      return axis;\n\t    };\n\t    axis.tickSize = function(x) {\n\t      var n = arguments.length;\n\t      if (!n) return innerTickSize;\n\t      innerTickSize = +x;\n\t      outerTickSize = +arguments[n - 1];\n\t      return axis;\n\t    };\n\t    axis.innerTickSize = function(x) {\n\t      if (!arguments.length) return innerTickSize;\n\t      innerTickSize = +x;\n\t      return axis;\n\t    };\n\t    axis.outerTickSize = function(x) {\n\t      if (!arguments.length) return outerTickSize;\n\t      outerTickSize = +x;\n\t      return axis;\n\t    };\n\t    axis.tickPadding = function(x) {\n\t      if (!arguments.length) return tickPadding;\n\t      tickPadding = +x;\n\t      return axis;\n\t    };\n\t    axis.tickSubdivide = function() {\n\t      return arguments.length && axis;\n\t    };\n\t    return axis;\n\t  };\n\t  var d3_svg_axisDefaultOrient = \"bottom\", d3_svg_axisOrients = {\n\t    top: 1,\n\t    right: 1,\n\t    bottom: 1,\n\t    left: 1\n\t  };\n\t  function d3_svg_axisX(selection, x0, x1) {\n\t    selection.attr(\"transform\", function(d) {\n\t      var v0 = x0(d);\n\t      return \"translate(\" + (isFinite(v0) ? v0 : x1(d)) + \",0)\";\n\t    });\n\t  }\n\t  function d3_svg_axisY(selection, y0, y1) {\n\t    selection.attr(\"transform\", function(d) {\n\t      var v0 = y0(d);\n\t      return \"translate(0,\" + (isFinite(v0) ? v0 : y1(d)) + \")\";\n\t    });\n\t  }\n\t  d3.svg.brush = function() {\n\t    var event = d3_eventDispatch(brush, \"brushstart\", \"brush\", \"brushend\"), x = null, y = null, xExtent = [ 0, 0 ], yExtent = [ 0, 0 ], xExtentDomain, yExtentDomain, xClamp = true, yClamp = true, resizes = d3_svg_brushResizes[0];\n\t    function brush(g) {\n\t      g.each(function() {\n\t        var g = d3.select(this).style(\"pointer-events\", \"all\").style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\").on(\"mousedown.brush\", brushstart).on(\"touchstart.brush\", brushstart);\n\t        var background = g.selectAll(\".background\").data([ 0 ]);\n\t        background.enter().append(\"rect\").attr(\"class\", \"background\").style(\"visibility\", \"hidden\").style(\"cursor\", \"crosshair\");\n\t        g.selectAll(\".extent\").data([ 0 ]).enter().append(\"rect\").attr(\"class\", \"extent\").style(\"cursor\", \"move\");\n\t        var resize = g.selectAll(\".resize\").data(resizes, d3_identity);\n\t        resize.exit().remove();\n\t        resize.enter().append(\"g\").attr(\"class\", function(d) {\n\t          return \"resize \" + d;\n\t        }).style(\"cursor\", function(d) {\n\t          return d3_svg_brushCursor[d];\n\t        }).append(\"rect\").attr(\"x\", function(d) {\n\t          return /[ew]$/.test(d) ? -3 : null;\n\t        }).attr(\"y\", function(d) {\n\t          return /^[ns]/.test(d) ? -3 : null;\n\t        }).attr(\"width\", 6).attr(\"height\", 6).style(\"visibility\", \"hidden\");\n\t        resize.style(\"display\", brush.empty() ? \"none\" : null);\n\t        var gUpdate = d3.transition(g), backgroundUpdate = d3.transition(background), range;\n\t        if (x) {\n\t          range = d3_scaleRange(x);\n\t          backgroundUpdate.attr(\"x\", range[0]).attr(\"width\", range[1] - range[0]);\n\t          redrawX(gUpdate);\n\t        }\n\t        if (y) {\n\t          range = d3_scaleRange(y);\n\t          backgroundUpdate.attr(\"y\", range[0]).attr(\"height\", range[1] - range[0]);\n\t          redrawY(gUpdate);\n\t        }\n\t        redraw(gUpdate);\n\t      });\n\t    }\n\t    brush.event = function(g) {\n\t      g.each(function() {\n\t        var event_ = event.of(this, arguments), extent1 = {\n\t          x: xExtent,\n\t          y: yExtent,\n\t          i: xExtentDomain,\n\t          j: yExtentDomain\n\t        }, extent0 = this.__chart__ || extent1;\n\t        this.__chart__ = extent1;\n\t        if (d3_transitionInheritId) {\n\t          d3.select(this).transition().each(\"start.brush\", function() {\n\t            xExtentDomain = extent0.i;\n\t            yExtentDomain = extent0.j;\n\t            xExtent = extent0.x;\n\t            yExtent = extent0.y;\n\t            event_({\n\t              type: \"brushstart\"\n\t            });\n\t          }).tween(\"brush:brush\", function() {\n\t            var xi = d3_interpolateArray(xExtent, extent1.x), yi = d3_interpolateArray(yExtent, extent1.y);\n\t            xExtentDomain = yExtentDomain = null;\n\t            return function(t) {\n\t              xExtent = extent1.x = xi(t);\n\t              yExtent = extent1.y = yi(t);\n\t              event_({\n\t                type: \"brush\",\n\t                mode: \"resize\"\n\t              });\n\t            };\n\t          }).each(\"end.brush\", function() {\n\t            xExtentDomain = extent1.i;\n\t            yExtentDomain = extent1.j;\n\t            event_({\n\t              type: \"brush\",\n\t              mode: \"resize\"\n\t            });\n\t            event_({\n\t              type: \"brushend\"\n\t            });\n\t          });\n\t        } else {\n\t          event_({\n\t            type: \"brushstart\"\n\t          });\n\t          event_({\n\t            type: \"brush\",\n\t            mode: \"resize\"\n\t          });\n\t          event_({\n\t            type: \"brushend\"\n\t          });\n\t        }\n\t      });\n\t    };\n\t    function redraw(g) {\n\t      g.selectAll(\".resize\").attr(\"transform\", function(d) {\n\t        return \"translate(\" + xExtent[+/e$/.test(d)] + \",\" + yExtent[+/^s/.test(d)] + \")\";\n\t      });\n\t    }\n\t    function redrawX(g) {\n\t      g.select(\".extent\").attr(\"x\", xExtent[0]);\n\t      g.selectAll(\".extent,.n>rect,.s>rect\").attr(\"width\", xExtent[1] - xExtent[0]);\n\t    }\n\t    function redrawY(g) {\n\t      g.select(\".extent\").attr(\"y\", yExtent[0]);\n\t      g.selectAll(\".extent,.e>rect,.w>rect\").attr(\"height\", yExtent[1] - yExtent[0]);\n\t    }\n\t    function brushstart() {\n\t      var target = this, eventTarget = d3.select(d3.event.target), event_ = event.of(target, arguments), g = d3.select(target), resizing = eventTarget.datum(), resizingX = !/^(n|s)$/.test(resizing) && x, resizingY = !/^(e|w)$/.test(resizing) && y, dragging = eventTarget.classed(\"extent\"), dragRestore = d3_event_dragSuppress(target), center, origin = d3.mouse(target), offset;\n\t      var w = d3.select(d3_window(target)).on(\"keydown.brush\", keydown).on(\"keyup.brush\", keyup);\n\t      if (d3.event.changedTouches) {\n\t        w.on(\"touchmove.brush\", brushmove).on(\"touchend.brush\", brushend);\n\t      } else {\n\t        w.on(\"mousemove.brush\", brushmove).on(\"mouseup.brush\", brushend);\n\t      }\n\t      g.interrupt().selectAll(\"*\").interrupt();\n\t      if (dragging) {\n\t        origin[0] = xExtent[0] - origin[0];\n\t        origin[1] = yExtent[0] - origin[1];\n\t      } else if (resizing) {\n\t        var ex = +/w$/.test(resizing), ey = +/^n/.test(resizing);\n\t        offset = [ xExtent[1 - ex] - origin[0], yExtent[1 - ey] - origin[1] ];\n\t        origin[0] = xExtent[ex];\n\t        origin[1] = yExtent[ey];\n\t      } else if (d3.event.altKey) center = origin.slice();\n\t      g.style(\"pointer-events\", \"none\").selectAll(\".resize\").style(\"display\", null);\n\t      d3.select(\"body\").style(\"cursor\", eventTarget.style(\"cursor\"));\n\t      event_({\n\t        type: \"brushstart\"\n\t      });\n\t      brushmove();\n\t      function keydown() {\n\t        if (d3.event.keyCode == 32) {\n\t          if (!dragging) {\n\t            center = null;\n\t            origin[0] -= xExtent[1];\n\t            origin[1] -= yExtent[1];\n\t            dragging = 2;\n\t          }\n\t          d3_eventPreventDefault();\n\t        }\n\t      }\n\t      function keyup() {\n\t        if (d3.event.keyCode == 32 && dragging == 2) {\n\t          origin[0] += xExtent[1];\n\t          origin[1] += yExtent[1];\n\t          dragging = 0;\n\t          d3_eventPreventDefault();\n\t        }\n\t      }\n\t      function brushmove() {\n\t        var point = d3.mouse(target), moved = false;\n\t        if (offset) {\n\t          point[0] += offset[0];\n\t          point[1] += offset[1];\n\t        }\n\t        if (!dragging) {\n\t          if (d3.event.altKey) {\n\t            if (!center) center = [ (xExtent[0] + xExtent[1]) / 2, (yExtent[0] + yExtent[1]) / 2 ];\n\t            origin[0] = xExtent[+(point[0] < center[0])];\n\t            origin[1] = yExtent[+(point[1] < center[1])];\n\t          } else center = null;\n\t        }\n\t        if (resizingX && move1(point, x, 0)) {\n\t          redrawX(g);\n\t          moved = true;\n\t        }\n\t        if (resizingY && move1(point, y, 1)) {\n\t          redrawY(g);\n\t          moved = true;\n\t        }\n\t        if (moved) {\n\t          redraw(g);\n\t          event_({\n\t            type: \"brush\",\n\t            mode: dragging ? \"move\" : \"resize\"\n\t          });\n\t        }\n\t      }\n\t      function move1(point, scale, i) {\n\t        var range = d3_scaleRange(scale), r0 = range[0], r1 = range[1], position = origin[i], extent = i ? yExtent : xExtent, size = extent[1] - extent[0], min, max;\n\t        if (dragging) {\n\t          r0 -= position;\n\t          r1 -= size + position;\n\t        }\n\t        min = (i ? yClamp : xClamp) ? Math.max(r0, Math.min(r1, point[i])) : point[i];\n\t        if (dragging) {\n\t          max = (min += position) + size;\n\t        } else {\n\t          if (center) position = Math.max(r0, Math.min(r1, 2 * center[i] - min));\n\t          if (position < min) {\n\t            max = min;\n\t            min = position;\n\t          } else {\n\t            max = position;\n\t          }\n\t        }\n\t        if (extent[0] != min || extent[1] != max) {\n\t          if (i) yExtentDomain = null; else xExtentDomain = null;\n\t          extent[0] = min;\n\t          extent[1] = max;\n\t          return true;\n\t        }\n\t      }\n\t      function brushend() {\n\t        brushmove();\n\t        g.style(\"pointer-events\", \"all\").selectAll(\".resize\").style(\"display\", brush.empty() ? \"none\" : null);\n\t        d3.select(\"body\").style(\"cursor\", null);\n\t        w.on(\"mousemove.brush\", null).on(\"mouseup.brush\", null).on(\"touchmove.brush\", null).on(\"touchend.brush\", null).on(\"keydown.brush\", null).on(\"keyup.brush\", null);\n\t        dragRestore();\n\t        event_({\n\t          type: \"brushend\"\n\t        });\n\t      }\n\t    }\n\t    brush.x = function(z) {\n\t      if (!arguments.length) return x;\n\t      x = z;\n\t      resizes = d3_svg_brushResizes[!x << 1 | !y];\n\t      return brush;\n\t    };\n\t    brush.y = function(z) {\n\t      if (!arguments.length) return y;\n\t      y = z;\n\t      resizes = d3_svg_brushResizes[!x << 1 | !y];\n\t      return brush;\n\t    };\n\t    brush.clamp = function(z) {\n\t      if (!arguments.length) return x && y ? [ xClamp, yClamp ] : x ? xClamp : y ? yClamp : null;\n\t      if (x && y) xClamp = !!z[0], yClamp = !!z[1]; else if (x) xClamp = !!z; else if (y) yClamp = !!z;\n\t      return brush;\n\t    };\n\t    brush.extent = function(z) {\n\t      var x0, x1, y0, y1, t;\n\t      if (!arguments.length) {\n\t        if (x) {\n\t          if (xExtentDomain) {\n\t            x0 = xExtentDomain[0], x1 = xExtentDomain[1];\n\t          } else {\n\t            x0 = xExtent[0], x1 = xExtent[1];\n\t            if (x.invert) x0 = x.invert(x0), x1 = x.invert(x1);\n\t            if (x1 < x0) t = x0, x0 = x1, x1 = t;\n\t          }\n\t        }\n\t        if (y) {\n\t          if (yExtentDomain) {\n\t            y0 = yExtentDomain[0], y1 = yExtentDomain[1];\n\t          } else {\n\t            y0 = yExtent[0], y1 = yExtent[1];\n\t            if (y.invert) y0 = y.invert(y0), y1 = y.invert(y1);\n\t            if (y1 < y0) t = y0, y0 = y1, y1 = t;\n\t          }\n\t        }\n\t        return x && y ? [ [ x0, y0 ], [ x1, y1 ] ] : x ? [ x0, x1 ] : y && [ y0, y1 ];\n\t      }\n\t      if (x) {\n\t        x0 = z[0], x1 = z[1];\n\t        if (y) x0 = x0[0], x1 = x1[0];\n\t        xExtentDomain = [ x0, x1 ];\n\t        if (x.invert) x0 = x(x0), x1 = x(x1);\n\t        if (x1 < x0) t = x0, x0 = x1, x1 = t;\n\t        if (x0 != xExtent[0] || x1 != xExtent[1]) xExtent = [ x0, x1 ];\n\t      }\n\t      if (y) {\n\t        y0 = z[0], y1 = z[1];\n\t        if (x) y0 = y0[1], y1 = y1[1];\n\t        yExtentDomain = [ y0, y1 ];\n\t        if (y.invert) y0 = y(y0), y1 = y(y1);\n\t        if (y1 < y0) t = y0, y0 = y1, y1 = t;\n\t        if (y0 != yExtent[0] || y1 != yExtent[1]) yExtent = [ y0, y1 ];\n\t      }\n\t      return brush;\n\t    };\n\t    brush.clear = function() {\n\t      if (!brush.empty()) {\n\t        xExtent = [ 0, 0 ], yExtent = [ 0, 0 ];\n\t        xExtentDomain = yExtentDomain = null;\n\t      }\n\t      return brush;\n\t    };\n\t    brush.empty = function() {\n\t      return !!x && xExtent[0] == xExtent[1] || !!y && yExtent[0] == yExtent[1];\n\t    };\n\t    return d3.rebind(brush, event, \"on\");\n\t  };\n\t  var d3_svg_brushCursor = {\n\t    n: \"ns-resize\",\n\t    e: \"ew-resize\",\n\t    s: \"ns-resize\",\n\t    w: \"ew-resize\",\n\t    nw: \"nwse-resize\",\n\t    ne: \"nesw-resize\",\n\t    se: \"nwse-resize\",\n\t    sw: \"nesw-resize\"\n\t  };\n\t  var d3_svg_brushResizes = [ [ \"n\", \"e\", \"s\", \"w\", \"nw\", \"ne\", \"se\", \"sw\" ], [ \"e\", \"w\" ], [ \"n\", \"s\" ], [] ];\n\t  var d3_time_format = d3_time.format = d3_locale_enUS.timeFormat;\n\t  var d3_time_formatUtc = d3_time_format.utc;\n\t  var d3_time_formatIso = d3_time_formatUtc(\"%Y-%m-%dT%H:%M:%S.%LZ\");\n\t  d3_time_format.iso = Date.prototype.toISOString && +new Date(\"2000-01-01T00:00:00.000Z\") ? d3_time_formatIsoNative : d3_time_formatIso;\n\t  function d3_time_formatIsoNative(date) {\n\t    return date.toISOString();\n\t  }\n\t  d3_time_formatIsoNative.parse = function(string) {\n\t    var date = new Date(string);\n\t    return isNaN(date) ? null : date;\n\t  };\n\t  d3_time_formatIsoNative.toString = d3_time_formatIso.toString;\n\t  d3_time.second = d3_time_interval(function(date) {\n\t    return new d3_date(Math.floor(date / 1e3) * 1e3);\n\t  }, function(date, offset) {\n\t    date.setTime(date.getTime() + Math.floor(offset) * 1e3);\n\t  }, function(date) {\n\t    return date.getSeconds();\n\t  });\n\t  d3_time.seconds = d3_time.second.range;\n\t  d3_time.seconds.utc = d3_time.second.utc.range;\n\t  d3_time.minute = d3_time_interval(function(date) {\n\t    return new d3_date(Math.floor(date / 6e4) * 6e4);\n\t  }, function(date, offset) {\n\t    date.setTime(date.getTime() + Math.floor(offset) * 6e4);\n\t  }, function(date) {\n\t    return date.getMinutes();\n\t  });\n\t  d3_time.minutes = d3_time.minute.range;\n\t  d3_time.minutes.utc = d3_time.minute.utc.range;\n\t  d3_time.hour = d3_time_interval(function(date) {\n\t    var timezone = date.getTimezoneOffset() / 60;\n\t    return new d3_date((Math.floor(date / 36e5 - timezone) + timezone) * 36e5);\n\t  }, function(date, offset) {\n\t    date.setTime(date.getTime() + Math.floor(offset) * 36e5);\n\t  }, function(date) {\n\t    return date.getHours();\n\t  });\n\t  d3_time.hours = d3_time.hour.range;\n\t  d3_time.hours.utc = d3_time.hour.utc.range;\n\t  d3_time.month = d3_time_interval(function(date) {\n\t    date = d3_time.day(date);\n\t    date.setDate(1);\n\t    return date;\n\t  }, function(date, offset) {\n\t    date.setMonth(date.getMonth() + offset);\n\t  }, function(date) {\n\t    return date.getMonth();\n\t  });\n\t  d3_time.months = d3_time.month.range;\n\t  d3_time.months.utc = d3_time.month.utc.range;\n\t  function d3_time_scale(linear, methods, format) {\n\t    function scale(x) {\n\t      return linear(x);\n\t    }\n\t    scale.invert = function(x) {\n\t      return d3_time_scaleDate(linear.invert(x));\n\t    };\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return linear.domain().map(d3_time_scaleDate);\n\t      linear.domain(x);\n\t      return scale;\n\t    };\n\t    function tickMethod(extent, count) {\n\t      var span = extent[1] - extent[0], target = span / count, i = d3.bisect(d3_time_scaleSteps, target);\n\t      return i == d3_time_scaleSteps.length ? [ methods.year, d3_scale_linearTickRange(extent.map(function(d) {\n\t        return d / 31536e6;\n\t      }), count)[2] ] : !i ? [ d3_time_scaleMilliseconds, d3_scale_linearTickRange(extent, count)[2] ] : methods[target / d3_time_scaleSteps[i - 1] < d3_time_scaleSteps[i] / target ? i - 1 : i];\n\t    }\n\t    scale.nice = function(interval, skip) {\n\t      var domain = scale.domain(), extent = d3_scaleExtent(domain), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" && tickMethod(extent, interval);\n\t      if (method) interval = method[0], skip = method[1];\n\t      function skipped(date) {\n\t        return !isNaN(date) && !interval.range(date, d3_time_scaleDate(+date + 1), skip).length;\n\t      }\n\t      return scale.domain(d3_scale_nice(domain, skip > 1 ? {\n\t        floor: function(date) {\n\t          while (skipped(date = interval.floor(date))) date = d3_time_scaleDate(date - 1);\n\t          return date;\n\t        },\n\t        ceil: function(date) {\n\t          while (skipped(date = interval.ceil(date))) date = d3_time_scaleDate(+date + 1);\n\t          return date;\n\t        }\n\t      } : interval));\n\t    };\n\t    scale.ticks = function(interval, skip) {\n\t      var extent = d3_scaleExtent(scale.domain()), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" ? tickMethod(extent, interval) : !interval.range && [ {\n\t        range: interval\n\t      }, skip ];\n\t      if (method) interval = method[0], skip = method[1];\n\t      return interval.range(extent[0], d3_time_scaleDate(+extent[1] + 1), skip < 1 ? 1 : skip);\n\t    };\n\t    scale.tickFormat = function() {\n\t      return format;\n\t    };\n\t    scale.copy = function() {\n\t      return d3_time_scale(linear.copy(), methods, format);\n\t    };\n\t    return d3_scale_linearRebind(scale, linear);\n\t  }\n\t  function d3_time_scaleDate(t) {\n\t    return new Date(t);\n\t  }\n\t  var d3_time_scaleSteps = [ 1e3, 5e3, 15e3, 3e4, 6e4, 3e5, 9e5, 18e5, 36e5, 108e5, 216e5, 432e5, 864e5, 1728e5, 6048e5, 2592e6, 7776e6, 31536e6 ];\n\t  var d3_time_scaleLocalMethods = [ [ d3_time.second, 1 ], [ d3_time.second, 5 ], [ d3_time.second, 15 ], [ d3_time.second, 30 ], [ d3_time.minute, 1 ], [ d3_time.minute, 5 ], [ d3_time.minute, 15 ], [ d3_time.minute, 30 ], [ d3_time.hour, 1 ], [ d3_time.hour, 3 ], [ d3_time.hour, 6 ], [ d3_time.hour, 12 ], [ d3_time.day, 1 ], [ d3_time.day, 2 ], [ d3_time.week, 1 ], [ d3_time.month, 1 ], [ d3_time.month, 3 ], [ d3_time.year, 1 ] ];\n\t  var d3_time_scaleLocalFormat = d3_time_format.multi([ [ \".%L\", function(d) {\n\t    return d.getMilliseconds();\n\t  } ], [ \":%S\", function(d) {\n\t    return d.getSeconds();\n\t  } ], [ \"%I:%M\", function(d) {\n\t    return d.getMinutes();\n\t  } ], [ \"%I %p\", function(d) {\n\t    return d.getHours();\n\t  } ], [ \"%a %d\", function(d) {\n\t    return d.getDay() && d.getDate() != 1;\n\t  } ], [ \"%b %d\", function(d) {\n\t    return d.getDate() != 1;\n\t  } ], [ \"%B\", function(d) {\n\t    return d.getMonth();\n\t  } ], [ \"%Y\", d3_true ] ]);\n\t  var d3_time_scaleMilliseconds = {\n\t    range: function(start, stop, step) {\n\t      return d3.range(Math.ceil(start / step) * step, +stop, step).map(d3_time_scaleDate);\n\t    },\n\t    floor: d3_identity,\n\t    ceil: d3_identity\n\t  };\n\t  d3_time_scaleLocalMethods.year = d3_time.year;\n\t  d3_time.scale = function() {\n\t    return d3_time_scale(d3.scale.linear(), d3_time_scaleLocalMethods, d3_time_scaleLocalFormat);\n\t  };\n\t  var d3_time_scaleUtcMethods = d3_time_scaleLocalMethods.map(function(m) {\n\t    return [ m[0].utc, m[1] ];\n\t  });\n\t  var d3_time_scaleUtcFormat = d3_time_formatUtc.multi([ [ \".%L\", function(d) {\n\t    return d.getUTCMilliseconds();\n\t  } ], [ \":%S\", function(d) {\n\t    return d.getUTCSeconds();\n\t  } ], [ \"%I:%M\", function(d) {\n\t    return d.getUTCMinutes();\n\t  } ], [ \"%I %p\", function(d) {\n\t    return d.getUTCHours();\n\t  } ], [ \"%a %d\", function(d) {\n\t    return d.getUTCDay() && d.getUTCDate() != 1;\n\t  } ], [ \"%b %d\", function(d) {\n\t    return d.getUTCDate() != 1;\n\t  } ], [ \"%B\", function(d) {\n\t    return d.getUTCMonth();\n\t  } ], [ \"%Y\", d3_true ] ]);\n\t  d3_time_scaleUtcMethods.year = d3_time.year.utc;\n\t  d3_time.scale.utc = function() {\n\t    return d3_time_scale(d3.scale.linear(), d3_time_scaleUtcMethods, d3_time_scaleUtcFormat);\n\t  };\n\t  d3.text = d3_xhrType(function(request) {\n\t    return request.responseText;\n\t  });\n\t  d3.json = function(url, callback) {\n\t    return d3_xhr(url, \"application/json\", d3_json, callback);\n\t  };\n\t  function d3_json(request) {\n\t    return JSON.parse(request.responseText);\n\t  }\n\t  d3.html = function(url, callback) {\n\t    return d3_xhr(url, \"text/html\", d3_html, callback);\n\t  };\n\t  function d3_html(request) {\n\t    var range = d3_document.createRange();\n\t    range.selectNode(d3_document.body);\n\t    return range.createContextualFragment(request.responseText);\n\t  }\n\t  d3.xml = d3_xhrType(function(request) {\n\t    return request.responseXML;\n\t  });\n\t  if (true) this.d3 = d3, !(__WEBPACK_AMD_DEFINE_FACTORY__ = (d3), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)); else if (typeof module === \"object\" && module.exports) module.exports = d3; else this.d3 = d3;\n\t}();\n\n/***/ },\n\n/***/ 1049:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t   value: true\n\t});\n\t\n\texports.default = function (milestoneCount) {\n\t   var FIT_TIME_DOMAIN_MODE = \"fit\";\n\t   var FIXED_TIME_DOMAIN_MODE = \"fixed\";\n\t\n\t   var margin = {\n\t      top: 20,\n\t      right: 40,\n\t      bottom: 20,\n\t      left: 250\n\t   };\n\t   var selector = 'body';\n\t   var timeDomainStart = _d2.default.time.day.offset(new Date(), -3);\n\t   var timeDomainEnd = _d2.default.time.hour.offset(new Date(), +3);\n\t   var timeDomainMode = FIT_TIME_DOMAIN_MODE; // fixed or fit\n\t   var taskTypes = [];\n\t   var taskStatus = [];\n\t   // var height = document.body.clientHeight - margin.top - margin.bottom-5;\n\t   var height = milestoneCount * 50; // height of chart is based on # of milestones\n\t   var width = document.body.clientWidth - margin.right - margin.left - 5;\n\t\n\t   var tickFormat = \"%H:%M\";\n\t\n\t   var keyFunction = function keyFunction(d) {\n\t      return d.startDate + d.taskName + d.endDate;\n\t   };\n\t\n\t   var rectTransform = function rectTransform(d) {\n\t      return \"translate(\" + x(d.startDate) + \",\" + y(d.taskName) + \")\";\n\t   };\n\t   var rectTransformCompleted = function rectTransformCompleted(d) {\n\t      return \"translate(\" + x(d.startDate) + \",\" + y(d.taskName) + \")\";\n\t   };\n\t   var rectTransformRemaining = function rectTransformRemaining(d) {\n\t      return \"translate(\" + (x(d.startDate) + d.percent * (x(d.endDate) - x(d.startDate))) + \",\" + y(d.taskName) + \")\";\n\t   };\n\t   var rectTransformSegment = function rectTransformSegment(_ref) {\n\t      var task = _ref.task;\n\t      var segment = _ref.segment;\n\t      var total = _ref.total;\n\t      var prev = _ref.prev;\n\t\n\t      var percent = prev / total;\n\t      return \"translate(\" + (x(task.startDate) + percent * (x(task.endDate) - x(task.startDate))) + \",\" + y(task.taskName) + \")\";\n\t   };\n\t\n\t   var x = _d2.default.time.scale().domain([timeDomainStart, timeDomainEnd]).range([0, width]).clamp(true);\n\t\n\t   var y = _d2.default.scale.ordinal().domain(taskTypes).rangeRoundBands([0, height - margin.top - margin.bottom], .1);\n\t\n\t   var xAxis = _d2.default.svg.axis().scale(x).orient(\"bottom\").tickFormat(_d2.default.time.format(tickFormat)).tickSubdivide(true).tickSize(8).tickPadding(8);\n\t\n\t   var yAxis = _d2.default.svg.axis().scale(y).orient(\"right\").tickSize(0);\n\t\n\t   var initTimeDomain = function initTimeDomain(tasks) {\n\t      if (timeDomainMode === FIT_TIME_DOMAIN_MODE) {\n\t         if (tasks === undefined || tasks.length < 1) {\n\t            timeDomainStart = _d2.default.time.day.offset(new Date(), -3);\n\t            timeDomainEnd = _d2.default.time.hour.offset(new Date(), +3);\n\t            return;\n\t         }\n\t         tasks.sort(function (a, b) {\n\t            return a.endDate - b.endDate;\n\t         });\n\t         timeDomainEnd = tasks[tasks.length - 1].endDate;\n\t         tasks.sort(function (a, b) {\n\t            return a.startDate - b.startDate;\n\t         });\n\t         timeDomainStart = tasks[0].startDate;\n\t      }\n\t   };\n\t\n\t   var initAxis = function initAxis() {\n\t      x = _d2.default.time.scale().domain([timeDomainStart, timeDomainEnd]).range([0, width]).clamp(true);\n\t      y = _d2.default.scale.ordinal().domain(taskTypes).rangeRoundBands([0, height - margin.top - margin.bottom], .1);\n\t      xAxis = _d2.default.svg.axis().scale(x).orient(\"bottom\").tickFormat(_d2.default.time.format(tickFormat)).tickSubdivide(true).tickSize(8).tickPadding(8);\n\t\n\t      yAxis = _d2.default.svg.axis().scale(y).orient(\"right\").tickSize(0);\n\t   };\n\t\n\t   function gantt(tasks) {\n\t\n\t      initTimeDomain(tasks);\n\t      initAxis();\n\t\n\t      var svg = _d2.default.select(selector).append(\"svg\").attr(\"class\", \"chart\").attr(\"width\", width + margin.left + margin.right).attr(\"height\", height + margin.top + margin.bottom).append(\"g\").attr(\"class\", \"gantt-chart\").attr(\"width\", width + margin.left + margin.right).attr(\"height\", height + margin.top + margin.bottom).attr(\"transform\", \"translate(\" + margin.left + \", \" + margin.top + \")\");\n\t\n\t      var PHIL = svg.selectAll(\".chart\");\n\t\n\t      PHIL.select('line.today').data([new Date()]).enter().append('line').attr('class', 'today').attr('x1', function (d) {\n\t         return x(d);\n\t      }).attr('x2', function (d) {\n\t         return x(d);\n\t      }).attr('y1', 0).attr('y2', height).style({ stroke: 'rgb(0,0,255)', 'stroke-width': 2 });\n\t\n\t      PHIL.selectAll('g.milestone-bars').data(tasks, keyFunction).enter().append(\"g\")\n\t      //  .attr(\"rx\", 5)\n\t      //        .attr(\"ry\", 5)\n\t      .attr(\"class\", 'milestone-bars')\n\t      //  .attr(\"y\", 0)\n\t      //  .attr(\"transform\", rectTransformCompleted)\n\t      //  .attr(\"height\", function(d) { return y.rangeBand(); })\n\t      //  .attr(\"width\", function(d) {\n\t      //      return d.percent * (x(d.endDate) - x(d.startDate));\n\t      //    })\n\t      .selectAll('rect').data(function (task) {\n\t         task.segments.map(function (segment) {\n\t            task, segment;\n\t         });\n\t      }).enter().append('rect').attr('class', 'milestone-segment').style(function (_ref2) {\n\t         var task = _ref2.task;\n\t         var segment = _ref2.segment;\n\t         fill: segment.color;\n\t      }).attr('transform', rectTransformSegment).attr(\"height\", function (d) {\n\t         return y.rangeBand();\n\t      }).attr(\"width\", function (_ref3) {\n\t         var task = _ref3.task;\n\t         var total = _ref3.total;\n\t         var segment = _ref3.segment;\n\t\n\t         var percent = segment.count / total;\n\t         return percent * (x(task.endDate) - x(task.startDate));\n\t      });\n\t\n\t      // PHIL: Copy-pasta to show the 2nd half of the milestone (unfinished)\n\t      //   PHIL.selectAll('rect.milestone-remaining').data(tasks, keyFunction).enter()\n\t      //\n\t      // \t .append(\"rect\")\n\t      // // \t .attr(\"rx\", 5)\n\t      //  //         .attr(\"ry\", 5)\n\t      // \t .attr(\"class\", function(d){\n\t      // \t     return 'milestone-remaining ' + d.status;\n\t      // \t     })\n\t      // \t .attr(\"y\", 0)\n\t      // \t .attr(\"transform\", rectTransformRemaining)\n\t      // \t .attr(\"height\", function(d) { return y.rangeBand(); })\n\t      // \t .attr(\"width\", function(d) {\n\t      // \t     return (1-d.percent) * (x(d.endDate) - x(d.startDate));\n\t      // \t     });\n\t\n\t      svg.append(\"g\").attr(\"class\", \"x axis\").attr(\"transform\", \"translate(0, \" + (height - margin.top - margin.bottom) + \")\").transition().call(xAxis);\n\t\n\t      svg.append(\"g\").attr(\"class\", \"y axis\").attr('transform', 'translate(-' + margin.left + ',0)').transition().call(yAxis);\n\t\n\t      return gantt;\n\t   };\n\t\n\t   gantt.redraw = function (tasks) {\n\t\n\t      initTimeDomain(tasks);\n\t      initAxis();\n\t\n\t      var svg = _d2.default.select(\".chart\");\n\t\n\t      var ganttChartGroup = svg.select(\".gantt-chart\");\n\t      var rect = ganttChartGroup.selectAll(\"g.milestone-bars\").data(tasks, keyFunction);\n\t\n\t      rect.enter().append(\"g\").attr(\"class\", 'milestone-bars')\n\t      // \t .attr(\"y\", 0)\n\t      // \t .attr(\"transform\", rectTransformCompleted)\n\t      // \t .attr(\"height\", function(d) { return y.rangeBand(); })\n\t      // \t .attr(\"width\", function(d) {\n\t      // \t     return d.percent * (x(d.endDate) - x(d.startDate));\n\t      //     })\n\t      .selectAll('rect').data(function (task) {\n\t         var total = task.segments.reduce(function (acc, segment) {\n\t            return acc + segment.count;\n\t         }, 0);\n\t         var prev = 0;\n\t         var segments = task.segments.map(function (segment) {\n\t            var ret = { task: task, segment: segment, prev: prev, total: total };\n\t            prev += segment.count;\n\t            return ret;\n\t         });\n\t         return segments;\n\t      }).enter().append('rect')\n\t      //  .attr('class', 'milestone-segment')\n\t      .style('fill', function (_ref4) {\n\t         var task = _ref4.task;\n\t         var segment = _ref4.segment;\n\t         return \"#\" + segment.color;\n\t      })\n\t      // .attr('class', ({task, segment}) => {return {fill: segment.color}; })\n\t      // .transform()\n\t      .attr('transform', rectTransformSegment).attr(\"height\", function (d) {\n\t         return y.rangeBand();\n\t      }).attr(\"width\", function (_ref5) {\n\t         var task = _ref5.task;\n\t         var total = _ref5.total;\n\t         var segment = _ref5.segment;\n\t\n\t         var percent = segment.count / total;\n\t         return percent * (x(task.endDate) - x(task.startDate));\n\t      });\n\t\n\t      //       rect.enter()\n\t      //        .append(\"rect\")\n\t      //  .attr(\"class\", function(d){\n\t      //      return 'milestone-bars ' +d.status;\n\t      //      })\n\t      //  .transition()\n\t      //  .attr(\"y\", 0)\n\t      //  .attr(\"transform\", rectTransformCompleted)\n\t      //  .attr(\"height\", function(d) { return y.rangeBand(); })\n\t      //  .attr(\"width\", function(d) {\n\t      //      return d.percent*(x(d.endDate) - x(d.startDate));\n\t      //      });\n\t      //\n\t      //       rect.transition()\n\t      //         .attr(\"transform\", rectTransform)\n\t      //  .attr(\"height\", function(d) { return y.rangeBand(); })\n\t      //  .attr(\"width\", function(d) {\n\t      //      return d.percent*(x(d.endDate) - x(d.startDate));\n\t      //      });\n\t\n\t      // \trect.exit().remove();\n\t      //\n\t      //   //PHIL Copy-pasta\n\t      //   var rect = ganttChartGroup.selectAll(\"rect.milestone-remaining\").data(tasks, keyFunction);\n\t      //\n\t      //   rect.enter()\n\t      //    .append(\"rect\")\n\t      //    .attr(\"rx\", 5)\n\t      //    .attr(\"ry\", 5)\n\t      // .attr(\"class\", function(d){\n\t      //  return 'milestone-remaining ' +d.status;\n\t      //  })\n\t      // .transition()\n\t      // .attr(\"y\", 0)\n\t      // .attr(\"transform\", rectTransformRemaining)\n\t      // .attr(\"height\", function(d) { return y.rangeBand(); })\n\t      // .attr(\"width\", function(d) {\n\t      //  return (1-d.percent)*(x(d.endDate) - x(d.startDate));\n\t      //  });\n\t      //\n\t      //   rect.transition()\n\t      //     .attr(\"transform\", rectTransformRemaining)\n\t      // .attr(\"height\", function(d) { return y.rangeBand(); })\n\t      // .attr(\"width\", function(d) {\n\t      //  return (1-d.percent)*(x(d.endDate) - x(d.startDate));\n\t      //  });\n\t      //\n\t      // rect.exit().remove();\n\t\n\t      svg.select(\".x\").transition().call(xAxis);\n\t      svg.select(\".y\").transition().call(yAxis);\n\t\n\t      return gantt;\n\t   };\n\t\n\t   gantt.margin = function (value) {\n\t      if (!arguments.length) return margin;\n\t      margin = value;\n\t      return gantt;\n\t   };\n\t\n\t   gantt.timeDomain = function (value) {\n\t      if (!arguments.length) return [timeDomainStart, timeDomainEnd];\n\t      timeDomainStart = +value[0], timeDomainEnd = +value[1];\n\t      return gantt;\n\t   };\n\t\n\t   /**\n\t    * @param {string}\n\t    *                vale The value can be \"fit\" - the domain fits the data or\n\t    *                \"fixed\" - fixed domain.\n\t    */\n\t   gantt.timeDomainMode = function (value) {\n\t      if (!arguments.length) return timeDomainMode;\n\t      timeDomainMode = value;\n\t      return gantt;\n\t   };\n\t\n\t   gantt.taskTypes = function (value) {\n\t      if (!arguments.length) return taskTypes;\n\t      taskTypes = value;\n\t      return gantt;\n\t   };\n\t\n\t   gantt.taskStatus = function (value) {\n\t      if (!arguments.length) return taskStatus;\n\t      taskStatus = value;\n\t      return gantt;\n\t   };\n\t\n\t   gantt.width = function (value) {\n\t      if (!arguments.length) return width;\n\t      width = +value;\n\t      return gantt;\n\t   };\n\t\n\t   gantt.height = function (value) {\n\t      if (!arguments.length) return height;\n\t      height = +value;\n\t      return gantt;\n\t   };\n\t\n\t   gantt.tickFormat = function (value) {\n\t      if (!arguments.length) return tickFormat;\n\t      tickFormat = value;\n\t      return gantt;\n\t   };\n\t\n\t   gantt.selector = function (value) {\n\t      if (!arguments.length) return selector;\n\t      selector = value;\n\t      return gantt;\n\t   };\n\t\n\t   return gantt;\n\t};\n\t\n\tvar _d = __webpack_require__(1048);\n\t\n\tvar _d2 = _interopRequireDefault(_d);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\t;\n\t/**\n\t * From https://github.com/dk8996/Gantt-Chart\n\t * @author Dimitry Kudrayvtsev\n\t * @version 2.x\n\t */undefined\n\n/***/ }\n\n});\n\n\n/** WEBPACK FOOTER **\n ** 3.bundle.js\n **/","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport _ from 'underscore';\n\nimport {getFilters} from '../route-utils';\nimport IssueStore from '../issue-store';\nimport Client from '../github-client';\nimport {getCardColumn, UNCATEGORIZED_NAME} from '../helpers';\nimport Loadable from './loadable';\nimport LabelBadge from './label-badge';\n\nimport d3 from 'd3';\nimport gantt from '../gantt-chart';\n\n\nconst filterByMilestoneAndKanbanColumn = (cards) => {\n  const data = {};\n  const columns = {};\n  const columnCounts = {}; // key is columnName\n  const add = (card) => {\n    if (card.issue.milestone) {\n      const column = getCardColumn(card);\n      const columnName = column.name;\n      columns[columnName] = column;\n      const msCounts = data[card.issue.milestone.title] || {};\n      data[card.issue.milestone.title] = msCounts;\n      msCounts[columnName] = msCounts[columnName] || 0;\n      msCounts[columnName] += 1;\n\n      columnCounts[columnName] = columnCounts[columnName] || 0;\n      columnCounts[columnName] += 1;\n    } else {\n      // TODO: Should account for issues not in a milestone somehow\n    }\n  };\n\n  cards.forEach((card) => {\n    add(card);\n  });\n  return {data, columns: _.values(columns), columnCounts};\n};\n\n\nconst GanttChart = React.createClass({\n  componentDidMount() {\n    this.renderChart();\n  },\n  componentDidUpdate() {\n    this.renderChart();\n  },\n  renderChart() {\n    const {milestones, data, columns} = this.props;\n    const {ganttWrapper} = this.refs;\n    const now = new Date();\n\n    ReactDOM.findDOMNode(ganttWrapper).innerHTML = '';\n\n    const tasks = milestones.map((milestone) => {\n      const {createdAt, dueOn, title, state, closedIssues, openIssues} = milestone;\n      const dueAt = dueOn ? new Date(dueOn) : null;\n      let status;\n      if (dueAt && dueAt.getTime() < now.getTime()) {\n        status = 'milestone-status-overdue';\n      } else {\n        status = `milestone-status-${state}`;\n      }\n      const segments = [];\n      if (closedIssues) {\n        segments.push({count: closedIssues, color: '666666', title: 'Closed Issues'});\n      }\n      let accountedForCount = 0;\n      _.each(columns, ({name, color}) => {\n        if (data[milestone.title]) {\n          const count = data[milestone.title][name] || 0;\n          if (count) {\n            accountedForCount += count;\n            segments.push({count, color, title:name});\n          }\n        }\n      });\n      if (accountedForCount !== openIssues) {\n        segments.push({count: openIssues - accountedForCount, color: 'ffffff', title: 'Other Open Issues'});\n      }\n      return {\n        startDate: createdAt,\n        endDate: dueAt || now,\n        taskName: title,\n        status: status,\n        segments: segments\n      };\n    });\n\n    const taskStatus = {\n      'milestone-status-overdue': 'milestone-status-overdue',\n        'milestone-status-open' : 'milestone-status-open',\n        'milestone-status-closed' : 'milestone-status-closed'\n    };\n\n    const taskNames = tasks.map(({taskName}) => taskName).sort();\n\n    tasks.sort(function(a, b) {\n        return a.endDate - b.endDate;\n    });\n    const maxDate = tasks[tasks.length - 1].endDate;\n    tasks.sort(function(a, b) {\n        return a.startDate - b.startDate;\n    });\n    // const minDate = tasks[0].startDate;\n\n    const format = '%H:%M';\n\n    const chart = gantt(taskNames.length).taskTypes(taskNames).taskStatus(taskStatus).tickFormat(format).selector('#the-gantt-chart');\n    chart(tasks);\n\n\n    function changeTimeDomain(timeDomainString) {\n        let format;\n        switch (timeDomainString) {\n          case '1hr':\n          \tformat = '%H:%M:%S';\n          \tchart.timeDomain([ d3.time.hour.offset(maxDate, -1), maxDate ]);\n          \tbreak;\n          case '3hr':\n          \tformat = '%H:%M';\n          \tchart.timeDomain([ d3.time.hour.offset(maxDate, -3), maxDate ]);\n          \tbreak;\n\n          case '6hr':\n          \tformat = '%H:%M';\n          \tchart.timeDomain([ d3.time.hour.offset(maxDate, -6), maxDate ]);\n          \tbreak;\n\n          case '1day':\n          \tformat = '%H:%M';\n          \tchart.timeDomain([ d3.time.day.offset(maxDate, -1), maxDate ]);\n          \tbreak;\n\n          case '1week':\n          \tformat = '%m/%d';\n          \tchart.timeDomain([ d3.time.day.offset(maxDate, -7), maxDate ]);\n          \tbreak;\n          default:\n          \tformat = '%H:%M';\n\n        }\n        chart.tickFormat(format);\n        chart.redraw(tasks);\n    }\n\n    changeTimeDomain('1week');\n\n  },\n  render() {\n    const {columns, columnCounts, milestones} = this.props;\n\n    const legend = columns.map((label) => {\n      return (\n        <LabelBadge key={label.name} label={label} extra={columnCounts[label.name]}/>\n      );\n    });\n    let closedCount = 0;\n    milestones.forEach((milestone) => {\n      closedCount += milestone.closedIssues;\n    });\n    return (\n      <div className='-gantt-chart-and-legend'>\n        <div ref='ganttWrapper' id='the-gantt-chart'/>\n        <h3>Legend</h3>\n        <p>Blue vertical line is Today</p>\n        <LabelBadge key='completed' label={{name:'0 - Closed', color: '666666'}} extra={closedCount}/>\n        {legend}\n        <br/>{/* Add breaks to increase padding because I'm lazy and don't want to add CSS margins */}\n        <br/>\n      </div>\n    );\n  }\n\n});\n\nconst RepoKanbanShell = React.createClass({\n  componentWillMount() {\n    // Needs to be called before `render()`\n    IssueStore.startPolling();\n  },\n  componentWillUnmount() {\n    IssueStore.stopPolling();\n  },\n  renderLoaded([allMilestones, cards]) {\n    const {milestoneTitles} = getFilters().getState();\n\n    let {data, columns, columnCounts} = filterByMilestoneAndKanbanColumn(cards);\n    // COPYPASTA: Taken from repo-kanban\n    columns = _.sortBy(columns, ({name}) => {\n      if (name === UNCATEGORIZED_NAME) {\n        // make sure Uncategorized is the left-most column\n        return -1;\n      } else {\n        const result = /^(\\d+)/.exec(name);\n        return result && result[1] || name;\n      }\n    });\n    columns = columns.reverse();\n\n    // Remove milestones that are not in the URL filter\n    let milestones;\n    if (milestoneTitles.length > 0) {\n      milestones = allMilestones.filter((milestone) => {\n        return milestoneTitles.indexOf(milestone.title) >= 0;\n      });\n    } else {\n      milestones = allMilestones;\n    }\n\n    return (\n      <GanttChart milestones={milestones} data={data} columns={columns} columnCounts={columnCounts}/>\n    );\n  },\n  render() {\n    const {repoInfos} = getFilters().getState();\n    // Get the \"Primary\" repo for milestones and labels\n    const [{repoOwner, repoName}] = repoInfos;\n\n    // TODO: Actually do all the milestones\n    const allPromises = Promise.all([IssueStore.fetchMilestones(repoOwner, repoName), IssueStore.fetchIssues()]);\n\n    return (\n      <Loadable\n        promise={allPromises}\n        renderLoaded={this.renderLoaded}\n      />\n    );\n  }\n});\n\nexport default RepoKanbanShell;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/components/gantt-view.jsx\n **/","!function() {\n  var d3 = {\n    version: \"3.5.12\"\n  };\n  var d3_arraySlice = [].slice, d3_array = function(list) {\n    return d3_arraySlice.call(list);\n  };\n  var d3_document = this.document;\n  function d3_documentElement(node) {\n    return node && (node.ownerDocument || node.document || node).documentElement;\n  }\n  function d3_window(node) {\n    return node && (node.ownerDocument && node.ownerDocument.defaultView || node.document && node || node.defaultView);\n  }\n  if (d3_document) {\n    try {\n      d3_array(d3_document.documentElement.childNodes)[0].nodeType;\n    } catch (e) {\n      d3_array = function(list) {\n        var i = list.length, array = new Array(i);\n        while (i--) array[i] = list[i];\n        return array;\n      };\n    }\n  }\n  if (!Date.now) Date.now = function() {\n    return +new Date();\n  };\n  if (d3_document) {\n    try {\n      d3_document.createElement(\"DIV\").style.setProperty(\"opacity\", 0, \"\");\n    } catch (error) {\n      var d3_element_prototype = this.Element.prototype, d3_element_setAttribute = d3_element_prototype.setAttribute, d3_element_setAttributeNS = d3_element_prototype.setAttributeNS, d3_style_prototype = this.CSSStyleDeclaration.prototype, d3_style_setProperty = d3_style_prototype.setProperty;\n      d3_element_prototype.setAttribute = function(name, value) {\n        d3_element_setAttribute.call(this, name, value + \"\");\n      };\n      d3_element_prototype.setAttributeNS = function(space, local, value) {\n        d3_element_setAttributeNS.call(this, space, local, value + \"\");\n      };\n      d3_style_prototype.setProperty = function(name, value, priority) {\n        d3_style_setProperty.call(this, name, value + \"\", priority);\n      };\n    }\n  }\n  d3.ascending = d3_ascending;\n  function d3_ascending(a, b) {\n    return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n  }\n  d3.descending = function(a, b) {\n    return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n  };\n  d3.min = function(array, f) {\n    var i = -1, n = array.length, a, b;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null && a > b) a = b;\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && a > b) a = b;\n    }\n    return a;\n  };\n  d3.max = function(array, f) {\n    var i = -1, n = array.length, a, b;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null && b > a) a = b;\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b > a) a = b;\n    }\n    return a;\n  };\n  d3.extent = function(array, f) {\n    var i = -1, n = array.length, a, b, c;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = c = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null) {\n        if (a > b) a = b;\n        if (c < b) c = b;\n      }\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = c = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null) {\n        if (a > b) a = b;\n        if (c < b) c = b;\n      }\n    }\n    return [ a, c ];\n  };\n  function d3_number(x) {\n    return x === null ? NaN : +x;\n  }\n  function d3_numeric(x) {\n    return !isNaN(x);\n  }\n  d3.sum = function(array, f) {\n    var s = 0, n = array.length, a, i = -1;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = +array[i])) s += a;\n    } else {\n      while (++i < n) if (d3_numeric(a = +f.call(array, array[i], i))) s += a;\n    }\n    return s;\n  };\n  d3.mean = function(array, f) {\n    var s = 0, n = array.length, a, i = -1, j = n;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) s += a; else --j;\n    } else {\n      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) s += a; else --j;\n    }\n    if (j) return s / j;\n  };\n  d3.quantile = function(values, p) {\n    var H = (values.length - 1) * p + 1, h = Math.floor(H), v = +values[h - 1], e = H - h;\n    return e ? v + e * (values[h] - v) : v;\n  };\n  d3.median = function(array, f) {\n    var numbers = [], n = array.length, a, i = -1;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) numbers.push(a);\n    } else {\n      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) numbers.push(a);\n    }\n    if (numbers.length) return d3.quantile(numbers.sort(d3_ascending), .5);\n  };\n  d3.variance = function(array, f) {\n    var n = array.length, m = 0, a, d, s = 0, i = -1, j = 0;\n    if (arguments.length === 1) {\n      while (++i < n) {\n        if (d3_numeric(a = d3_number(array[i]))) {\n          d = a - m;\n          m += d / ++j;\n          s += d * (a - m);\n        }\n      }\n    } else {\n      while (++i < n) {\n        if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) {\n          d = a - m;\n          m += d / ++j;\n          s += d * (a - m);\n        }\n      }\n    }\n    if (j > 1) return s / (j - 1);\n  };\n  d3.deviation = function() {\n    var v = d3.variance.apply(this, arguments);\n    return v ? Math.sqrt(v) : v;\n  };\n  function d3_bisector(compare) {\n    return {\n      left: function(a, x, lo, hi) {\n        if (arguments.length < 3) lo = 0;\n        if (arguments.length < 4) hi = a.length;\n        while (lo < hi) {\n          var mid = lo + hi >>> 1;\n          if (compare(a[mid], x) < 0) lo = mid + 1; else hi = mid;\n        }\n        return lo;\n      },\n      right: function(a, x, lo, hi) {\n        if (arguments.length < 3) lo = 0;\n        if (arguments.length < 4) hi = a.length;\n        while (lo < hi) {\n          var mid = lo + hi >>> 1;\n          if (compare(a[mid], x) > 0) hi = mid; else lo = mid + 1;\n        }\n        return lo;\n      }\n    };\n  }\n  var d3_bisect = d3_bisector(d3_ascending);\n  d3.bisectLeft = d3_bisect.left;\n  d3.bisect = d3.bisectRight = d3_bisect.right;\n  d3.bisector = function(f) {\n    return d3_bisector(f.length === 1 ? function(d, x) {\n      return d3_ascending(f(d), x);\n    } : f);\n  };\n  d3.shuffle = function(array, i0, i1) {\n    if ((m = arguments.length) < 3) {\n      i1 = array.length;\n      if (m < 2) i0 = 0;\n    }\n    var m = i1 - i0, t, i;\n    while (m) {\n      i = Math.random() * m-- | 0;\n      t = array[m + i0], array[m + i0] = array[i + i0], array[i + i0] = t;\n    }\n    return array;\n  };\n  d3.permute = function(array, indexes) {\n    var i = indexes.length, permutes = new Array(i);\n    while (i--) permutes[i] = array[indexes[i]];\n    return permutes;\n  };\n  d3.pairs = function(array) {\n    var i = 0, n = array.length - 1, p0, p1 = array[0], pairs = new Array(n < 0 ? 0 : n);\n    while (i < n) pairs[i] = [ p0 = p1, p1 = array[++i] ];\n    return pairs;\n  };\n  d3.zip = function() {\n    if (!(n = arguments.length)) return [];\n    for (var i = -1, m = d3.min(arguments, d3_zipLength), zips = new Array(m); ++i < m; ) {\n      for (var j = -1, n, zip = zips[i] = new Array(n); ++j < n; ) {\n        zip[j] = arguments[j][i];\n      }\n    }\n    return zips;\n  };\n  function d3_zipLength(d) {\n    return d.length;\n  }\n  d3.transpose = function(matrix) {\n    return d3.zip.apply(d3, matrix);\n  };\n  d3.keys = function(map) {\n    var keys = [];\n    for (var key in map) keys.push(key);\n    return keys;\n  };\n  d3.values = function(map) {\n    var values = [];\n    for (var key in map) values.push(map[key]);\n    return values;\n  };\n  d3.entries = function(map) {\n    var entries = [];\n    for (var key in map) entries.push({\n      key: key,\n      value: map[key]\n    });\n    return entries;\n  };\n  d3.merge = function(arrays) {\n    var n = arrays.length, m, i = -1, j = 0, merged, array;\n    while (++i < n) j += arrays[i].length;\n    merged = new Array(j);\n    while (--n >= 0) {\n      array = arrays[n];\n      m = array.length;\n      while (--m >= 0) {\n        merged[--j] = array[m];\n      }\n    }\n    return merged;\n  };\n  var abs = Math.abs;\n  d3.range = function(start, stop, step) {\n    if (arguments.length < 3) {\n      step = 1;\n      if (arguments.length < 2) {\n        stop = start;\n        start = 0;\n      }\n    }\n    if ((stop - start) / step === Infinity) throw new Error(\"infinite range\");\n    var range = [], k = d3_range_integerScale(abs(step)), i = -1, j;\n    start *= k, stop *= k, step *= k;\n    if (step < 0) while ((j = start + step * ++i) > stop) range.push(j / k); else while ((j = start + step * ++i) < stop) range.push(j / k);\n    return range;\n  };\n  function d3_range_integerScale(x) {\n    var k = 1;\n    while (x * k % 1) k *= 10;\n    return k;\n  }\n  function d3_class(ctor, properties) {\n    for (var key in properties) {\n      Object.defineProperty(ctor.prototype, key, {\n        value: properties[key],\n        enumerable: false\n      });\n    }\n  }\n  d3.map = function(object, f) {\n    var map = new d3_Map();\n    if (object instanceof d3_Map) {\n      object.forEach(function(key, value) {\n        map.set(key, value);\n      });\n    } else if (Array.isArray(object)) {\n      var i = -1, n = object.length, o;\n      if (arguments.length === 1) while (++i < n) map.set(i, object[i]); else while (++i < n) map.set(f.call(object, o = object[i], i), o);\n    } else {\n      for (var key in object) map.set(key, object[key]);\n    }\n    return map;\n  };\n  function d3_Map() {\n    this._ = Object.create(null);\n  }\n  var d3_map_proto = \"__proto__\", d3_map_zero = \"\\x00\";\n  d3_class(d3_Map, {\n    has: d3_map_has,\n    get: function(key) {\n      return this._[d3_map_escape(key)];\n    },\n    set: function(key, value) {\n      return this._[d3_map_escape(key)] = value;\n    },\n    remove: d3_map_remove,\n    keys: d3_map_keys,\n    values: function() {\n      var values = [];\n      for (var key in this._) values.push(this._[key]);\n      return values;\n    },\n    entries: function() {\n      var entries = [];\n      for (var key in this._) entries.push({\n        key: d3_map_unescape(key),\n        value: this._[key]\n      });\n      return entries;\n    },\n    size: d3_map_size,\n    empty: d3_map_empty,\n    forEach: function(f) {\n      for (var key in this._) f.call(this, d3_map_unescape(key), this._[key]);\n    }\n  });\n  function d3_map_escape(key) {\n    return (key += \"\") === d3_map_proto || key[0] === d3_map_zero ? d3_map_zero + key : key;\n  }\n  function d3_map_unescape(key) {\n    return (key += \"\")[0] === d3_map_zero ? key.slice(1) : key;\n  }\n  function d3_map_has(key) {\n    return d3_map_escape(key) in this._;\n  }\n  function d3_map_remove(key) {\n    return (key = d3_map_escape(key)) in this._ && delete this._[key];\n  }\n  function d3_map_keys() {\n    var keys = [];\n    for (var key in this._) keys.push(d3_map_unescape(key));\n    return keys;\n  }\n  function d3_map_size() {\n    var size = 0;\n    for (var key in this._) ++size;\n    return size;\n  }\n  function d3_map_empty() {\n    for (var key in this._) return false;\n    return true;\n  }\n  d3.nest = function() {\n    var nest = {}, keys = [], sortKeys = [], sortValues, rollup;\n    function map(mapType, array, depth) {\n      if (depth >= keys.length) return rollup ? rollup.call(nest, array) : sortValues ? array.sort(sortValues) : array;\n      var i = -1, n = array.length, key = keys[depth++], keyValue, object, setter, valuesByKey = new d3_Map(), values;\n      while (++i < n) {\n        if (values = valuesByKey.get(keyValue = key(object = array[i]))) {\n          values.push(object);\n        } else {\n          valuesByKey.set(keyValue, [ object ]);\n        }\n      }\n      if (mapType) {\n        object = mapType();\n        setter = function(keyValue, values) {\n          object.set(keyValue, map(mapType, values, depth));\n        };\n      } else {\n        object = {};\n        setter = function(keyValue, values) {\n          object[keyValue] = map(mapType, values, depth);\n        };\n      }\n      valuesByKey.forEach(setter);\n      return object;\n    }\n    function entries(map, depth) {\n      if (depth >= keys.length) return map;\n      var array = [], sortKey = sortKeys[depth++];\n      map.forEach(function(key, keyMap) {\n        array.push({\n          key: key,\n          values: entries(keyMap, depth)\n        });\n      });\n      return sortKey ? array.sort(function(a, b) {\n        return sortKey(a.key, b.key);\n      }) : array;\n    }\n    nest.map = function(array, mapType) {\n      return map(mapType, array, 0);\n    };\n    nest.entries = function(array) {\n      return entries(map(d3.map, array, 0), 0);\n    };\n    nest.key = function(d) {\n      keys.push(d);\n      return nest;\n    };\n    nest.sortKeys = function(order) {\n      sortKeys[keys.length - 1] = order;\n      return nest;\n    };\n    nest.sortValues = function(order) {\n      sortValues = order;\n      return nest;\n    };\n    nest.rollup = function(f) {\n      rollup = f;\n      return nest;\n    };\n    return nest;\n  };\n  d3.set = function(array) {\n    var set = new d3_Set();\n    if (array) for (var i = 0, n = array.length; i < n; ++i) set.add(array[i]);\n    return set;\n  };\n  function d3_Set() {\n    this._ = Object.create(null);\n  }\n  d3_class(d3_Set, {\n    has: d3_map_has,\n    add: function(key) {\n      this._[d3_map_escape(key += \"\")] = true;\n      return key;\n    },\n    remove: d3_map_remove,\n    values: d3_map_keys,\n    size: d3_map_size,\n    empty: d3_map_empty,\n    forEach: function(f) {\n      for (var key in this._) f.call(this, d3_map_unescape(key));\n    }\n  });\n  d3.behavior = {};\n  function d3_identity(d) {\n    return d;\n  }\n  d3.rebind = function(target, source) {\n    var i = 1, n = arguments.length, method;\n    while (++i < n) target[method = arguments[i]] = d3_rebind(target, source, source[method]);\n    return target;\n  };\n  function d3_rebind(target, source, method) {\n    return function() {\n      var value = method.apply(source, arguments);\n      return value === source ? target : value;\n    };\n  }\n  function d3_vendorSymbol(object, name) {\n    if (name in object) return name;\n    name = name.charAt(0).toUpperCase() + name.slice(1);\n    for (var i = 0, n = d3_vendorPrefixes.length; i < n; ++i) {\n      var prefixName = d3_vendorPrefixes[i] + name;\n      if (prefixName in object) return prefixName;\n    }\n  }\n  var d3_vendorPrefixes = [ \"webkit\", \"ms\", \"moz\", \"Moz\", \"o\", \"O\" ];\n  function d3_noop() {}\n  d3.dispatch = function() {\n    var dispatch = new d3_dispatch(), i = -1, n = arguments.length;\n    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n    return dispatch;\n  };\n  function d3_dispatch() {}\n  d3_dispatch.prototype.on = function(type, listener) {\n    var i = type.indexOf(\".\"), name = \"\";\n    if (i >= 0) {\n      name = type.slice(i + 1);\n      type = type.slice(0, i);\n    }\n    if (type) return arguments.length < 2 ? this[type].on(name) : this[type].on(name, listener);\n    if (arguments.length === 2) {\n      if (listener == null) for (type in this) {\n        if (this.hasOwnProperty(type)) this[type].on(name, null);\n      }\n      return this;\n    }\n  };\n  function d3_dispatch_event(dispatch) {\n    var listeners = [], listenerByName = new d3_Map();\n    function event() {\n      var z = listeners, i = -1, n = z.length, l;\n      while (++i < n) if (l = z[i].on) l.apply(this, arguments);\n      return dispatch;\n    }\n    event.on = function(name, listener) {\n      var l = listenerByName.get(name), i;\n      if (arguments.length < 2) return l && l.on;\n      if (l) {\n        l.on = null;\n        listeners = listeners.slice(0, i = listeners.indexOf(l)).concat(listeners.slice(i + 1));\n        listenerByName.remove(name);\n      }\n      if (listener) listeners.push(listenerByName.set(name, {\n        on: listener\n      }));\n      return dispatch;\n    };\n    return event;\n  }\n  d3.event = null;\n  function d3_eventPreventDefault() {\n    d3.event.preventDefault();\n  }\n  function d3_eventSource() {\n    var e = d3.event, s;\n    while (s = e.sourceEvent) e = s;\n    return e;\n  }\n  function d3_eventDispatch(target) {\n    var dispatch = new d3_dispatch(), i = 0, n = arguments.length;\n    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n    dispatch.of = function(thiz, argumentz) {\n      return function(e1) {\n        try {\n          var e0 = e1.sourceEvent = d3.event;\n          e1.target = target;\n          d3.event = e1;\n          dispatch[e1.type].apply(thiz, argumentz);\n        } finally {\n          d3.event = e0;\n        }\n      };\n    };\n    return dispatch;\n  }\n  d3.requote = function(s) {\n    return s.replace(d3_requote_re, \"\\\\$&\");\n  };\n  var d3_requote_re = /[\\\\\\^\\$\\*\\+\\?\\|\\[\\]\\(\\)\\.\\{\\}]/g;\n  var d3_subclass = {}.__proto__ ? function(object, prototype) {\n    object.__proto__ = prototype;\n  } : function(object, prototype) {\n    for (var property in prototype) object[property] = prototype[property];\n  };\n  function d3_selection(groups) {\n    d3_subclass(groups, d3_selectionPrototype);\n    return groups;\n  }\n  var d3_select = function(s, n) {\n    return n.querySelector(s);\n  }, d3_selectAll = function(s, n) {\n    return n.querySelectorAll(s);\n  }, d3_selectMatches = function(n, s) {\n    var d3_selectMatcher = n.matches || n[d3_vendorSymbol(n, \"matchesSelector\")];\n    d3_selectMatches = function(n, s) {\n      return d3_selectMatcher.call(n, s);\n    };\n    return d3_selectMatches(n, s);\n  };\n  if (typeof Sizzle === \"function\") {\n    d3_select = function(s, n) {\n      return Sizzle(s, n)[0] || null;\n    };\n    d3_selectAll = Sizzle;\n    d3_selectMatches = Sizzle.matchesSelector;\n  }\n  d3.selection = function() {\n    return d3.select(d3_document.documentElement);\n  };\n  var d3_selectionPrototype = d3.selection.prototype = [];\n  d3_selectionPrototype.select = function(selector) {\n    var subgroups = [], subgroup, subnode, group, node;\n    selector = d3_selection_selector(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = (group = this[j]).parentNode;\n      for (var i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroup.push(subnode = selector.call(node, node.__data__, i, j));\n          if (subnode && \"__data__\" in node) subnode.__data__ = node.__data__;\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_selector(selector) {\n    return typeof selector === \"function\" ? selector : function() {\n      return d3_select(selector, this);\n    };\n  }\n  d3_selectionPrototype.selectAll = function(selector) {\n    var subgroups = [], subgroup, node;\n    selector = d3_selection_selectorAll(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroups.push(subgroup = d3_array(selector.call(node, node.__data__, i, j)));\n          subgroup.parentNode = node;\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_selectorAll(selector) {\n    return typeof selector === \"function\" ? selector : function() {\n      return d3_selectAll(selector, this);\n    };\n  }\n  var d3_nsPrefix = {\n    svg: \"http://www.w3.org/2000/svg\",\n    xhtml: \"http://www.w3.org/1999/xhtml\",\n    xlink: \"http://www.w3.org/1999/xlink\",\n    xml: \"http://www.w3.org/XML/1998/namespace\",\n    xmlns: \"http://www.w3.org/2000/xmlns/\"\n  };\n  d3.ns = {\n    prefix: d3_nsPrefix,\n    qualify: function(name) {\n      var i = name.indexOf(\":\"), prefix = name;\n      if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n      return d3_nsPrefix.hasOwnProperty(prefix) ? {\n        space: d3_nsPrefix[prefix],\n        local: name\n      } : name;\n    }\n  };\n  d3_selectionPrototype.attr = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") {\n        var node = this.node();\n        name = d3.ns.qualify(name);\n        return name.local ? node.getAttributeNS(name.space, name.local) : node.getAttribute(name);\n      }\n      for (value in name) this.each(d3_selection_attr(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_attr(name, value));\n  };\n  function d3_selection_attr(name, value) {\n    name = d3.ns.qualify(name);\n    function attrNull() {\n      this.removeAttribute(name);\n    }\n    function attrNullNS() {\n      this.removeAttributeNS(name.space, name.local);\n    }\n    function attrConstant() {\n      this.setAttribute(name, value);\n    }\n    function attrConstantNS() {\n      this.setAttributeNS(name.space, name.local, value);\n    }\n    function attrFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.removeAttribute(name); else this.setAttribute(name, x);\n    }\n    function attrFunctionNS() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.removeAttributeNS(name.space, name.local); else this.setAttributeNS(name.space, name.local, x);\n    }\n    return value == null ? name.local ? attrNullNS : attrNull : typeof value === \"function\" ? name.local ? attrFunctionNS : attrFunction : name.local ? attrConstantNS : attrConstant;\n  }\n  function d3_collapse(s) {\n    return s.trim().replace(/\\s+/g, \" \");\n  }\n  d3_selectionPrototype.classed = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") {\n        var node = this.node(), n = (name = d3_selection_classes(name)).length, i = -1;\n        if (value = node.classList) {\n          while (++i < n) if (!value.contains(name[i])) return false;\n        } else {\n          value = node.getAttribute(\"class\");\n          while (++i < n) if (!d3_selection_classedRe(name[i]).test(value)) return false;\n        }\n        return true;\n      }\n      for (value in name) this.each(d3_selection_classed(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_classed(name, value));\n  };\n  function d3_selection_classedRe(name) {\n    return new RegExp(\"(?:^|\\\\s+)\" + d3.requote(name) + \"(?:\\\\s+|$)\", \"g\");\n  }\n  function d3_selection_classes(name) {\n    return (name + \"\").trim().split(/^|\\s+/);\n  }\n  function d3_selection_classed(name, value) {\n    name = d3_selection_classes(name).map(d3_selection_classedName);\n    var n = name.length;\n    function classedConstant() {\n      var i = -1;\n      while (++i < n) name[i](this, value);\n    }\n    function classedFunction() {\n      var i = -1, x = value.apply(this, arguments);\n      while (++i < n) name[i](this, x);\n    }\n    return typeof value === \"function\" ? classedFunction : classedConstant;\n  }\n  function d3_selection_classedName(name) {\n    var re = d3_selection_classedRe(name);\n    return function(node, value) {\n      if (c = node.classList) return value ? c.add(name) : c.remove(name);\n      var c = node.getAttribute(\"class\") || \"\";\n      if (value) {\n        re.lastIndex = 0;\n        if (!re.test(c)) node.setAttribute(\"class\", d3_collapse(c + \" \" + name));\n      } else {\n        node.setAttribute(\"class\", d3_collapse(c.replace(re, \" \")));\n      }\n    };\n  }\n  d3_selectionPrototype.style = function(name, value, priority) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof name !== \"string\") {\n        if (n < 2) value = \"\";\n        for (priority in name) this.each(d3_selection_style(priority, name[priority], value));\n        return this;\n      }\n      if (n < 2) {\n        var node = this.node();\n        return d3_window(node).getComputedStyle(node, null).getPropertyValue(name);\n      }\n      priority = \"\";\n    }\n    return this.each(d3_selection_style(name, value, priority));\n  };\n  function d3_selection_style(name, value, priority) {\n    function styleNull() {\n      this.style.removeProperty(name);\n    }\n    function styleConstant() {\n      this.style.setProperty(name, value, priority);\n    }\n    function styleFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.style.removeProperty(name); else this.style.setProperty(name, x, priority);\n    }\n    return value == null ? styleNull : typeof value === \"function\" ? styleFunction : styleConstant;\n  }\n  d3_selectionPrototype.property = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") return this.node()[name];\n      for (value in name) this.each(d3_selection_property(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_property(name, value));\n  };\n  function d3_selection_property(name, value) {\n    function propertyNull() {\n      delete this[name];\n    }\n    function propertyConstant() {\n      this[name] = value;\n    }\n    function propertyFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) delete this[name]; else this[name] = x;\n    }\n    return value == null ? propertyNull : typeof value === \"function\" ? propertyFunction : propertyConstant;\n  }\n  d3_selectionPrototype.text = function(value) {\n    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n      var v = value.apply(this, arguments);\n      this.textContent = v == null ? \"\" : v;\n    } : value == null ? function() {\n      this.textContent = \"\";\n    } : function() {\n      this.textContent = value;\n    }) : this.node().textContent;\n  };\n  d3_selectionPrototype.html = function(value) {\n    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n      var v = value.apply(this, arguments);\n      this.innerHTML = v == null ? \"\" : v;\n    } : value == null ? function() {\n      this.innerHTML = \"\";\n    } : function() {\n      this.innerHTML = value;\n    }) : this.node().innerHTML;\n  };\n  d3_selectionPrototype.append = function(name) {\n    name = d3_selection_creator(name);\n    return this.select(function() {\n      return this.appendChild(name.apply(this, arguments));\n    });\n  };\n  function d3_selection_creator(name) {\n    function create() {\n      var document = this.ownerDocument, namespace = this.namespaceURI;\n      return namespace ? document.createElementNS(namespace, name) : document.createElement(name);\n    }\n    function createNS() {\n      return this.ownerDocument.createElementNS(name.space, name.local);\n    }\n    return typeof name === \"function\" ? name : (name = d3.ns.qualify(name)).local ? createNS : create;\n  }\n  d3_selectionPrototype.insert = function(name, before) {\n    name = d3_selection_creator(name);\n    before = d3_selection_selector(before);\n    return this.select(function() {\n      return this.insertBefore(name.apply(this, arguments), before.apply(this, arguments) || null);\n    });\n  };\n  d3_selectionPrototype.remove = function() {\n    return this.each(d3_selectionRemove);\n  };\n  function d3_selectionRemove() {\n    var parent = this.parentNode;\n    if (parent) parent.removeChild(this);\n  }\n  d3_selectionPrototype.data = function(value, key) {\n    var i = -1, n = this.length, group, node;\n    if (!arguments.length) {\n      value = new Array(n = (group = this[0]).length);\n      while (++i < n) {\n        if (node = group[i]) {\n          value[i] = node.__data__;\n        }\n      }\n      return value;\n    }\n    function bind(group, groupData) {\n      var i, n = group.length, m = groupData.length, n0 = Math.min(n, m), updateNodes = new Array(m), enterNodes = new Array(m), exitNodes = new Array(n), node, nodeData;\n      if (key) {\n        var nodeByKeyValue = new d3_Map(), keyValues = new Array(n), keyValue;\n        for (i = -1; ++i < n; ) {\n          if (node = group[i]) {\n            if (nodeByKeyValue.has(keyValue = key.call(node, node.__data__, i))) {\n              exitNodes[i] = node;\n            } else {\n              nodeByKeyValue.set(keyValue, node);\n            }\n            keyValues[i] = keyValue;\n          }\n        }\n        for (i = -1; ++i < m; ) {\n          if (!(node = nodeByKeyValue.get(keyValue = key.call(groupData, nodeData = groupData[i], i)))) {\n            enterNodes[i] = d3_selection_dataNode(nodeData);\n          } else if (node !== true) {\n            updateNodes[i] = node;\n            node.__data__ = nodeData;\n          }\n          nodeByKeyValue.set(keyValue, true);\n        }\n        for (i = -1; ++i < n; ) {\n          if (i in keyValues && nodeByKeyValue.get(keyValues[i]) !== true) {\n            exitNodes[i] = group[i];\n          }\n        }\n      } else {\n        for (i = -1; ++i < n0; ) {\n          node = group[i];\n          nodeData = groupData[i];\n          if (node) {\n            node.__data__ = nodeData;\n            updateNodes[i] = node;\n          } else {\n            enterNodes[i] = d3_selection_dataNode(nodeData);\n          }\n        }\n        for (;i < m; ++i) {\n          enterNodes[i] = d3_selection_dataNode(groupData[i]);\n        }\n        for (;i < n; ++i) {\n          exitNodes[i] = group[i];\n        }\n      }\n      enterNodes.update = updateNodes;\n      enterNodes.parentNode = updateNodes.parentNode = exitNodes.parentNode = group.parentNode;\n      enter.push(enterNodes);\n      update.push(updateNodes);\n      exit.push(exitNodes);\n    }\n    var enter = d3_selection_enter([]), update = d3_selection([]), exit = d3_selection([]);\n    if (typeof value === \"function\") {\n      while (++i < n) {\n        bind(group = this[i], value.call(group, group.parentNode.__data__, i));\n      }\n    } else {\n      while (++i < n) {\n        bind(group = this[i], value);\n      }\n    }\n    update.enter = function() {\n      return enter;\n    };\n    update.exit = function() {\n      return exit;\n    };\n    return update;\n  };\n  function d3_selection_dataNode(data) {\n    return {\n      __data__: data\n    };\n  }\n  d3_selectionPrototype.datum = function(value) {\n    return arguments.length ? this.property(\"__data__\", value) : this.property(\"__data__\");\n  };\n  d3_selectionPrototype.filter = function(filter) {\n    var subgroups = [], subgroup, group, node;\n    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = (group = this[j]).parentNode;\n      for (var i = 0, n = group.length; i < n; i++) {\n        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n          subgroup.push(node);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_filter(selector) {\n    return function() {\n      return d3_selectMatches(this, selector);\n    };\n  }\n  d3_selectionPrototype.order = function() {\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = group.length - 1, next = group[i], node; --i >= 0; ) {\n        if (node = group[i]) {\n          if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n          next = node;\n        }\n      }\n    }\n    return this;\n  };\n  d3_selectionPrototype.sort = function(comparator) {\n    comparator = d3_selection_sortComparator.apply(this, arguments);\n    for (var j = -1, m = this.length; ++j < m; ) this[j].sort(comparator);\n    return this.order();\n  };\n  function d3_selection_sortComparator(comparator) {\n    if (!arguments.length) comparator = d3_ascending;\n    return function(a, b) {\n      return a && b ? comparator(a.__data__, b.__data__) : !a - !b;\n    };\n  }\n  d3_selectionPrototype.each = function(callback) {\n    return d3_selection_each(this, function(node, i, j) {\n      callback.call(node, node.__data__, i, j);\n    });\n  };\n  function d3_selection_each(groups, callback) {\n    for (var j = 0, m = groups.length; j < m; j++) {\n      for (var group = groups[j], i = 0, n = group.length, node; i < n; i++) {\n        if (node = group[i]) callback(node, i, j);\n      }\n    }\n    return groups;\n  }\n  d3_selectionPrototype.call = function(callback) {\n    var args = d3_array(arguments);\n    callback.apply(args[0] = this, args);\n    return this;\n  };\n  d3_selectionPrototype.empty = function() {\n    return !this.node();\n  };\n  d3_selectionPrototype.node = function() {\n    for (var j = 0, m = this.length; j < m; j++) {\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        var node = group[i];\n        if (node) return node;\n      }\n    }\n    return null;\n  };\n  d3_selectionPrototype.size = function() {\n    var n = 0;\n    d3_selection_each(this, function() {\n      ++n;\n    });\n    return n;\n  };\n  function d3_selection_enter(selection) {\n    d3_subclass(selection, d3_selection_enterPrototype);\n    return selection;\n  }\n  var d3_selection_enterPrototype = [];\n  d3.selection.enter = d3_selection_enter;\n  d3.selection.enter.prototype = d3_selection_enterPrototype;\n  d3_selection_enterPrototype.append = d3_selectionPrototype.append;\n  d3_selection_enterPrototype.empty = d3_selectionPrototype.empty;\n  d3_selection_enterPrototype.node = d3_selectionPrototype.node;\n  d3_selection_enterPrototype.call = d3_selectionPrototype.call;\n  d3_selection_enterPrototype.size = d3_selectionPrototype.size;\n  d3_selection_enterPrototype.select = function(selector) {\n    var subgroups = [], subgroup, subnode, upgroup, group, node;\n    for (var j = -1, m = this.length; ++j < m; ) {\n      upgroup = (group = this[j]).update;\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = group.parentNode;\n      for (var i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroup.push(upgroup[i] = subnode = selector.call(group.parentNode, node.__data__, i, j));\n          subnode.__data__ = node.__data__;\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  d3_selection_enterPrototype.insert = function(name, before) {\n    if (arguments.length < 2) before = d3_selection_enterInsertBefore(this);\n    return d3_selectionPrototype.insert.call(this, name, before);\n  };\n  function d3_selection_enterInsertBefore(enter) {\n    var i0, j0;\n    return function(d, i, j) {\n      var group = enter[j].update, n = group.length, node;\n      if (j != j0) j0 = j, i0 = 0;\n      if (i >= i0) i0 = i + 1;\n      while (!(node = group[i0]) && ++i0 < n) ;\n      return node;\n    };\n  }\n  d3.select = function(node) {\n    var group;\n    if (typeof node === \"string\") {\n      group = [ d3_select(node, d3_document) ];\n      group.parentNode = d3_document.documentElement;\n    } else {\n      group = [ node ];\n      group.parentNode = d3_documentElement(node);\n    }\n    return d3_selection([ group ]);\n  };\n  d3.selectAll = function(nodes) {\n    var group;\n    if (typeof nodes === \"string\") {\n      group = d3_array(d3_selectAll(nodes, d3_document));\n      group.parentNode = d3_document.documentElement;\n    } else {\n      group = d3_array(nodes);\n      group.parentNode = null;\n    }\n    return d3_selection([ group ]);\n  };\n  d3_selectionPrototype.on = function(type, listener, capture) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof type !== \"string\") {\n        if (n < 2) listener = false;\n        for (capture in type) this.each(d3_selection_on(capture, type[capture], listener));\n        return this;\n      }\n      if (n < 2) return (n = this.node()[\"__on\" + type]) && n._;\n      capture = false;\n    }\n    return this.each(d3_selection_on(type, listener, capture));\n  };\n  function d3_selection_on(type, listener, capture) {\n    var name = \"__on\" + type, i = type.indexOf(\".\"), wrap = d3_selection_onListener;\n    if (i > 0) type = type.slice(0, i);\n    var filter = d3_selection_onFilters.get(type);\n    if (filter) type = filter, wrap = d3_selection_onFilter;\n    function onRemove() {\n      var l = this[name];\n      if (l) {\n        this.removeEventListener(type, l, l.$);\n        delete this[name];\n      }\n    }\n    function onAdd() {\n      var l = wrap(listener, d3_array(arguments));\n      onRemove.call(this);\n      this.addEventListener(type, this[name] = l, l.$ = capture);\n      l._ = listener;\n    }\n    function removeAll() {\n      var re = new RegExp(\"^__on([^.]+)\" + d3.requote(type) + \"$\"), match;\n      for (var name in this) {\n        if (match = name.match(re)) {\n          var l = this[name];\n          this.removeEventListener(match[1], l, l.$);\n          delete this[name];\n        }\n      }\n    }\n    return i ? listener ? onAdd : onRemove : listener ? d3_noop : removeAll;\n  }\n  var d3_selection_onFilters = d3.map({\n    mouseenter: \"mouseover\",\n    mouseleave: \"mouseout\"\n  });\n  if (d3_document) {\n    d3_selection_onFilters.forEach(function(k) {\n      if (\"on\" + k in d3_document) d3_selection_onFilters.remove(k);\n    });\n  }\n  function d3_selection_onListener(listener, argumentz) {\n    return function(e) {\n      var o = d3.event;\n      d3.event = e;\n      argumentz[0] = this.__data__;\n      try {\n        listener.apply(this, argumentz);\n      } finally {\n        d3.event = o;\n      }\n    };\n  }\n  function d3_selection_onFilter(listener, argumentz) {\n    var l = d3_selection_onListener(listener, argumentz);\n    return function(e) {\n      var target = this, related = e.relatedTarget;\n      if (!related || related !== target && !(related.compareDocumentPosition(target) & 8)) {\n        l.call(target, e);\n      }\n    };\n  }\n  var d3_event_dragSelect, d3_event_dragId = 0;\n  function d3_event_dragSuppress(node) {\n    var name = \".dragsuppress-\" + ++d3_event_dragId, click = \"click\" + name, w = d3.select(d3_window(node)).on(\"touchmove\" + name, d3_eventPreventDefault).on(\"dragstart\" + name, d3_eventPreventDefault).on(\"selectstart\" + name, d3_eventPreventDefault);\n    if (d3_event_dragSelect == null) {\n      d3_event_dragSelect = \"onselectstart\" in node ? false : d3_vendorSymbol(node.style, \"userSelect\");\n    }\n    if (d3_event_dragSelect) {\n      var style = d3_documentElement(node).style, select = style[d3_event_dragSelect];\n      style[d3_event_dragSelect] = \"none\";\n    }\n    return function(suppressClick) {\n      w.on(name, null);\n      if (d3_event_dragSelect) style[d3_event_dragSelect] = select;\n      if (suppressClick) {\n        var off = function() {\n          w.on(click, null);\n        };\n        w.on(click, function() {\n          d3_eventPreventDefault();\n          off();\n        }, true);\n        setTimeout(off, 0);\n      }\n    };\n  }\n  d3.mouse = function(container) {\n    return d3_mousePoint(container, d3_eventSource());\n  };\n  var d3_mouse_bug44083 = this.navigator && /WebKit/.test(this.navigator.userAgent) ? -1 : 0;\n  function d3_mousePoint(container, e) {\n    if (e.changedTouches) e = e.changedTouches[0];\n    var svg = container.ownerSVGElement || container;\n    if (svg.createSVGPoint) {\n      var point = svg.createSVGPoint();\n      if (d3_mouse_bug44083 < 0) {\n        var window = d3_window(container);\n        if (window.scrollX || window.scrollY) {\n          svg = d3.select(\"body\").append(\"svg\").style({\n            position: \"absolute\",\n            top: 0,\n            left: 0,\n            margin: 0,\n            padding: 0,\n            border: \"none\"\n          }, \"important\");\n          var ctm = svg[0][0].getScreenCTM();\n          d3_mouse_bug44083 = !(ctm.f || ctm.e);\n          svg.remove();\n        }\n      }\n      if (d3_mouse_bug44083) point.x = e.pageX, point.y = e.pageY; else point.x = e.clientX, \n      point.y = e.clientY;\n      point = point.matrixTransform(container.getScreenCTM().inverse());\n      return [ point.x, point.y ];\n    }\n    var rect = container.getBoundingClientRect();\n    return [ e.clientX - rect.left - container.clientLeft, e.clientY - rect.top - container.clientTop ];\n  }\n  d3.touch = function(container, touches, identifier) {\n    if (arguments.length < 3) identifier = touches, touches = d3_eventSource().changedTouches;\n    if (touches) for (var i = 0, n = touches.length, touch; i < n; ++i) {\n      if ((touch = touches[i]).identifier === identifier) {\n        return d3_mousePoint(container, touch);\n      }\n    }\n  };\n  d3.behavior.drag = function() {\n    var event = d3_eventDispatch(drag, \"drag\", \"dragstart\", \"dragend\"), origin = null, mousedown = dragstart(d3_noop, d3.mouse, d3_window, \"mousemove\", \"mouseup\"), touchstart = dragstart(d3_behavior_dragTouchId, d3.touch, d3_identity, \"touchmove\", \"touchend\");\n    function drag() {\n      this.on(\"mousedown.drag\", mousedown).on(\"touchstart.drag\", touchstart);\n    }\n    function dragstart(id, position, subject, move, end) {\n      return function() {\n        var that = this, target = d3.event.target, parent = that.parentNode, dispatch = event.of(that, arguments), dragged = 0, dragId = id(), dragName = \".drag\" + (dragId == null ? \"\" : \"-\" + dragId), dragOffset, dragSubject = d3.select(subject(target)).on(move + dragName, moved).on(end + dragName, ended), dragRestore = d3_event_dragSuppress(target), position0 = position(parent, dragId);\n        if (origin) {\n          dragOffset = origin.apply(that, arguments);\n          dragOffset = [ dragOffset.x - position0[0], dragOffset.y - position0[1] ];\n        } else {\n          dragOffset = [ 0, 0 ];\n        }\n        dispatch({\n          type: \"dragstart\"\n        });\n        function moved() {\n          var position1 = position(parent, dragId), dx, dy;\n          if (!position1) return;\n          dx = position1[0] - position0[0];\n          dy = position1[1] - position0[1];\n          dragged |= dx | dy;\n          position0 = position1;\n          dispatch({\n            type: \"drag\",\n            x: position1[0] + dragOffset[0],\n            y: position1[1] + dragOffset[1],\n            dx: dx,\n            dy: dy\n          });\n        }\n        function ended() {\n          if (!position(parent, dragId)) return;\n          dragSubject.on(move + dragName, null).on(end + dragName, null);\n          dragRestore(dragged);\n          dispatch({\n            type: \"dragend\"\n          });\n        }\n      };\n    }\n    drag.origin = function(x) {\n      if (!arguments.length) return origin;\n      origin = x;\n      return drag;\n    };\n    return d3.rebind(drag, event, \"on\");\n  };\n  function d3_behavior_dragTouchId() {\n    return d3.event.changedTouches[0].identifier;\n  }\n  d3.touches = function(container, touches) {\n    if (arguments.length < 2) touches = d3_eventSource().touches;\n    return touches ? d3_array(touches).map(function(touch) {\n      var point = d3_mousePoint(container, touch);\n      point.identifier = touch.identifier;\n      return point;\n    }) : [];\n  };\n  var ε = 1e-6, ε2 = ε * ε, π = Math.PI, τ = 2 * π, τε = τ - ε, halfπ = π / 2, d3_radians = π / 180, d3_degrees = 180 / π;\n  function d3_sgn(x) {\n    return x > 0 ? 1 : x < 0 ? -1 : 0;\n  }\n  function d3_cross2d(a, b, c) {\n    return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);\n  }\n  function d3_acos(x) {\n    return x > 1 ? 0 : x < -1 ? π : Math.acos(x);\n  }\n  function d3_asin(x) {\n    return x > 1 ? halfπ : x < -1 ? -halfπ : Math.asin(x);\n  }\n  function d3_sinh(x) {\n    return ((x = Math.exp(x)) - 1 / x) / 2;\n  }\n  function d3_cosh(x) {\n    return ((x = Math.exp(x)) + 1 / x) / 2;\n  }\n  function d3_tanh(x) {\n    return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n  }\n  function d3_haversin(x) {\n    return (x = Math.sin(x / 2)) * x;\n  }\n  var ρ = Math.SQRT2, ρ2 = 2, ρ4 = 4;\n  d3.interpolateZoom = function(p0, p1) {\n    var ux0 = p0[0], uy0 = p0[1], w0 = p0[2], ux1 = p1[0], uy1 = p1[1], w1 = p1[2], dx = ux1 - ux0, dy = uy1 - uy0, d2 = dx * dx + dy * dy, i, S;\n    if (d2 < ε2) {\n      S = Math.log(w1 / w0) / ρ;\n      i = function(t) {\n        return [ ux0 + t * dx, uy0 + t * dy, w0 * Math.exp(ρ * t * S) ];\n      };\n    } else {\n      var d1 = Math.sqrt(d2), b0 = (w1 * w1 - w0 * w0 + ρ4 * d2) / (2 * w0 * ρ2 * d1), b1 = (w1 * w1 - w0 * w0 - ρ4 * d2) / (2 * w1 * ρ2 * d1), r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0), r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n      S = (r1 - r0) / ρ;\n      i = function(t) {\n        var s = t * S, coshr0 = d3_cosh(r0), u = w0 / (ρ2 * d1) * (coshr0 * d3_tanh(ρ * s + r0) - d3_sinh(r0));\n        return [ ux0 + u * dx, uy0 + u * dy, w0 * coshr0 / d3_cosh(ρ * s + r0) ];\n      };\n    }\n    i.duration = S * 1e3;\n    return i;\n  };\n  d3.behavior.zoom = function() {\n    var view = {\n      x: 0,\n      y: 0,\n      k: 1\n    }, translate0, center0, center, size = [ 960, 500 ], scaleExtent = d3_behavior_zoomInfinity, duration = 250, zooming = 0, mousedown = \"mousedown.zoom\", mousemove = \"mousemove.zoom\", mouseup = \"mouseup.zoom\", mousewheelTimer, touchstart = \"touchstart.zoom\", touchtime, event = d3_eventDispatch(zoom, \"zoomstart\", \"zoom\", \"zoomend\"), x0, x1, y0, y1;\n    if (!d3_behavior_zoomWheel) {\n      d3_behavior_zoomWheel = \"onwheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n        return -d3.event.deltaY * (d3.event.deltaMode ? 120 : 1);\n      }, \"wheel\") : \"onmousewheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n        return d3.event.wheelDelta;\n      }, \"mousewheel\") : (d3_behavior_zoomDelta = function() {\n        return -d3.event.detail;\n      }, \"MozMousePixelScroll\");\n    }\n    function zoom(g) {\n      g.on(mousedown, mousedowned).on(d3_behavior_zoomWheel + \".zoom\", mousewheeled).on(\"dblclick.zoom\", dblclicked).on(touchstart, touchstarted);\n    }\n    zoom.event = function(g) {\n      g.each(function() {\n        var dispatch = event.of(this, arguments), view1 = view;\n        if (d3_transitionInheritId) {\n          d3.select(this).transition().each(\"start.zoom\", function() {\n            view = this.__chart__ || {\n              x: 0,\n              y: 0,\n              k: 1\n            };\n            zoomstarted(dispatch);\n          }).tween(\"zoom:zoom\", function() {\n            var dx = size[0], dy = size[1], cx = center0 ? center0[0] : dx / 2, cy = center0 ? center0[1] : dy / 2, i = d3.interpolateZoom([ (cx - view.x) / view.k, (cy - view.y) / view.k, dx / view.k ], [ (cx - view1.x) / view1.k, (cy - view1.y) / view1.k, dx / view1.k ]);\n            return function(t) {\n              var l = i(t), k = dx / l[2];\n              this.__chart__ = view = {\n                x: cx - l[0] * k,\n                y: cy - l[1] * k,\n                k: k\n              };\n              zoomed(dispatch);\n            };\n          }).each(\"interrupt.zoom\", function() {\n            zoomended(dispatch);\n          }).each(\"end.zoom\", function() {\n            zoomended(dispatch);\n          });\n        } else {\n          this.__chart__ = view;\n          zoomstarted(dispatch);\n          zoomed(dispatch);\n          zoomended(dispatch);\n        }\n      });\n    };\n    zoom.translate = function(_) {\n      if (!arguments.length) return [ view.x, view.y ];\n      view = {\n        x: +_[0],\n        y: +_[1],\n        k: view.k\n      };\n      rescale();\n      return zoom;\n    };\n    zoom.scale = function(_) {\n      if (!arguments.length) return view.k;\n      view = {\n        x: view.x,\n        y: view.y,\n        k: null\n      };\n      scaleTo(+_);\n      rescale();\n      return zoom;\n    };\n    zoom.scaleExtent = function(_) {\n      if (!arguments.length) return scaleExtent;\n      scaleExtent = _ == null ? d3_behavior_zoomInfinity : [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.center = function(_) {\n      if (!arguments.length) return center;\n      center = _ && [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.size = function(_) {\n      if (!arguments.length) return size;\n      size = _ && [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.duration = function(_) {\n      if (!arguments.length) return duration;\n      duration = +_;\n      return zoom;\n    };\n    zoom.x = function(z) {\n      if (!arguments.length) return x1;\n      x1 = z;\n      x0 = z.copy();\n      view = {\n        x: 0,\n        y: 0,\n        k: 1\n      };\n      return zoom;\n    };\n    zoom.y = function(z) {\n      if (!arguments.length) return y1;\n      y1 = z;\n      y0 = z.copy();\n      view = {\n        x: 0,\n        y: 0,\n        k: 1\n      };\n      return zoom;\n    };\n    function location(p) {\n      return [ (p[0] - view.x) / view.k, (p[1] - view.y) / view.k ];\n    }\n    function point(l) {\n      return [ l[0] * view.k + view.x, l[1] * view.k + view.y ];\n    }\n    function scaleTo(s) {\n      view.k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], s));\n    }\n    function translateTo(p, l) {\n      l = point(l);\n      view.x += p[0] - l[0];\n      view.y += p[1] - l[1];\n    }\n    function zoomTo(that, p, l, k) {\n      that.__chart__ = {\n        x: view.x,\n        y: view.y,\n        k: view.k\n      };\n      scaleTo(Math.pow(2, k));\n      translateTo(center0 = p, l);\n      that = d3.select(that);\n      if (duration > 0) that = that.transition().duration(duration);\n      that.call(zoom.event);\n    }\n    function rescale() {\n      if (x1) x1.domain(x0.range().map(function(x) {\n        return (x - view.x) / view.k;\n      }).map(x0.invert));\n      if (y1) y1.domain(y0.range().map(function(y) {\n        return (y - view.y) / view.k;\n      }).map(y0.invert));\n    }\n    function zoomstarted(dispatch) {\n      if (!zooming++) dispatch({\n        type: \"zoomstart\"\n      });\n    }\n    function zoomed(dispatch) {\n      rescale();\n      dispatch({\n        type: \"zoom\",\n        scale: view.k,\n        translate: [ view.x, view.y ]\n      });\n    }\n    function zoomended(dispatch) {\n      if (!--zooming) dispatch({\n        type: \"zoomend\"\n      }), center0 = null;\n    }\n    function mousedowned() {\n      var that = this, dispatch = event.of(that, arguments), dragged = 0, subject = d3.select(d3_window(that)).on(mousemove, moved).on(mouseup, ended), location0 = location(d3.mouse(that)), dragRestore = d3_event_dragSuppress(that);\n      d3_selection_interrupt.call(that);\n      zoomstarted(dispatch);\n      function moved() {\n        dragged = 1;\n        translateTo(d3.mouse(that), location0);\n        zoomed(dispatch);\n      }\n      function ended() {\n        subject.on(mousemove, null).on(mouseup, null);\n        dragRestore(dragged);\n        zoomended(dispatch);\n      }\n    }\n    function touchstarted() {\n      var that = this, dispatch = event.of(that, arguments), locations0 = {}, distance0 = 0, scale0, zoomName = \".zoom-\" + d3.event.changedTouches[0].identifier, touchmove = \"touchmove\" + zoomName, touchend = \"touchend\" + zoomName, targets = [], subject = d3.select(that), dragRestore = d3_event_dragSuppress(that);\n      started();\n      zoomstarted(dispatch);\n      subject.on(mousedown, null).on(touchstart, started);\n      function relocate() {\n        var touches = d3.touches(that);\n        scale0 = view.k;\n        touches.forEach(function(t) {\n          if (t.identifier in locations0) locations0[t.identifier] = location(t);\n        });\n        return touches;\n      }\n      function started() {\n        var target = d3.event.target;\n        d3.select(target).on(touchmove, moved).on(touchend, ended);\n        targets.push(target);\n        var changed = d3.event.changedTouches;\n        for (var i = 0, n = changed.length; i < n; ++i) {\n          locations0[changed[i].identifier] = null;\n        }\n        var touches = relocate(), now = Date.now();\n        if (touches.length === 1) {\n          if (now - touchtime < 500) {\n            var p = touches[0];\n            zoomTo(that, p, locations0[p.identifier], Math.floor(Math.log(view.k) / Math.LN2) + 1);\n            d3_eventPreventDefault();\n          }\n          touchtime = now;\n        } else if (touches.length > 1) {\n          var p = touches[0], q = touches[1], dx = p[0] - q[0], dy = p[1] - q[1];\n          distance0 = dx * dx + dy * dy;\n        }\n      }\n      function moved() {\n        var touches = d3.touches(that), p0, l0, p1, l1;\n        d3_selection_interrupt.call(that);\n        for (var i = 0, n = touches.length; i < n; ++i, l1 = null) {\n          p1 = touches[i];\n          if (l1 = locations0[p1.identifier]) {\n            if (l0) break;\n            p0 = p1, l0 = l1;\n          }\n        }\n        if (l1) {\n          var distance1 = (distance1 = p1[0] - p0[0]) * distance1 + (distance1 = p1[1] - p0[1]) * distance1, scale1 = distance0 && Math.sqrt(distance1 / distance0);\n          p0 = [ (p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2 ];\n          l0 = [ (l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2 ];\n          scaleTo(scale1 * scale0);\n        }\n        touchtime = null;\n        translateTo(p0, l0);\n        zoomed(dispatch);\n      }\n      function ended() {\n        if (d3.event.touches.length) {\n          var changed = d3.event.changedTouches;\n          for (var i = 0, n = changed.length; i < n; ++i) {\n            delete locations0[changed[i].identifier];\n          }\n          for (var identifier in locations0) {\n            return void relocate();\n          }\n        }\n        d3.selectAll(targets).on(zoomName, null);\n        subject.on(mousedown, mousedowned).on(touchstart, touchstarted);\n        dragRestore();\n        zoomended(dispatch);\n      }\n    }\n    function mousewheeled() {\n      var dispatch = event.of(this, arguments);\n      if (mousewheelTimer) clearTimeout(mousewheelTimer); else d3_selection_interrupt.call(this), \n      translate0 = location(center0 = center || d3.mouse(this)), zoomstarted(dispatch);\n      mousewheelTimer = setTimeout(function() {\n        mousewheelTimer = null;\n        zoomended(dispatch);\n      }, 50);\n      d3_eventPreventDefault();\n      scaleTo(Math.pow(2, d3_behavior_zoomDelta() * .002) * view.k);\n      translateTo(center0, translate0);\n      zoomed(dispatch);\n    }\n    function dblclicked() {\n      var p = d3.mouse(this), k = Math.log(view.k) / Math.LN2;\n      zoomTo(this, p, location(p), d3.event.shiftKey ? Math.ceil(k) - 1 : Math.floor(k) + 1);\n    }\n    return d3.rebind(zoom, event, \"on\");\n  };\n  var d3_behavior_zoomInfinity = [ 0, Infinity ], d3_behavior_zoomDelta, d3_behavior_zoomWheel;\n  d3.color = d3_color;\n  function d3_color() {}\n  d3_color.prototype.toString = function() {\n    return this.rgb() + \"\";\n  };\n  d3.hsl = d3_hsl;\n  function d3_hsl(h, s, l) {\n    return this instanceof d3_hsl ? void (this.h = +h, this.s = +s, this.l = +l) : arguments.length < 2 ? h instanceof d3_hsl ? new d3_hsl(h.h, h.s, h.l) : d3_rgb_parse(\"\" + h, d3_rgb_hsl, d3_hsl) : new d3_hsl(h, s, l);\n  }\n  var d3_hslPrototype = d3_hsl.prototype = new d3_color();\n  d3_hslPrototype.brighter = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_hsl(this.h, this.s, this.l / k);\n  };\n  d3_hslPrototype.darker = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_hsl(this.h, this.s, k * this.l);\n  };\n  d3_hslPrototype.rgb = function() {\n    return d3_hsl_rgb(this.h, this.s, this.l);\n  };\n  function d3_hsl_rgb(h, s, l) {\n    var m1, m2;\n    h = isNaN(h) ? 0 : (h %= 360) < 0 ? h + 360 : h;\n    s = isNaN(s) ? 0 : s < 0 ? 0 : s > 1 ? 1 : s;\n    l = l < 0 ? 0 : l > 1 ? 1 : l;\n    m2 = l <= .5 ? l * (1 + s) : l + s - l * s;\n    m1 = 2 * l - m2;\n    function v(h) {\n      if (h > 360) h -= 360; else if (h < 0) h += 360;\n      if (h < 60) return m1 + (m2 - m1) * h / 60;\n      if (h < 180) return m2;\n      if (h < 240) return m1 + (m2 - m1) * (240 - h) / 60;\n      return m1;\n    }\n    function vv(h) {\n      return Math.round(v(h) * 255);\n    }\n    return new d3_rgb(vv(h + 120), vv(h), vv(h - 120));\n  }\n  d3.hcl = d3_hcl;\n  function d3_hcl(h, c, l) {\n    return this instanceof d3_hcl ? void (this.h = +h, this.c = +c, this.l = +l) : arguments.length < 2 ? h instanceof d3_hcl ? new d3_hcl(h.h, h.c, h.l) : h instanceof d3_lab ? d3_lab_hcl(h.l, h.a, h.b) : d3_lab_hcl((h = d3_rgb_lab((h = d3.rgb(h)).r, h.g, h.b)).l, h.a, h.b) : new d3_hcl(h, c, l);\n  }\n  var d3_hclPrototype = d3_hcl.prototype = new d3_color();\n  d3_hclPrototype.brighter = function(k) {\n    return new d3_hcl(this.h, this.c, Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)));\n  };\n  d3_hclPrototype.darker = function(k) {\n    return new d3_hcl(this.h, this.c, Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)));\n  };\n  d3_hclPrototype.rgb = function() {\n    return d3_hcl_lab(this.h, this.c, this.l).rgb();\n  };\n  function d3_hcl_lab(h, c, l) {\n    if (isNaN(h)) h = 0;\n    if (isNaN(c)) c = 0;\n    return new d3_lab(l, Math.cos(h *= d3_radians) * c, Math.sin(h) * c);\n  }\n  d3.lab = d3_lab;\n  function d3_lab(l, a, b) {\n    return this instanceof d3_lab ? void (this.l = +l, this.a = +a, this.b = +b) : arguments.length < 2 ? l instanceof d3_lab ? new d3_lab(l.l, l.a, l.b) : l instanceof d3_hcl ? d3_hcl_lab(l.h, l.c, l.l) : d3_rgb_lab((l = d3_rgb(l)).r, l.g, l.b) : new d3_lab(l, a, b);\n  }\n  var d3_lab_K = 18;\n  var d3_lab_X = .95047, d3_lab_Y = 1, d3_lab_Z = 1.08883;\n  var d3_labPrototype = d3_lab.prototype = new d3_color();\n  d3_labPrototype.brighter = function(k) {\n    return new d3_lab(Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n  };\n  d3_labPrototype.darker = function(k) {\n    return new d3_lab(Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n  };\n  d3_labPrototype.rgb = function() {\n    return d3_lab_rgb(this.l, this.a, this.b);\n  };\n  function d3_lab_rgb(l, a, b) {\n    var y = (l + 16) / 116, x = y + a / 500, z = y - b / 200;\n    x = d3_lab_xyz(x) * d3_lab_X;\n    y = d3_lab_xyz(y) * d3_lab_Y;\n    z = d3_lab_xyz(z) * d3_lab_Z;\n    return new d3_rgb(d3_xyz_rgb(3.2404542 * x - 1.5371385 * y - .4985314 * z), d3_xyz_rgb(-.969266 * x + 1.8760108 * y + .041556 * z), d3_xyz_rgb(.0556434 * x - .2040259 * y + 1.0572252 * z));\n  }\n  function d3_lab_hcl(l, a, b) {\n    return l > 0 ? new d3_hcl(Math.atan2(b, a) * d3_degrees, Math.sqrt(a * a + b * b), l) : new d3_hcl(NaN, NaN, l);\n  }\n  function d3_lab_xyz(x) {\n    return x > .206893034 ? x * x * x : (x - 4 / 29) / 7.787037;\n  }\n  function d3_xyz_lab(x) {\n    return x > .008856 ? Math.pow(x, 1 / 3) : 7.787037 * x + 4 / 29;\n  }\n  function d3_xyz_rgb(r) {\n    return Math.round(255 * (r <= .00304 ? 12.92 * r : 1.055 * Math.pow(r, 1 / 2.4) - .055));\n  }\n  d3.rgb = d3_rgb;\n  function d3_rgb(r, g, b) {\n    return this instanceof d3_rgb ? void (this.r = ~~r, this.g = ~~g, this.b = ~~b) : arguments.length < 2 ? r instanceof d3_rgb ? new d3_rgb(r.r, r.g, r.b) : d3_rgb_parse(\"\" + r, d3_rgb, d3_hsl_rgb) : new d3_rgb(r, g, b);\n  }\n  function d3_rgbNumber(value) {\n    return new d3_rgb(value >> 16, value >> 8 & 255, value & 255);\n  }\n  function d3_rgbString(value) {\n    return d3_rgbNumber(value) + \"\";\n  }\n  var d3_rgbPrototype = d3_rgb.prototype = new d3_color();\n  d3_rgbPrototype.brighter = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    var r = this.r, g = this.g, b = this.b, i = 30;\n    if (!r && !g && !b) return new d3_rgb(i, i, i);\n    if (r && r < i) r = i;\n    if (g && g < i) g = i;\n    if (b && b < i) b = i;\n    return new d3_rgb(Math.min(255, r / k), Math.min(255, g / k), Math.min(255, b / k));\n  };\n  d3_rgbPrototype.darker = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_rgb(k * this.r, k * this.g, k * this.b);\n  };\n  d3_rgbPrototype.hsl = function() {\n    return d3_rgb_hsl(this.r, this.g, this.b);\n  };\n  d3_rgbPrototype.toString = function() {\n    return \"#\" + d3_rgb_hex(this.r) + d3_rgb_hex(this.g) + d3_rgb_hex(this.b);\n  };\n  function d3_rgb_hex(v) {\n    return v < 16 ? \"0\" + Math.max(0, v).toString(16) : Math.min(255, v).toString(16);\n  }\n  function d3_rgb_parse(format, rgb, hsl) {\n    var r = 0, g = 0, b = 0, m1, m2, color;\n    m1 = /([a-z]+)\\((.*)\\)/.exec(format = format.toLowerCase());\n    if (m1) {\n      m2 = m1[2].split(\",\");\n      switch (m1[1]) {\n       case \"hsl\":\n        {\n          return hsl(parseFloat(m2[0]), parseFloat(m2[1]) / 100, parseFloat(m2[2]) / 100);\n        }\n\n       case \"rgb\":\n        {\n          return rgb(d3_rgb_parseNumber(m2[0]), d3_rgb_parseNumber(m2[1]), d3_rgb_parseNumber(m2[2]));\n        }\n      }\n    }\n    if (color = d3_rgb_names.get(format)) {\n      return rgb(color.r, color.g, color.b);\n    }\n    if (format != null && format.charAt(0) === \"#\" && !isNaN(color = parseInt(format.slice(1), 16))) {\n      if (format.length === 4) {\n        r = (color & 3840) >> 4;\n        r = r >> 4 | r;\n        g = color & 240;\n        g = g >> 4 | g;\n        b = color & 15;\n        b = b << 4 | b;\n      } else if (format.length === 7) {\n        r = (color & 16711680) >> 16;\n        g = (color & 65280) >> 8;\n        b = color & 255;\n      }\n    }\n    return rgb(r, g, b);\n  }\n  function d3_rgb_hsl(r, g, b) {\n    var min = Math.min(r /= 255, g /= 255, b /= 255), max = Math.max(r, g, b), d = max - min, h, s, l = (max + min) / 2;\n    if (d) {\n      s = l < .5 ? d / (max + min) : d / (2 - max - min);\n      if (r == max) h = (g - b) / d + (g < b ? 6 : 0); else if (g == max) h = (b - r) / d + 2; else h = (r - g) / d + 4;\n      h *= 60;\n    } else {\n      h = NaN;\n      s = l > 0 && l < 1 ? 0 : h;\n    }\n    return new d3_hsl(h, s, l);\n  }\n  function d3_rgb_lab(r, g, b) {\n    r = d3_rgb_xyz(r);\n    g = d3_rgb_xyz(g);\n    b = d3_rgb_xyz(b);\n    var x = d3_xyz_lab((.4124564 * r + .3575761 * g + .1804375 * b) / d3_lab_X), y = d3_xyz_lab((.2126729 * r + .7151522 * g + .072175 * b) / d3_lab_Y), z = d3_xyz_lab((.0193339 * r + .119192 * g + .9503041 * b) / d3_lab_Z);\n    return d3_lab(116 * y - 16, 500 * (x - y), 200 * (y - z));\n  }\n  function d3_rgb_xyz(r) {\n    return (r /= 255) <= .04045 ? r / 12.92 : Math.pow((r + .055) / 1.055, 2.4);\n  }\n  function d3_rgb_parseNumber(c) {\n    var f = parseFloat(c);\n    return c.charAt(c.length - 1) === \"%\" ? Math.round(f * 2.55) : f;\n  }\n  var d3_rgb_names = d3.map({\n    aliceblue: 15792383,\n    antiquewhite: 16444375,\n    aqua: 65535,\n    aquamarine: 8388564,\n    azure: 15794175,\n    beige: 16119260,\n    bisque: 16770244,\n    black: 0,\n    blanchedalmond: 16772045,\n    blue: 255,\n    blueviolet: 9055202,\n    brown: 10824234,\n    burlywood: 14596231,\n    cadetblue: 6266528,\n    chartreuse: 8388352,\n    chocolate: 13789470,\n    coral: 16744272,\n    cornflowerblue: 6591981,\n    cornsilk: 16775388,\n    crimson: 14423100,\n    cyan: 65535,\n    darkblue: 139,\n    darkcyan: 35723,\n    darkgoldenrod: 12092939,\n    darkgray: 11119017,\n    darkgreen: 25600,\n    darkgrey: 11119017,\n    darkkhaki: 12433259,\n    darkmagenta: 9109643,\n    darkolivegreen: 5597999,\n    darkorange: 16747520,\n    darkorchid: 10040012,\n    darkred: 9109504,\n    darksalmon: 15308410,\n    darkseagreen: 9419919,\n    darkslateblue: 4734347,\n    darkslategray: 3100495,\n    darkslategrey: 3100495,\n    darkturquoise: 52945,\n    darkviolet: 9699539,\n    deeppink: 16716947,\n    deepskyblue: 49151,\n    dimgray: 6908265,\n    dimgrey: 6908265,\n    dodgerblue: 2003199,\n    firebrick: 11674146,\n    floralwhite: 16775920,\n    forestgreen: 2263842,\n    fuchsia: 16711935,\n    gainsboro: 14474460,\n    ghostwhite: 16316671,\n    gold: 16766720,\n    goldenrod: 14329120,\n    gray: 8421504,\n    green: 32768,\n    greenyellow: 11403055,\n    grey: 8421504,\n    honeydew: 15794160,\n    hotpink: 16738740,\n    indianred: 13458524,\n    indigo: 4915330,\n    ivory: 16777200,\n    khaki: 15787660,\n    lavender: 15132410,\n    lavenderblush: 16773365,\n    lawngreen: 8190976,\n    lemonchiffon: 16775885,\n    lightblue: 11393254,\n    lightcoral: 15761536,\n    lightcyan: 14745599,\n    lightgoldenrodyellow: 16448210,\n    lightgray: 13882323,\n    lightgreen: 9498256,\n    lightgrey: 13882323,\n    lightpink: 16758465,\n    lightsalmon: 16752762,\n    lightseagreen: 2142890,\n    lightskyblue: 8900346,\n    lightslategray: 7833753,\n    lightslategrey: 7833753,\n    lightsteelblue: 11584734,\n    lightyellow: 16777184,\n    lime: 65280,\n    limegreen: 3329330,\n    linen: 16445670,\n    magenta: 16711935,\n    maroon: 8388608,\n    mediumaquamarine: 6737322,\n    mediumblue: 205,\n    mediumorchid: 12211667,\n    mediumpurple: 9662683,\n    mediumseagreen: 3978097,\n    mediumslateblue: 8087790,\n    mediumspringgreen: 64154,\n    mediumturquoise: 4772300,\n    mediumvioletred: 13047173,\n    midnightblue: 1644912,\n    mintcream: 16121850,\n    mistyrose: 16770273,\n    moccasin: 16770229,\n    navajowhite: 16768685,\n    navy: 128,\n    oldlace: 16643558,\n    olive: 8421376,\n    olivedrab: 7048739,\n    orange: 16753920,\n    orangered: 16729344,\n    orchid: 14315734,\n    palegoldenrod: 15657130,\n    palegreen: 10025880,\n    paleturquoise: 11529966,\n    palevioletred: 14381203,\n    papayawhip: 16773077,\n    peachpuff: 16767673,\n    peru: 13468991,\n    pink: 16761035,\n    plum: 14524637,\n    powderblue: 11591910,\n    purple: 8388736,\n    rebeccapurple: 6697881,\n    red: 16711680,\n    rosybrown: 12357519,\n    royalblue: 4286945,\n    saddlebrown: 9127187,\n    salmon: 16416882,\n    sandybrown: 16032864,\n    seagreen: 3050327,\n    seashell: 16774638,\n    sienna: 10506797,\n    silver: 12632256,\n    skyblue: 8900331,\n    slateblue: 6970061,\n    slategray: 7372944,\n    slategrey: 7372944,\n    snow: 16775930,\n    springgreen: 65407,\n    steelblue: 4620980,\n    tan: 13808780,\n    teal: 32896,\n    thistle: 14204888,\n    tomato: 16737095,\n    turquoise: 4251856,\n    violet: 15631086,\n    wheat: 16113331,\n    white: 16777215,\n    whitesmoke: 16119285,\n    yellow: 16776960,\n    yellowgreen: 10145074\n  });\n  d3_rgb_names.forEach(function(key, value) {\n    d3_rgb_names.set(key, d3_rgbNumber(value));\n  });\n  function d3_functor(v) {\n    return typeof v === \"function\" ? v : function() {\n      return v;\n    };\n  }\n  d3.functor = d3_functor;\n  d3.xhr = d3_xhrType(d3_identity);\n  function d3_xhrType(response) {\n    return function(url, mimeType, callback) {\n      if (arguments.length === 2 && typeof mimeType === \"function\") callback = mimeType, \n      mimeType = null;\n      return d3_xhr(url, mimeType, response, callback);\n    };\n  }\n  function d3_xhr(url, mimeType, response, callback) {\n    var xhr = {}, dispatch = d3.dispatch(\"beforesend\", \"progress\", \"load\", \"error\"), headers = {}, request = new XMLHttpRequest(), responseType = null;\n    if (this.XDomainRequest && !(\"withCredentials\" in request) && /^(http(s)?:)?\\/\\//.test(url)) request = new XDomainRequest();\n    \"onload\" in request ? request.onload = request.onerror = respond : request.onreadystatechange = function() {\n      request.readyState > 3 && respond();\n    };\n    function respond() {\n      var status = request.status, result;\n      if (!status && d3_xhrHasResponse(request) || status >= 200 && status < 300 || status === 304) {\n        try {\n          result = response.call(xhr, request);\n        } catch (e) {\n          dispatch.error.call(xhr, e);\n          return;\n        }\n        dispatch.load.call(xhr, result);\n      } else {\n        dispatch.error.call(xhr, request);\n      }\n    }\n    request.onprogress = function(event) {\n      var o = d3.event;\n      d3.event = event;\n      try {\n        dispatch.progress.call(xhr, request);\n      } finally {\n        d3.event = o;\n      }\n    };\n    xhr.header = function(name, value) {\n      name = (name + \"\").toLowerCase();\n      if (arguments.length < 2) return headers[name];\n      if (value == null) delete headers[name]; else headers[name] = value + \"\";\n      return xhr;\n    };\n    xhr.mimeType = function(value) {\n      if (!arguments.length) return mimeType;\n      mimeType = value == null ? null : value + \"\";\n      return xhr;\n    };\n    xhr.responseType = function(value) {\n      if (!arguments.length) return responseType;\n      responseType = value;\n      return xhr;\n    };\n    xhr.response = function(value) {\n      response = value;\n      return xhr;\n    };\n    [ \"get\", \"post\" ].forEach(function(method) {\n      xhr[method] = function() {\n        return xhr.send.apply(xhr, [ method ].concat(d3_array(arguments)));\n      };\n    });\n    xhr.send = function(method, data, callback) {\n      if (arguments.length === 2 && typeof data === \"function\") callback = data, data = null;\n      request.open(method, url, true);\n      if (mimeType != null && !(\"accept\" in headers)) headers[\"accept\"] = mimeType + \",*/*\";\n      if (request.setRequestHeader) for (var name in headers) request.setRequestHeader(name, headers[name]);\n      if (mimeType != null && request.overrideMimeType) request.overrideMimeType(mimeType);\n      if (responseType != null) request.responseType = responseType;\n      if (callback != null) xhr.on(\"error\", callback).on(\"load\", function(request) {\n        callback(null, request);\n      });\n      dispatch.beforesend.call(xhr, request);\n      request.send(data == null ? null : data);\n      return xhr;\n    };\n    xhr.abort = function() {\n      request.abort();\n      return xhr;\n    };\n    d3.rebind(xhr, dispatch, \"on\");\n    return callback == null ? xhr : xhr.get(d3_xhr_fixCallback(callback));\n  }\n  function d3_xhr_fixCallback(callback) {\n    return callback.length === 1 ? function(error, request) {\n      callback(error == null ? request : null);\n    } : callback;\n  }\n  function d3_xhrHasResponse(request) {\n    var type = request.responseType;\n    return type && type !== \"text\" ? request.response : request.responseText;\n  }\n  d3.dsv = function(delimiter, mimeType) {\n    var reFormat = new RegExp('[\"' + delimiter + \"\\n]\"), delimiterCode = delimiter.charCodeAt(0);\n    function dsv(url, row, callback) {\n      if (arguments.length < 3) callback = row, row = null;\n      var xhr = d3_xhr(url, mimeType, row == null ? response : typedResponse(row), callback);\n      xhr.row = function(_) {\n        return arguments.length ? xhr.response((row = _) == null ? response : typedResponse(_)) : row;\n      };\n      return xhr;\n    }\n    function response(request) {\n      return dsv.parse(request.responseText);\n    }\n    function typedResponse(f) {\n      return function(request) {\n        return dsv.parse(request.responseText, f);\n      };\n    }\n    dsv.parse = function(text, f) {\n      var o;\n      return dsv.parseRows(text, function(row, i) {\n        if (o) return o(row, i - 1);\n        var a = new Function(\"d\", \"return {\" + row.map(function(name, i) {\n          return JSON.stringify(name) + \": d[\" + i + \"]\";\n        }).join(\",\") + \"}\");\n        o = f ? function(row, i) {\n          return f(a(row), i);\n        } : a;\n      });\n    };\n    dsv.parseRows = function(text, f) {\n      var EOL = {}, EOF = {}, rows = [], N = text.length, I = 0, n = 0, t, eol;\n      function token() {\n        if (I >= N) return EOF;\n        if (eol) return eol = false, EOL;\n        var j = I;\n        if (text.charCodeAt(j) === 34) {\n          var i = j;\n          while (i++ < N) {\n            if (text.charCodeAt(i) === 34) {\n              if (text.charCodeAt(i + 1) !== 34) break;\n              ++i;\n            }\n          }\n          I = i + 2;\n          var c = text.charCodeAt(i + 1);\n          if (c === 13) {\n            eol = true;\n            if (text.charCodeAt(i + 2) === 10) ++I;\n          } else if (c === 10) {\n            eol = true;\n          }\n          return text.slice(j + 1, i).replace(/\"\"/g, '\"');\n        }\n        while (I < N) {\n          var c = text.charCodeAt(I++), k = 1;\n          if (c === 10) eol = true; else if (c === 13) {\n            eol = true;\n            if (text.charCodeAt(I) === 10) ++I, ++k;\n          } else if (c !== delimiterCode) continue;\n          return text.slice(j, I - k);\n        }\n        return text.slice(j);\n      }\n      while ((t = token()) !== EOF) {\n        var a = [];\n        while (t !== EOL && t !== EOF) {\n          a.push(t);\n          t = token();\n        }\n        if (f && (a = f(a, n++)) == null) continue;\n        rows.push(a);\n      }\n      return rows;\n    };\n    dsv.format = function(rows) {\n      if (Array.isArray(rows[0])) return dsv.formatRows(rows);\n      var fieldSet = new d3_Set(), fields = [];\n      rows.forEach(function(row) {\n        for (var field in row) {\n          if (!fieldSet.has(field)) {\n            fields.push(fieldSet.add(field));\n          }\n        }\n      });\n      return [ fields.map(formatValue).join(delimiter) ].concat(rows.map(function(row) {\n        return fields.map(function(field) {\n          return formatValue(row[field]);\n        }).join(delimiter);\n      })).join(\"\\n\");\n    };\n    dsv.formatRows = function(rows) {\n      return rows.map(formatRow).join(\"\\n\");\n    };\n    function formatRow(row) {\n      return row.map(formatValue).join(delimiter);\n    }\n    function formatValue(text) {\n      return reFormat.test(text) ? '\"' + text.replace(/\\\"/g, '\"\"') + '\"' : text;\n    }\n    return dsv;\n  };\n  d3.csv = d3.dsv(\",\", \"text/csv\");\n  d3.tsv = d3.dsv(\"\t\", \"text/tab-separated-values\");\n  var d3_timer_queueHead, d3_timer_queueTail, d3_timer_interval, d3_timer_timeout, d3_timer_frame = this[d3_vendorSymbol(this, \"requestAnimationFrame\")] || function(callback) {\n    setTimeout(callback, 17);\n  };\n  d3.timer = function() {\n    d3_timer.apply(this, arguments);\n  };\n  function d3_timer(callback, delay, then) {\n    var n = arguments.length;\n    if (n < 2) delay = 0;\n    if (n < 3) then = Date.now();\n    var time = then + delay, timer = {\n      c: callback,\n      t: time,\n      n: null\n    };\n    if (d3_timer_queueTail) d3_timer_queueTail.n = timer; else d3_timer_queueHead = timer;\n    d3_timer_queueTail = timer;\n    if (!d3_timer_interval) {\n      d3_timer_timeout = clearTimeout(d3_timer_timeout);\n      d3_timer_interval = 1;\n      d3_timer_frame(d3_timer_step);\n    }\n    return timer;\n  }\n  function d3_timer_step() {\n    var now = d3_timer_mark(), delay = d3_timer_sweep() - now;\n    if (delay > 24) {\n      if (isFinite(delay)) {\n        clearTimeout(d3_timer_timeout);\n        d3_timer_timeout = setTimeout(d3_timer_step, delay);\n      }\n      d3_timer_interval = 0;\n    } else {\n      d3_timer_interval = 1;\n      d3_timer_frame(d3_timer_step);\n    }\n  }\n  d3.timer.flush = function() {\n    d3_timer_mark();\n    d3_timer_sweep();\n  };\n  function d3_timer_mark() {\n    var now = Date.now(), timer = d3_timer_queueHead;\n    while (timer) {\n      if (now >= timer.t && timer.c(now - timer.t)) timer.c = null;\n      timer = timer.n;\n    }\n    return now;\n  }\n  function d3_timer_sweep() {\n    var t0, t1 = d3_timer_queueHead, time = Infinity;\n    while (t1) {\n      if (t1.c) {\n        if (t1.t < time) time = t1.t;\n        t1 = (t0 = t1).n;\n      } else {\n        t1 = t0 ? t0.n = t1.n : d3_timer_queueHead = t1.n;\n      }\n    }\n    d3_timer_queueTail = t0;\n    return time;\n  }\n  function d3_format_precision(x, p) {\n    return p - (x ? Math.ceil(Math.log(x) / Math.LN10) : 1);\n  }\n  d3.round = function(x, n) {\n    return n ? Math.round(x * (n = Math.pow(10, n))) / n : Math.round(x);\n  };\n  var d3_formatPrefixes = [ \"y\", \"z\", \"a\", \"f\", \"p\", \"n\", \"µ\", \"m\", \"\", \"k\", \"M\", \"G\", \"T\", \"P\", \"E\", \"Z\", \"Y\" ].map(d3_formatPrefix);\n  d3.formatPrefix = function(value, precision) {\n    var i = 0;\n    if (value = +value) {\n      if (value < 0) value *= -1;\n      if (precision) value = d3.round(value, d3_format_precision(value, precision));\n      i = 1 + Math.floor(1e-12 + Math.log(value) / Math.LN10);\n      i = Math.max(-24, Math.min(24, Math.floor((i - 1) / 3) * 3));\n    }\n    return d3_formatPrefixes[8 + i / 3];\n  };\n  function d3_formatPrefix(d, i) {\n    var k = Math.pow(10, abs(8 - i) * 3);\n    return {\n      scale: i > 8 ? function(d) {\n        return d / k;\n      } : function(d) {\n        return d * k;\n      },\n      symbol: d\n    };\n  }\n  function d3_locale_numberFormat(locale) {\n    var locale_decimal = locale.decimal, locale_thousands = locale.thousands, locale_grouping = locale.grouping, locale_currency = locale.currency, formatGroup = locale_grouping && locale_thousands ? function(value, width) {\n      var i = value.length, t = [], j = 0, g = locale_grouping[0], length = 0;\n      while (i > 0 && g > 0) {\n        if (length + g + 1 > width) g = Math.max(1, width - length);\n        t.push(value.substring(i -= g, i + g));\n        if ((length += g + 1) > width) break;\n        g = locale_grouping[j = (j + 1) % locale_grouping.length];\n      }\n      return t.reverse().join(locale_thousands);\n    } : d3_identity;\n    return function(specifier) {\n      var match = d3_format_re.exec(specifier), fill = match[1] || \" \", align = match[2] || \">\", sign = match[3] || \"-\", symbol = match[4] || \"\", zfill = match[5], width = +match[6], comma = match[7], precision = match[8], type = match[9], scale = 1, prefix = \"\", suffix = \"\", integer = false, exponent = true;\n      if (precision) precision = +precision.substring(1);\n      if (zfill || fill === \"0\" && align === \"=\") {\n        zfill = fill = \"0\";\n        align = \"=\";\n      }\n      switch (type) {\n       case \"n\":\n        comma = true;\n        type = \"g\";\n        break;\n\n       case \"%\":\n        scale = 100;\n        suffix = \"%\";\n        type = \"f\";\n        break;\n\n       case \"p\":\n        scale = 100;\n        suffix = \"%\";\n        type = \"r\";\n        break;\n\n       case \"b\":\n       case \"o\":\n       case \"x\":\n       case \"X\":\n        if (symbol === \"#\") prefix = \"0\" + type.toLowerCase();\n\n       case \"c\":\n        exponent = false;\n\n       case \"d\":\n        integer = true;\n        precision = 0;\n        break;\n\n       case \"s\":\n        scale = -1;\n        type = \"r\";\n        break;\n      }\n      if (symbol === \"$\") prefix = locale_currency[0], suffix = locale_currency[1];\n      if (type == \"r\" && !precision) type = \"g\";\n      if (precision != null) {\n        if (type == \"g\") precision = Math.max(1, Math.min(21, precision)); else if (type == \"e\" || type == \"f\") precision = Math.max(0, Math.min(20, precision));\n      }\n      type = d3_format_types.get(type) || d3_format_typeDefault;\n      var zcomma = zfill && comma;\n      return function(value) {\n        var fullSuffix = suffix;\n        if (integer && value % 1) return \"\";\n        var negative = value < 0 || value === 0 && 1 / value < 0 ? (value = -value, \"-\") : sign === \"-\" ? \"\" : sign;\n        if (scale < 0) {\n          var unit = d3.formatPrefix(value, precision);\n          value = unit.scale(value);\n          fullSuffix = unit.symbol + suffix;\n        } else {\n          value *= scale;\n        }\n        value = type(value, precision);\n        var i = value.lastIndexOf(\".\"), before, after;\n        if (i < 0) {\n          var j = exponent ? value.lastIndexOf(\"e\") : -1;\n          if (j < 0) before = value, after = \"\"; else before = value.substring(0, j), after = value.substring(j);\n        } else {\n          before = value.substring(0, i);\n          after = locale_decimal + value.substring(i + 1);\n        }\n        if (!zfill && comma) before = formatGroup(before, Infinity);\n        var length = prefix.length + before.length + after.length + (zcomma ? 0 : negative.length), padding = length < width ? new Array(length = width - length + 1).join(fill) : \"\";\n        if (zcomma) before = formatGroup(padding + before, padding.length ? width - after.length : Infinity);\n        negative += prefix;\n        value = before + after;\n        return (align === \"<\" ? negative + value + padding : align === \">\" ? padding + negative + value : align === \"^\" ? padding.substring(0, length >>= 1) + negative + value + padding.substring(length) : negative + (zcomma ? value : padding + value)) + fullSuffix;\n      };\n    };\n  }\n  var d3_format_re = /(?:([^{])?([<>=^]))?([+\\- ])?([$#])?(0)?(\\d+)?(,)?(\\.-?\\d+)?([a-z%])?/i;\n  var d3_format_types = d3.map({\n    b: function(x) {\n      return x.toString(2);\n    },\n    c: function(x) {\n      return String.fromCharCode(x);\n    },\n    o: function(x) {\n      return x.toString(8);\n    },\n    x: function(x) {\n      return x.toString(16);\n    },\n    X: function(x) {\n      return x.toString(16).toUpperCase();\n    },\n    g: function(x, p) {\n      return x.toPrecision(p);\n    },\n    e: function(x, p) {\n      return x.toExponential(p);\n    },\n    f: function(x, p) {\n      return x.toFixed(p);\n    },\n    r: function(x, p) {\n      return (x = d3.round(x, d3_format_precision(x, p))).toFixed(Math.max(0, Math.min(20, d3_format_precision(x * (1 + 1e-15), p))));\n    }\n  });\n  function d3_format_typeDefault(x) {\n    return x + \"\";\n  }\n  var d3_time = d3.time = {}, d3_date = Date;\n  function d3_date_utc() {\n    this._ = new Date(arguments.length > 1 ? Date.UTC.apply(this, arguments) : arguments[0]);\n  }\n  d3_date_utc.prototype = {\n    getDate: function() {\n      return this._.getUTCDate();\n    },\n    getDay: function() {\n      return this._.getUTCDay();\n    },\n    getFullYear: function() {\n      return this._.getUTCFullYear();\n    },\n    getHours: function() {\n      return this._.getUTCHours();\n    },\n    getMilliseconds: function() {\n      return this._.getUTCMilliseconds();\n    },\n    getMinutes: function() {\n      return this._.getUTCMinutes();\n    },\n    getMonth: function() {\n      return this._.getUTCMonth();\n    },\n    getSeconds: function() {\n      return this._.getUTCSeconds();\n    },\n    getTime: function() {\n      return this._.getTime();\n    },\n    getTimezoneOffset: function() {\n      return 0;\n    },\n    valueOf: function() {\n      return this._.valueOf();\n    },\n    setDate: function() {\n      d3_time_prototype.setUTCDate.apply(this._, arguments);\n    },\n    setDay: function() {\n      d3_time_prototype.setUTCDay.apply(this._, arguments);\n    },\n    setFullYear: function() {\n      d3_time_prototype.setUTCFullYear.apply(this._, arguments);\n    },\n    setHours: function() {\n      d3_time_prototype.setUTCHours.apply(this._, arguments);\n    },\n    setMilliseconds: function() {\n      d3_time_prototype.setUTCMilliseconds.apply(this._, arguments);\n    },\n    setMinutes: function() {\n      d3_time_prototype.setUTCMinutes.apply(this._, arguments);\n    },\n    setMonth: function() {\n      d3_time_prototype.setUTCMonth.apply(this._, arguments);\n    },\n    setSeconds: function() {\n      d3_time_prototype.setUTCSeconds.apply(this._, arguments);\n    },\n    setTime: function() {\n      d3_time_prototype.setTime.apply(this._, arguments);\n    }\n  };\n  var d3_time_prototype = Date.prototype;\n  function d3_time_interval(local, step, number) {\n    function round(date) {\n      var d0 = local(date), d1 = offset(d0, 1);\n      return date - d0 < d1 - date ? d0 : d1;\n    }\n    function ceil(date) {\n      step(date = local(new d3_date(date - 1)), 1);\n      return date;\n    }\n    function offset(date, k) {\n      step(date = new d3_date(+date), k);\n      return date;\n    }\n    function range(t0, t1, dt) {\n      var time = ceil(t0), times = [];\n      if (dt > 1) {\n        while (time < t1) {\n          if (!(number(time) % dt)) times.push(new Date(+time));\n          step(time, 1);\n        }\n      } else {\n        while (time < t1) times.push(new Date(+time)), step(time, 1);\n      }\n      return times;\n    }\n    function range_utc(t0, t1, dt) {\n      try {\n        d3_date = d3_date_utc;\n        var utc = new d3_date_utc();\n        utc._ = t0;\n        return range(utc, t1, dt);\n      } finally {\n        d3_date = Date;\n      }\n    }\n    local.floor = local;\n    local.round = round;\n    local.ceil = ceil;\n    local.offset = offset;\n    local.range = range;\n    var utc = local.utc = d3_time_interval_utc(local);\n    utc.floor = utc;\n    utc.round = d3_time_interval_utc(round);\n    utc.ceil = d3_time_interval_utc(ceil);\n    utc.offset = d3_time_interval_utc(offset);\n    utc.range = range_utc;\n    return local;\n  }\n  function d3_time_interval_utc(method) {\n    return function(date, k) {\n      try {\n        d3_date = d3_date_utc;\n        var utc = new d3_date_utc();\n        utc._ = date;\n        return method(utc, k)._;\n      } finally {\n        d3_date = Date;\n      }\n    };\n  }\n  d3_time.year = d3_time_interval(function(date) {\n    date = d3_time.day(date);\n    date.setMonth(0, 1);\n    return date;\n  }, function(date, offset) {\n    date.setFullYear(date.getFullYear() + offset);\n  }, function(date) {\n    return date.getFullYear();\n  });\n  d3_time.years = d3_time.year.range;\n  d3_time.years.utc = d3_time.year.utc.range;\n  d3_time.day = d3_time_interval(function(date) {\n    var day = new d3_date(2e3, 0);\n    day.setFullYear(date.getFullYear(), date.getMonth(), date.getDate());\n    return day;\n  }, function(date, offset) {\n    date.setDate(date.getDate() + offset);\n  }, function(date) {\n    return date.getDate() - 1;\n  });\n  d3_time.days = d3_time.day.range;\n  d3_time.days.utc = d3_time.day.utc.range;\n  d3_time.dayOfYear = function(date) {\n    var year = d3_time.year(date);\n    return Math.floor((date - year - (date.getTimezoneOffset() - year.getTimezoneOffset()) * 6e4) / 864e5);\n  };\n  [ \"sunday\", \"monday\", \"tuesday\", \"wednesday\", \"thursday\", \"friday\", \"saturday\" ].forEach(function(day, i) {\n    i = 7 - i;\n    var interval = d3_time[day] = d3_time_interval(function(date) {\n      (date = d3_time.day(date)).setDate(date.getDate() - (date.getDay() + i) % 7);\n      return date;\n    }, function(date, offset) {\n      date.setDate(date.getDate() + Math.floor(offset) * 7);\n    }, function(date) {\n      var day = d3_time.year(date).getDay();\n      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7) - (day !== i);\n    });\n    d3_time[day + \"s\"] = interval.range;\n    d3_time[day + \"s\"].utc = interval.utc.range;\n    d3_time[day + \"OfYear\"] = function(date) {\n      var day = d3_time.year(date).getDay();\n      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7);\n    };\n  });\n  d3_time.week = d3_time.sunday;\n  d3_time.weeks = d3_time.sunday.range;\n  d3_time.weeks.utc = d3_time.sunday.utc.range;\n  d3_time.weekOfYear = d3_time.sundayOfYear;\n  function d3_locale_timeFormat(locale) {\n    var locale_dateTime = locale.dateTime, locale_date = locale.date, locale_time = locale.time, locale_periods = locale.periods, locale_days = locale.days, locale_shortDays = locale.shortDays, locale_months = locale.months, locale_shortMonths = locale.shortMonths;\n    function d3_time_format(template) {\n      var n = template.length;\n      function format(date) {\n        var string = [], i = -1, j = 0, c, p, f;\n        while (++i < n) {\n          if (template.charCodeAt(i) === 37) {\n            string.push(template.slice(j, i));\n            if ((p = d3_time_formatPads[c = template.charAt(++i)]) != null) c = template.charAt(++i);\n            if (f = d3_time_formats[c]) c = f(date, p == null ? c === \"e\" ? \" \" : \"0\" : p);\n            string.push(c);\n            j = i + 1;\n          }\n        }\n        string.push(template.slice(j, i));\n        return string.join(\"\");\n      }\n      format.parse = function(string) {\n        var d = {\n          y: 1900,\n          m: 0,\n          d: 1,\n          H: 0,\n          M: 0,\n          S: 0,\n          L: 0,\n          Z: null\n        }, i = d3_time_parse(d, template, string, 0);\n        if (i != string.length) return null;\n        if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n        var localZ = d.Z != null && d3_date !== d3_date_utc, date = new (localZ ? d3_date_utc : d3_date)();\n        if (\"j\" in d) date.setFullYear(d.y, 0, d.j); else if (\"W\" in d || \"U\" in d) {\n          if (!(\"w\" in d)) d.w = \"W\" in d ? 1 : 0;\n          date.setFullYear(d.y, 0, 1);\n          date.setFullYear(d.y, 0, \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (date.getDay() + 5) % 7 : d.w + d.U * 7 - (date.getDay() + 6) % 7);\n        } else date.setFullYear(d.y, d.m, d.d);\n        date.setHours(d.H + (d.Z / 100 | 0), d.M + d.Z % 100, d.S, d.L);\n        return localZ ? date._ : date;\n      };\n      format.toString = function() {\n        return template;\n      };\n      return format;\n    }\n    function d3_time_parse(date, template, string, j) {\n      var c, p, t, i = 0, n = template.length, m = string.length;\n      while (i < n) {\n        if (j >= m) return -1;\n        c = template.charCodeAt(i++);\n        if (c === 37) {\n          t = template.charAt(i++);\n          p = d3_time_parsers[t in d3_time_formatPads ? template.charAt(i++) : t];\n          if (!p || (j = p(date, string, j)) < 0) return -1;\n        } else if (c != string.charCodeAt(j++)) {\n          return -1;\n        }\n      }\n      return j;\n    }\n    d3_time_format.utc = function(template) {\n      var local = d3_time_format(template);\n      function format(date) {\n        try {\n          d3_date = d3_date_utc;\n          var utc = new d3_date();\n          utc._ = date;\n          return local(utc);\n        } finally {\n          d3_date = Date;\n        }\n      }\n      format.parse = function(string) {\n        try {\n          d3_date = d3_date_utc;\n          var date = local.parse(string);\n          return date && date._;\n        } finally {\n          d3_date = Date;\n        }\n      };\n      format.toString = local.toString;\n      return format;\n    };\n    d3_time_format.multi = d3_time_format.utc.multi = d3_time_formatMulti;\n    var d3_time_periodLookup = d3.map(), d3_time_dayRe = d3_time_formatRe(locale_days), d3_time_dayLookup = d3_time_formatLookup(locale_days), d3_time_dayAbbrevRe = d3_time_formatRe(locale_shortDays), d3_time_dayAbbrevLookup = d3_time_formatLookup(locale_shortDays), d3_time_monthRe = d3_time_formatRe(locale_months), d3_time_monthLookup = d3_time_formatLookup(locale_months), d3_time_monthAbbrevRe = d3_time_formatRe(locale_shortMonths), d3_time_monthAbbrevLookup = d3_time_formatLookup(locale_shortMonths);\n    locale_periods.forEach(function(p, i) {\n      d3_time_periodLookup.set(p.toLowerCase(), i);\n    });\n    var d3_time_formats = {\n      a: function(d) {\n        return locale_shortDays[d.getDay()];\n      },\n      A: function(d) {\n        return locale_days[d.getDay()];\n      },\n      b: function(d) {\n        return locale_shortMonths[d.getMonth()];\n      },\n      B: function(d) {\n        return locale_months[d.getMonth()];\n      },\n      c: d3_time_format(locale_dateTime),\n      d: function(d, p) {\n        return d3_time_formatPad(d.getDate(), p, 2);\n      },\n      e: function(d, p) {\n        return d3_time_formatPad(d.getDate(), p, 2);\n      },\n      H: function(d, p) {\n        return d3_time_formatPad(d.getHours(), p, 2);\n      },\n      I: function(d, p) {\n        return d3_time_formatPad(d.getHours() % 12 || 12, p, 2);\n      },\n      j: function(d, p) {\n        return d3_time_formatPad(1 + d3_time.dayOfYear(d), p, 3);\n      },\n      L: function(d, p) {\n        return d3_time_formatPad(d.getMilliseconds(), p, 3);\n      },\n      m: function(d, p) {\n        return d3_time_formatPad(d.getMonth() + 1, p, 2);\n      },\n      M: function(d, p) {\n        return d3_time_formatPad(d.getMinutes(), p, 2);\n      },\n      p: function(d) {\n        return locale_periods[+(d.getHours() >= 12)];\n      },\n      S: function(d, p) {\n        return d3_time_formatPad(d.getSeconds(), p, 2);\n      },\n      U: function(d, p) {\n        return d3_time_formatPad(d3_time.sundayOfYear(d), p, 2);\n      },\n      w: function(d) {\n        return d.getDay();\n      },\n      W: function(d, p) {\n        return d3_time_formatPad(d3_time.mondayOfYear(d), p, 2);\n      },\n      x: d3_time_format(locale_date),\n      X: d3_time_format(locale_time),\n      y: function(d, p) {\n        return d3_time_formatPad(d.getFullYear() % 100, p, 2);\n      },\n      Y: function(d, p) {\n        return d3_time_formatPad(d.getFullYear() % 1e4, p, 4);\n      },\n      Z: d3_time_zone,\n      \"%\": function() {\n        return \"%\";\n      }\n    };\n    var d3_time_parsers = {\n      a: d3_time_parseWeekdayAbbrev,\n      A: d3_time_parseWeekday,\n      b: d3_time_parseMonthAbbrev,\n      B: d3_time_parseMonth,\n      c: d3_time_parseLocaleFull,\n      d: d3_time_parseDay,\n      e: d3_time_parseDay,\n      H: d3_time_parseHour24,\n      I: d3_time_parseHour24,\n      j: d3_time_parseDayOfYear,\n      L: d3_time_parseMilliseconds,\n      m: d3_time_parseMonthNumber,\n      M: d3_time_parseMinutes,\n      p: d3_time_parseAmPm,\n      S: d3_time_parseSeconds,\n      U: d3_time_parseWeekNumberSunday,\n      w: d3_time_parseWeekdayNumber,\n      W: d3_time_parseWeekNumberMonday,\n      x: d3_time_parseLocaleDate,\n      X: d3_time_parseLocaleTime,\n      y: d3_time_parseYear,\n      Y: d3_time_parseFullYear,\n      Z: d3_time_parseZone,\n      \"%\": d3_time_parseLiteralPercent\n    };\n    function d3_time_parseWeekdayAbbrev(date, string, i) {\n      d3_time_dayAbbrevRe.lastIndex = 0;\n      var n = d3_time_dayAbbrevRe.exec(string.slice(i));\n      return n ? (date.w = d3_time_dayAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseWeekday(date, string, i) {\n      d3_time_dayRe.lastIndex = 0;\n      var n = d3_time_dayRe.exec(string.slice(i));\n      return n ? (date.w = d3_time_dayLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseMonthAbbrev(date, string, i) {\n      d3_time_monthAbbrevRe.lastIndex = 0;\n      var n = d3_time_monthAbbrevRe.exec(string.slice(i));\n      return n ? (date.m = d3_time_monthAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseMonth(date, string, i) {\n      d3_time_monthRe.lastIndex = 0;\n      var n = d3_time_monthRe.exec(string.slice(i));\n      return n ? (date.m = d3_time_monthLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseLocaleFull(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.c.toString(), string, i);\n    }\n    function d3_time_parseLocaleDate(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.x.toString(), string, i);\n    }\n    function d3_time_parseLocaleTime(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.X.toString(), string, i);\n    }\n    function d3_time_parseAmPm(date, string, i) {\n      var n = d3_time_periodLookup.get(string.slice(i, i += 2).toLowerCase());\n      return n == null ? -1 : (date.p = n, i);\n    }\n    return d3_time_format;\n  }\n  var d3_time_formatPads = {\n    \"-\": \"\",\n    _: \" \",\n    \"0\": \"0\"\n  }, d3_time_numberRe = /^\\s*\\d+/, d3_time_percentRe = /^%/;\n  function d3_time_formatPad(value, fill, width) {\n    var sign = value < 0 ? \"-\" : \"\", string = (sign ? -value : value) + \"\", length = string.length;\n    return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n  }\n  function d3_time_formatRe(names) {\n    return new RegExp(\"^(?:\" + names.map(d3.requote).join(\"|\") + \")\", \"i\");\n  }\n  function d3_time_formatLookup(names) {\n    var map = new d3_Map(), i = -1, n = names.length;\n    while (++i < n) map.set(names[i].toLowerCase(), i);\n    return map;\n  }\n  function d3_time_parseWeekdayNumber(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 1));\n    return n ? (date.w = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseWeekNumberSunday(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i));\n    return n ? (date.U = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseWeekNumberMonday(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i));\n    return n ? (date.W = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseFullYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 4));\n    return n ? (date.y = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.y = d3_time_expandYear(+n[0]), i + n[0].length) : -1;\n  }\n  function d3_time_parseZone(date, string, i) {\n    return /^[+-]\\d{4}$/.test(string = string.slice(i, i + 5)) ? (date.Z = -string, \n    i + 5) : -1;\n  }\n  function d3_time_expandYear(d) {\n    return d + (d > 68 ? 1900 : 2e3);\n  }\n  function d3_time_parseMonthNumber(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.m = n[0] - 1, i + n[0].length) : -1;\n  }\n  function d3_time_parseDay(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.d = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseDayOfYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n    return n ? (date.j = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseHour24(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.H = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseMinutes(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.M = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseSeconds(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.S = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseMilliseconds(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n    return n ? (date.L = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_zone(d) {\n    var z = d.getTimezoneOffset(), zs = z > 0 ? \"-\" : \"+\", zh = abs(z) / 60 | 0, zm = abs(z) % 60;\n    return zs + d3_time_formatPad(zh, \"0\", 2) + d3_time_formatPad(zm, \"0\", 2);\n  }\n  function d3_time_parseLiteralPercent(date, string, i) {\n    d3_time_percentRe.lastIndex = 0;\n    var n = d3_time_percentRe.exec(string.slice(i, i + 1));\n    return n ? i + n[0].length : -1;\n  }\n  function d3_time_formatMulti(formats) {\n    var n = formats.length, i = -1;\n    while (++i < n) formats[i][0] = this(formats[i][0]);\n    return function(date) {\n      var i = 0, f = formats[i];\n      while (!f[1](date)) f = formats[++i];\n      return f[0](date);\n    };\n  }\n  d3.locale = function(locale) {\n    return {\n      numberFormat: d3_locale_numberFormat(locale),\n      timeFormat: d3_locale_timeFormat(locale)\n    };\n  };\n  var d3_locale_enUS = d3.locale({\n    decimal: \".\",\n    thousands: \",\",\n    grouping: [ 3 ],\n    currency: [ \"$\", \"\" ],\n    dateTime: \"%a %b %e %X %Y\",\n    date: \"%m/%d/%Y\",\n    time: \"%H:%M:%S\",\n    periods: [ \"AM\", \"PM\" ],\n    days: [ \"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\" ],\n    shortDays: [ \"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\" ],\n    months: [ \"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\" ],\n    shortMonths: [ \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\" ]\n  });\n  d3.format = d3_locale_enUS.numberFormat;\n  d3.geo = {};\n  function d3_adder() {}\n  d3_adder.prototype = {\n    s: 0,\n    t: 0,\n    add: function(y) {\n      d3_adderSum(y, this.t, d3_adderTemp);\n      d3_adderSum(d3_adderTemp.s, this.s, this);\n      if (this.s) this.t += d3_adderTemp.t; else this.s = d3_adderTemp.t;\n    },\n    reset: function() {\n      this.s = this.t = 0;\n    },\n    valueOf: function() {\n      return this.s;\n    }\n  };\n  var d3_adderTemp = new d3_adder();\n  function d3_adderSum(a, b, o) {\n    var x = o.s = a + b, bv = x - a, av = x - bv;\n    o.t = a - av + (b - bv);\n  }\n  d3.geo.stream = function(object, listener) {\n    if (object && d3_geo_streamObjectType.hasOwnProperty(object.type)) {\n      d3_geo_streamObjectType[object.type](object, listener);\n    } else {\n      d3_geo_streamGeometry(object, listener);\n    }\n  };\n  function d3_geo_streamGeometry(geometry, listener) {\n    if (geometry && d3_geo_streamGeometryType.hasOwnProperty(geometry.type)) {\n      d3_geo_streamGeometryType[geometry.type](geometry, listener);\n    }\n  }\n  var d3_geo_streamObjectType = {\n    Feature: function(feature, listener) {\n      d3_geo_streamGeometry(feature.geometry, listener);\n    },\n    FeatureCollection: function(object, listener) {\n      var features = object.features, i = -1, n = features.length;\n      while (++i < n) d3_geo_streamGeometry(features[i].geometry, listener);\n    }\n  };\n  var d3_geo_streamGeometryType = {\n    Sphere: function(object, listener) {\n      listener.sphere();\n    },\n    Point: function(object, listener) {\n      object = object.coordinates;\n      listener.point(object[0], object[1], object[2]);\n    },\n    MultiPoint: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) object = coordinates[i], listener.point(object[0], object[1], object[2]);\n    },\n    LineString: function(object, listener) {\n      d3_geo_streamLine(object.coordinates, listener, 0);\n    },\n    MultiLineString: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) d3_geo_streamLine(coordinates[i], listener, 0);\n    },\n    Polygon: function(object, listener) {\n      d3_geo_streamPolygon(object.coordinates, listener);\n    },\n    MultiPolygon: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) d3_geo_streamPolygon(coordinates[i], listener);\n    },\n    GeometryCollection: function(object, listener) {\n      var geometries = object.geometries, i = -1, n = geometries.length;\n      while (++i < n) d3_geo_streamGeometry(geometries[i], listener);\n    }\n  };\n  function d3_geo_streamLine(coordinates, listener, closed) {\n    var i = -1, n = coordinates.length - closed, coordinate;\n    listener.lineStart();\n    while (++i < n) coordinate = coordinates[i], listener.point(coordinate[0], coordinate[1], coordinate[2]);\n    listener.lineEnd();\n  }\n  function d3_geo_streamPolygon(coordinates, listener) {\n    var i = -1, n = coordinates.length;\n    listener.polygonStart();\n    while (++i < n) d3_geo_streamLine(coordinates[i], listener, 1);\n    listener.polygonEnd();\n  }\n  d3.geo.area = function(object) {\n    d3_geo_areaSum = 0;\n    d3.geo.stream(object, d3_geo_area);\n    return d3_geo_areaSum;\n  };\n  var d3_geo_areaSum, d3_geo_areaRingSum = new d3_adder();\n  var d3_geo_area = {\n    sphere: function() {\n      d3_geo_areaSum += 4 * π;\n    },\n    point: d3_noop,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: function() {\n      d3_geo_areaRingSum.reset();\n      d3_geo_area.lineStart = d3_geo_areaRingStart;\n    },\n    polygonEnd: function() {\n      var area = 2 * d3_geo_areaRingSum;\n      d3_geo_areaSum += area < 0 ? 4 * π + area : area;\n      d3_geo_area.lineStart = d3_geo_area.lineEnd = d3_geo_area.point = d3_noop;\n    }\n  };\n  function d3_geo_areaRingStart() {\n    var λ00, φ00, λ0, cosφ0, sinφ0;\n    d3_geo_area.point = function(λ, φ) {\n      d3_geo_area.point = nextPoint;\n      λ0 = (λ00 = λ) * d3_radians, cosφ0 = Math.cos(φ = (φ00 = φ) * d3_radians / 2 + π / 4), \n      sinφ0 = Math.sin(φ);\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      φ = φ * d3_radians / 2 + π / 4;\n      var dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, cosφ = Math.cos(φ), sinφ = Math.sin(φ), k = sinφ0 * sinφ, u = cosφ0 * cosφ + k * Math.cos(adλ), v = k * sdλ * Math.sin(adλ);\n      d3_geo_areaRingSum.add(Math.atan2(v, u));\n      λ0 = λ, cosφ0 = cosφ, sinφ0 = sinφ;\n    }\n    d3_geo_area.lineEnd = function() {\n      nextPoint(λ00, φ00);\n    };\n  }\n  function d3_geo_cartesian(spherical) {\n    var λ = spherical[0], φ = spherical[1], cosφ = Math.cos(φ);\n    return [ cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ) ];\n  }\n  function d3_geo_cartesianDot(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n  }\n  function d3_geo_cartesianCross(a, b) {\n    return [ a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0] ];\n  }\n  function d3_geo_cartesianAdd(a, b) {\n    a[0] += b[0];\n    a[1] += b[1];\n    a[2] += b[2];\n  }\n  function d3_geo_cartesianScale(vector, k) {\n    return [ vector[0] * k, vector[1] * k, vector[2] * k ];\n  }\n  function d3_geo_cartesianNormalize(d) {\n    var l = Math.sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n    d[0] /= l;\n    d[1] /= l;\n    d[2] /= l;\n  }\n  function d3_geo_spherical(cartesian) {\n    return [ Math.atan2(cartesian[1], cartesian[0]), d3_asin(cartesian[2]) ];\n  }\n  function d3_geo_sphericalEqual(a, b) {\n    return abs(a[0] - b[0]) < ε && abs(a[1] - b[1]) < ε;\n  }\n  d3.geo.bounds = function() {\n    var λ0, φ0, λ1, φ1, λ_, λ__, φ__, p0, dλSum, ranges, range;\n    var bound = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        bound.point = ringPoint;\n        bound.lineStart = ringStart;\n        bound.lineEnd = ringEnd;\n        dλSum = 0;\n        d3_geo_area.polygonStart();\n      },\n      polygonEnd: function() {\n        d3_geo_area.polygonEnd();\n        bound.point = point;\n        bound.lineStart = lineStart;\n        bound.lineEnd = lineEnd;\n        if (d3_geo_areaRingSum < 0) λ0 = -(λ1 = 180), φ0 = -(φ1 = 90); else if (dλSum > ε) φ1 = 90; else if (dλSum < -ε) φ0 = -90;\n        range[0] = λ0, range[1] = λ1;\n      }\n    };\n    function point(λ, φ) {\n      ranges.push(range = [ λ0 = λ, λ1 = λ ]);\n      if (φ < φ0) φ0 = φ;\n      if (φ > φ1) φ1 = φ;\n    }\n    function linePoint(λ, φ) {\n      var p = d3_geo_cartesian([ λ * d3_radians, φ * d3_radians ]);\n      if (p0) {\n        var normal = d3_geo_cartesianCross(p0, p), equatorial = [ normal[1], -normal[0], 0 ], inflection = d3_geo_cartesianCross(equatorial, normal);\n        d3_geo_cartesianNormalize(inflection);\n        inflection = d3_geo_spherical(inflection);\n        var dλ = λ - λ_, s = dλ > 0 ? 1 : -1, λi = inflection[0] * d3_degrees * s, antimeridian = abs(dλ) > 180;\n        if (antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n          var φi = inflection[1] * d3_degrees;\n          if (φi > φ1) φ1 = φi;\n        } else if (λi = (λi + 360) % 360 - 180, antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n          var φi = -inflection[1] * d3_degrees;\n          if (φi < φ0) φ0 = φi;\n        } else {\n          if (φ < φ0) φ0 = φ;\n          if (φ > φ1) φ1 = φ;\n        }\n        if (antimeridian) {\n          if (λ < λ_) {\n            if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n          } else {\n            if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n          }\n        } else {\n          if (λ1 >= λ0) {\n            if (λ < λ0) λ0 = λ;\n            if (λ > λ1) λ1 = λ;\n          } else {\n            if (λ > λ_) {\n              if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n            } else {\n              if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n            }\n          }\n        }\n      } else {\n        point(λ, φ);\n      }\n      p0 = p, λ_ = λ;\n    }\n    function lineStart() {\n      bound.point = linePoint;\n    }\n    function lineEnd() {\n      range[0] = λ0, range[1] = λ1;\n      bound.point = point;\n      p0 = null;\n    }\n    function ringPoint(λ, φ) {\n      if (p0) {\n        var dλ = λ - λ_;\n        dλSum += abs(dλ) > 180 ? dλ + (dλ > 0 ? 360 : -360) : dλ;\n      } else λ__ = λ, φ__ = φ;\n      d3_geo_area.point(λ, φ);\n      linePoint(λ, φ);\n    }\n    function ringStart() {\n      d3_geo_area.lineStart();\n    }\n    function ringEnd() {\n      ringPoint(λ__, φ__);\n      d3_geo_area.lineEnd();\n      if (abs(dλSum) > ε) λ0 = -(λ1 = 180);\n      range[0] = λ0, range[1] = λ1;\n      p0 = null;\n    }\n    function angle(λ0, λ1) {\n      return (λ1 -= λ0) < 0 ? λ1 + 360 : λ1;\n    }\n    function compareRanges(a, b) {\n      return a[0] - b[0];\n    }\n    function withinRange(x, range) {\n      return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n    }\n    return function(feature) {\n      φ1 = λ1 = -(λ0 = φ0 = Infinity);\n      ranges = [];\n      d3.geo.stream(feature, bound);\n      var n = ranges.length;\n      if (n) {\n        ranges.sort(compareRanges);\n        for (var i = 1, a = ranges[0], b, merged = [ a ]; i < n; ++i) {\n          b = ranges[i];\n          if (withinRange(b[0], a) || withinRange(b[1], a)) {\n            if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n            if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n          } else {\n            merged.push(a = b);\n          }\n        }\n        var best = -Infinity, dλ;\n        for (var n = merged.length - 1, i = 0, a = merged[n], b; i <= n; a = b, ++i) {\n          b = merged[i];\n          if ((dλ = angle(a[1], b[0])) > best) best = dλ, λ0 = b[0], λ1 = a[1];\n        }\n      }\n      ranges = range = null;\n      return λ0 === Infinity || φ0 === Infinity ? [ [ NaN, NaN ], [ NaN, NaN ] ] : [ [ λ0, φ0 ], [ λ1, φ1 ] ];\n    };\n  }();\n  d3.geo.centroid = function(object) {\n    d3_geo_centroidW0 = d3_geo_centroidW1 = d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n    d3.geo.stream(object, d3_geo_centroid);\n    var x = d3_geo_centroidX2, y = d3_geo_centroidY2, z = d3_geo_centroidZ2, m = x * x + y * y + z * z;\n    if (m < ε2) {\n      x = d3_geo_centroidX1, y = d3_geo_centroidY1, z = d3_geo_centroidZ1;\n      if (d3_geo_centroidW1 < ε) x = d3_geo_centroidX0, y = d3_geo_centroidY0, z = d3_geo_centroidZ0;\n      m = x * x + y * y + z * z;\n      if (m < ε2) return [ NaN, NaN ];\n    }\n    return [ Math.atan2(y, x) * d3_degrees, d3_asin(z / Math.sqrt(m)) * d3_degrees ];\n  };\n  var d3_geo_centroidW0, d3_geo_centroidW1, d3_geo_centroidX0, d3_geo_centroidY0, d3_geo_centroidZ0, d3_geo_centroidX1, d3_geo_centroidY1, d3_geo_centroidZ1, d3_geo_centroidX2, d3_geo_centroidY2, d3_geo_centroidZ2;\n  var d3_geo_centroid = {\n    sphere: d3_noop,\n    point: d3_geo_centroidPoint,\n    lineStart: d3_geo_centroidLineStart,\n    lineEnd: d3_geo_centroidLineEnd,\n    polygonStart: function() {\n      d3_geo_centroid.lineStart = d3_geo_centroidRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_centroid.lineStart = d3_geo_centroidLineStart;\n    }\n  };\n  function d3_geo_centroidPoint(λ, φ) {\n    λ *= d3_radians;\n    var cosφ = Math.cos(φ *= d3_radians);\n    d3_geo_centroidPointXYZ(cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ));\n  }\n  function d3_geo_centroidPointXYZ(x, y, z) {\n    ++d3_geo_centroidW0;\n    d3_geo_centroidX0 += (x - d3_geo_centroidX0) / d3_geo_centroidW0;\n    d3_geo_centroidY0 += (y - d3_geo_centroidY0) / d3_geo_centroidW0;\n    d3_geo_centroidZ0 += (z - d3_geo_centroidZ0) / d3_geo_centroidW0;\n  }\n  function d3_geo_centroidLineStart() {\n    var x0, y0, z0;\n    d3_geo_centroid.point = function(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians);\n      x0 = cosφ * Math.cos(λ);\n      y0 = cosφ * Math.sin(λ);\n      z0 = Math.sin(φ);\n      d3_geo_centroid.point = nextPoint;\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), w = Math.atan2(Math.sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n      d3_geo_centroidW1 += w;\n      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    }\n  }\n  function d3_geo_centroidLineEnd() {\n    d3_geo_centroid.point = d3_geo_centroidPoint;\n  }\n  function d3_geo_centroidRingStart() {\n    var λ00, φ00, x0, y0, z0;\n    d3_geo_centroid.point = function(λ, φ) {\n      λ00 = λ, φ00 = φ;\n      d3_geo_centroid.point = nextPoint;\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians);\n      x0 = cosφ * Math.cos(λ);\n      y0 = cosφ * Math.sin(λ);\n      z0 = Math.sin(φ);\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    };\n    d3_geo_centroid.lineEnd = function() {\n      nextPoint(λ00, φ00);\n      d3_geo_centroid.lineEnd = d3_geo_centroidLineEnd;\n      d3_geo_centroid.point = d3_geo_centroidPoint;\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), cx = y0 * z - z0 * y, cy = z0 * x - x0 * z, cz = x0 * y - y0 * x, m = Math.sqrt(cx * cx + cy * cy + cz * cz), u = x0 * x + y0 * y + z0 * z, v = m && -d3_acos(u) / m, w = Math.atan2(m, u);\n      d3_geo_centroidX2 += v * cx;\n      d3_geo_centroidY2 += v * cy;\n      d3_geo_centroidZ2 += v * cz;\n      d3_geo_centroidW1 += w;\n      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    }\n  }\n  function d3_geo_compose(a, b) {\n    function compose(x, y) {\n      return x = a(x, y), b(x[0], x[1]);\n    }\n    if (a.invert && b.invert) compose.invert = function(x, y) {\n      return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n    };\n    return compose;\n  }\n  function d3_true() {\n    return true;\n  }\n  function d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener) {\n    var subject = [], clip = [];\n    segments.forEach(function(segment) {\n      if ((n = segment.length - 1) <= 0) return;\n      var n, p0 = segment[0], p1 = segment[n];\n      if (d3_geo_sphericalEqual(p0, p1)) {\n        listener.lineStart();\n        for (var i = 0; i < n; ++i) listener.point((p0 = segment[i])[0], p0[1]);\n        listener.lineEnd();\n        return;\n      }\n      var a = new d3_geo_clipPolygonIntersection(p0, segment, null, true), b = new d3_geo_clipPolygonIntersection(p0, null, a, false);\n      a.o = b;\n      subject.push(a);\n      clip.push(b);\n      a = new d3_geo_clipPolygonIntersection(p1, segment, null, false);\n      b = new d3_geo_clipPolygonIntersection(p1, null, a, true);\n      a.o = b;\n      subject.push(a);\n      clip.push(b);\n    });\n    clip.sort(compare);\n    d3_geo_clipPolygonLinkCircular(subject);\n    d3_geo_clipPolygonLinkCircular(clip);\n    if (!subject.length) return;\n    for (var i = 0, entry = clipStartInside, n = clip.length; i < n; ++i) {\n      clip[i].e = entry = !entry;\n    }\n    var start = subject[0], points, point;\n    while (1) {\n      var current = start, isSubject = true;\n      while (current.v) if ((current = current.n) === start) return;\n      points = current.z;\n      listener.lineStart();\n      do {\n        current.v = current.o.v = true;\n        if (current.e) {\n          if (isSubject) {\n            for (var i = 0, n = points.length; i < n; ++i) listener.point((point = points[i])[0], point[1]);\n          } else {\n            interpolate(current.x, current.n.x, 1, listener);\n          }\n          current = current.n;\n        } else {\n          if (isSubject) {\n            points = current.p.z;\n            for (var i = points.length - 1; i >= 0; --i) listener.point((point = points[i])[0], point[1]);\n          } else {\n            interpolate(current.x, current.p.x, -1, listener);\n          }\n          current = current.p;\n        }\n        current = current.o;\n        points = current.z;\n        isSubject = !isSubject;\n      } while (!current.v);\n      listener.lineEnd();\n    }\n  }\n  function d3_geo_clipPolygonLinkCircular(array) {\n    if (!(n = array.length)) return;\n    var n, i = 0, a = array[0], b;\n    while (++i < n) {\n      a.n = b = array[i];\n      b.p = a;\n      a = b;\n    }\n    a.n = b = array[0];\n    b.p = a;\n  }\n  function d3_geo_clipPolygonIntersection(point, points, other, entry) {\n    this.x = point;\n    this.z = points;\n    this.o = other;\n    this.e = entry;\n    this.v = false;\n    this.n = this.p = null;\n  }\n  function d3_geo_clip(pointVisible, clipLine, interpolate, clipStart) {\n    return function(rotate, listener) {\n      var line = clipLine(listener), rotatedClipStart = rotate.invert(clipStart[0], clipStart[1]);\n      var clip = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          clip.point = pointRing;\n          clip.lineStart = ringStart;\n          clip.lineEnd = ringEnd;\n          segments = [];\n          polygon = [];\n        },\n        polygonEnd: function() {\n          clip.point = point;\n          clip.lineStart = lineStart;\n          clip.lineEnd = lineEnd;\n          segments = d3.merge(segments);\n          var clipStartInside = d3_geo_pointInPolygon(rotatedClipStart, polygon);\n          if (segments.length) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            d3_geo_clipPolygon(segments, d3_geo_clipSort, clipStartInside, interpolate, listener);\n          } else if (clipStartInside) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            listener.lineStart();\n            interpolate(null, null, 1, listener);\n            listener.lineEnd();\n          }\n          if (polygonStarted) listener.polygonEnd(), polygonStarted = false;\n          segments = polygon = null;\n        },\n        sphere: function() {\n          listener.polygonStart();\n          listener.lineStart();\n          interpolate(null, null, 1, listener);\n          listener.lineEnd();\n          listener.polygonEnd();\n        }\n      };\n      function point(λ, φ) {\n        var point = rotate(λ, φ);\n        if (pointVisible(λ = point[0], φ = point[1])) listener.point(λ, φ);\n      }\n      function pointLine(λ, φ) {\n        var point = rotate(λ, φ);\n        line.point(point[0], point[1]);\n      }\n      function lineStart() {\n        clip.point = pointLine;\n        line.lineStart();\n      }\n      function lineEnd() {\n        clip.point = point;\n        line.lineEnd();\n      }\n      var segments;\n      var buffer = d3_geo_clipBufferListener(), ringListener = clipLine(buffer), polygonStarted = false, polygon, ring;\n      function pointRing(λ, φ) {\n        ring.push([ λ, φ ]);\n        var point = rotate(λ, φ);\n        ringListener.point(point[0], point[1]);\n      }\n      function ringStart() {\n        ringListener.lineStart();\n        ring = [];\n      }\n      function ringEnd() {\n        pointRing(ring[0][0], ring[0][1]);\n        ringListener.lineEnd();\n        var clean = ringListener.clean(), ringSegments = buffer.buffer(), segment, n = ringSegments.length;\n        ring.pop();\n        polygon.push(ring);\n        ring = null;\n        if (!n) return;\n        if (clean & 1) {\n          segment = ringSegments[0];\n          var n = segment.length - 1, i = -1, point;\n          if (n > 0) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            listener.lineStart();\n            while (++i < n) listener.point((point = segment[i])[0], point[1]);\n            listener.lineEnd();\n          }\n          return;\n        }\n        if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n        segments.push(ringSegments.filter(d3_geo_clipSegmentLength1));\n      }\n      return clip;\n    };\n  }\n  function d3_geo_clipSegmentLength1(segment) {\n    return segment.length > 1;\n  }\n  function d3_geo_clipBufferListener() {\n    var lines = [], line;\n    return {\n      lineStart: function() {\n        lines.push(line = []);\n      },\n      point: function(λ, φ) {\n        line.push([ λ, φ ]);\n      },\n      lineEnd: d3_noop,\n      buffer: function() {\n        var buffer = lines;\n        lines = [];\n        line = null;\n        return buffer;\n      },\n      rejoin: function() {\n        if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n      }\n    };\n  }\n  function d3_geo_clipSort(a, b) {\n    return ((a = a.x)[0] < 0 ? a[1] - halfπ - ε : halfπ - a[1]) - ((b = b.x)[0] < 0 ? b[1] - halfπ - ε : halfπ - b[1]);\n  }\n  var d3_geo_clipAntimeridian = d3_geo_clip(d3_true, d3_geo_clipAntimeridianLine, d3_geo_clipAntimeridianInterpolate, [ -π, -π / 2 ]);\n  function d3_geo_clipAntimeridianLine(listener) {\n    var λ0 = NaN, φ0 = NaN, sλ0 = NaN, clean;\n    return {\n      lineStart: function() {\n        listener.lineStart();\n        clean = 1;\n      },\n      point: function(λ1, φ1) {\n        var sλ1 = λ1 > 0 ? π : -π, dλ = abs(λ1 - λ0);\n        if (abs(dλ - π) < ε) {\n          listener.point(λ0, φ0 = (φ0 + φ1) / 2 > 0 ? halfπ : -halfπ);\n          listener.point(sλ0, φ0);\n          listener.lineEnd();\n          listener.lineStart();\n          listener.point(sλ1, φ0);\n          listener.point(λ1, φ0);\n          clean = 0;\n        } else if (sλ0 !== sλ1 && dλ >= π) {\n          if (abs(λ0 - sλ0) < ε) λ0 -= sλ0 * ε;\n          if (abs(λ1 - sλ1) < ε) λ1 -= sλ1 * ε;\n          φ0 = d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1);\n          listener.point(sλ0, φ0);\n          listener.lineEnd();\n          listener.lineStart();\n          listener.point(sλ1, φ0);\n          clean = 0;\n        }\n        listener.point(λ0 = λ1, φ0 = φ1);\n        sλ0 = sλ1;\n      },\n      lineEnd: function() {\n        listener.lineEnd();\n        λ0 = φ0 = NaN;\n      },\n      clean: function() {\n        return 2 - clean;\n      }\n    };\n  }\n  function d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1) {\n    var cosφ0, cosφ1, sinλ0_λ1 = Math.sin(λ0 - λ1);\n    return abs(sinλ0_λ1) > ε ? Math.atan((Math.sin(φ0) * (cosφ1 = Math.cos(φ1)) * Math.sin(λ1) - Math.sin(φ1) * (cosφ0 = Math.cos(φ0)) * Math.sin(λ0)) / (cosφ0 * cosφ1 * sinλ0_λ1)) : (φ0 + φ1) / 2;\n  }\n  function d3_geo_clipAntimeridianInterpolate(from, to, direction, listener) {\n    var φ;\n    if (from == null) {\n      φ = direction * halfπ;\n      listener.point(-π, φ);\n      listener.point(0, φ);\n      listener.point(π, φ);\n      listener.point(π, 0);\n      listener.point(π, -φ);\n      listener.point(0, -φ);\n      listener.point(-π, -φ);\n      listener.point(-π, 0);\n      listener.point(-π, φ);\n    } else if (abs(from[0] - to[0]) > ε) {\n      var s = from[0] < to[0] ? π : -π;\n      φ = direction * s / 2;\n      listener.point(-s, φ);\n      listener.point(0, φ);\n      listener.point(s, φ);\n    } else {\n      listener.point(to[0], to[1]);\n    }\n  }\n  function d3_geo_pointInPolygon(point, polygon) {\n    var meridian = point[0], parallel = point[1], meridianNormal = [ Math.sin(meridian), -Math.cos(meridian), 0 ], polarAngle = 0, winding = 0;\n    d3_geo_areaRingSum.reset();\n    for (var i = 0, n = polygon.length; i < n; ++i) {\n      var ring = polygon[i], m = ring.length;\n      if (!m) continue;\n      var point0 = ring[0], λ0 = point0[0], φ0 = point0[1] / 2 + π / 4, sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), j = 1;\n      while (true) {\n        if (j === m) j = 0;\n        point = ring[j];\n        var λ = point[0], φ = point[1] / 2 + π / 4, sinφ = Math.sin(φ), cosφ = Math.cos(φ), dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, antimeridian = adλ > π, k = sinφ0 * sinφ;\n        d3_geo_areaRingSum.add(Math.atan2(k * sdλ * Math.sin(adλ), cosφ0 * cosφ + k * Math.cos(adλ)));\n        polarAngle += antimeridian ? dλ + sdλ * τ : dλ;\n        if (antimeridian ^ λ0 >= meridian ^ λ >= meridian) {\n          var arc = d3_geo_cartesianCross(d3_geo_cartesian(point0), d3_geo_cartesian(point));\n          d3_geo_cartesianNormalize(arc);\n          var intersection = d3_geo_cartesianCross(meridianNormal, arc);\n          d3_geo_cartesianNormalize(intersection);\n          var φarc = (antimeridian ^ dλ >= 0 ? -1 : 1) * d3_asin(intersection[2]);\n          if (parallel > φarc || parallel === φarc && (arc[0] || arc[1])) {\n            winding += antimeridian ^ dλ >= 0 ? 1 : -1;\n          }\n        }\n        if (!j++) break;\n        λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ, point0 = point;\n      }\n    }\n    return (polarAngle < -ε || polarAngle < ε && d3_geo_areaRingSum < 0) ^ winding & 1;\n  }\n  function d3_geo_clipCircle(radius) {\n    var cr = Math.cos(radius), smallRadius = cr > 0, notHemisphere = abs(cr) > ε, interpolate = d3_geo_circleInterpolate(radius, 6 * d3_radians);\n    return d3_geo_clip(visible, clipLine, interpolate, smallRadius ? [ 0, -radius ] : [ -π, radius - π ]);\n    function visible(λ, φ) {\n      return Math.cos(λ) * Math.cos(φ) > cr;\n    }\n    function clipLine(listener) {\n      var point0, c0, v0, v00, clean;\n      return {\n        lineStart: function() {\n          v00 = v0 = false;\n          clean = 1;\n        },\n        point: function(λ, φ) {\n          var point1 = [ λ, φ ], point2, v = visible(λ, φ), c = smallRadius ? v ? 0 : code(λ, φ) : v ? code(λ + (λ < 0 ? π : -π), φ) : 0;\n          if (!point0 && (v00 = v0 = v)) listener.lineStart();\n          if (v !== v0) {\n            point2 = intersect(point0, point1);\n            if (d3_geo_sphericalEqual(point0, point2) || d3_geo_sphericalEqual(point1, point2)) {\n              point1[0] += ε;\n              point1[1] += ε;\n              v = visible(point1[0], point1[1]);\n            }\n          }\n          if (v !== v0) {\n            clean = 0;\n            if (v) {\n              listener.lineStart();\n              point2 = intersect(point1, point0);\n              listener.point(point2[0], point2[1]);\n            } else {\n              point2 = intersect(point0, point1);\n              listener.point(point2[0], point2[1]);\n              listener.lineEnd();\n            }\n            point0 = point2;\n          } else if (notHemisphere && point0 && smallRadius ^ v) {\n            var t;\n            if (!(c & c0) && (t = intersect(point1, point0, true))) {\n              clean = 0;\n              if (smallRadius) {\n                listener.lineStart();\n                listener.point(t[0][0], t[0][1]);\n                listener.point(t[1][0], t[1][1]);\n                listener.lineEnd();\n              } else {\n                listener.point(t[1][0], t[1][1]);\n                listener.lineEnd();\n                listener.lineStart();\n                listener.point(t[0][0], t[0][1]);\n              }\n            }\n          }\n          if (v && (!point0 || !d3_geo_sphericalEqual(point0, point1))) {\n            listener.point(point1[0], point1[1]);\n          }\n          point0 = point1, v0 = v, c0 = c;\n        },\n        lineEnd: function() {\n          if (v0) listener.lineEnd();\n          point0 = null;\n        },\n        clean: function() {\n          return clean | (v00 && v0) << 1;\n        }\n      };\n    }\n    function intersect(a, b, two) {\n      var pa = d3_geo_cartesian(a), pb = d3_geo_cartesian(b);\n      var n1 = [ 1, 0, 0 ], n2 = d3_geo_cartesianCross(pa, pb), n2n2 = d3_geo_cartesianDot(n2, n2), n1n2 = n2[0], determinant = n2n2 - n1n2 * n1n2;\n      if (!determinant) return !two && a;\n      var c1 = cr * n2n2 / determinant, c2 = -cr * n1n2 / determinant, n1xn2 = d3_geo_cartesianCross(n1, n2), A = d3_geo_cartesianScale(n1, c1), B = d3_geo_cartesianScale(n2, c2);\n      d3_geo_cartesianAdd(A, B);\n      var u = n1xn2, w = d3_geo_cartesianDot(A, u), uu = d3_geo_cartesianDot(u, u), t2 = w * w - uu * (d3_geo_cartesianDot(A, A) - 1);\n      if (t2 < 0) return;\n      var t = Math.sqrt(t2), q = d3_geo_cartesianScale(u, (-w - t) / uu);\n      d3_geo_cartesianAdd(q, A);\n      q = d3_geo_spherical(q);\n      if (!two) return q;\n      var λ0 = a[0], λ1 = b[0], φ0 = a[1], φ1 = b[1], z;\n      if (λ1 < λ0) z = λ0, λ0 = λ1, λ1 = z;\n      var δλ = λ1 - λ0, polar = abs(δλ - π) < ε, meridian = polar || δλ < ε;\n      if (!polar && φ1 < φ0) z = φ0, φ0 = φ1, φ1 = z;\n      if (meridian ? polar ? φ0 + φ1 > 0 ^ q[1] < (abs(q[0] - λ0) < ε ? φ0 : φ1) : φ0 <= q[1] && q[1] <= φ1 : δλ > π ^ (λ0 <= q[0] && q[0] <= λ1)) {\n        var q1 = d3_geo_cartesianScale(u, (-w + t) / uu);\n        d3_geo_cartesianAdd(q1, A);\n        return [ q, d3_geo_spherical(q1) ];\n      }\n    }\n    function code(λ, φ) {\n      var r = smallRadius ? radius : π - radius, code = 0;\n      if (λ < -r) code |= 1; else if (λ > r) code |= 2;\n      if (φ < -r) code |= 4; else if (φ > r) code |= 8;\n      return code;\n    }\n  }\n  function d3_geom_clipLine(x0, y0, x1, y1) {\n    return function(line) {\n      var a = line.a, b = line.b, ax = a.x, ay = a.y, bx = b.x, by = b.y, t0 = 0, t1 = 1, dx = bx - ax, dy = by - ay, r;\n      r = x0 - ax;\n      if (!dx && r > 0) return;\n      r /= dx;\n      if (dx < 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      } else if (dx > 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      }\n      r = x1 - ax;\n      if (!dx && r < 0) return;\n      r /= dx;\n      if (dx < 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      } else if (dx > 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      }\n      r = y0 - ay;\n      if (!dy && r > 0) return;\n      r /= dy;\n      if (dy < 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      } else if (dy > 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      }\n      r = y1 - ay;\n      if (!dy && r < 0) return;\n      r /= dy;\n      if (dy < 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      } else if (dy > 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      }\n      if (t0 > 0) line.a = {\n        x: ax + t0 * dx,\n        y: ay + t0 * dy\n      };\n      if (t1 < 1) line.b = {\n        x: ax + t1 * dx,\n        y: ay + t1 * dy\n      };\n      return line;\n    };\n  }\n  var d3_geo_clipExtentMAX = 1e9;\n  d3.geo.clipExtent = function() {\n    var x0, y0, x1, y1, stream, clip, clipExtent = {\n      stream: function(output) {\n        if (stream) stream.valid = false;\n        stream = clip(output);\n        stream.valid = true;\n        return stream;\n      },\n      extent: function(_) {\n        if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n        clip = d3_geo_clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]);\n        if (stream) stream.valid = false, stream = null;\n        return clipExtent;\n      }\n    };\n    return clipExtent.extent([ [ 0, 0 ], [ 960, 500 ] ]);\n  };\n  function d3_geo_clipExtent(x0, y0, x1, y1) {\n    return function(listener) {\n      var listener_ = listener, bufferListener = d3_geo_clipBufferListener(), clipLine = d3_geom_clipLine(x0, y0, x1, y1), segments, polygon, ring;\n      var clip = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          listener = bufferListener;\n          segments = [];\n          polygon = [];\n          clean = true;\n        },\n        polygonEnd: function() {\n          listener = listener_;\n          segments = d3.merge(segments);\n          var clipStartInside = insidePolygon([ x0, y1 ]), inside = clean && clipStartInside, visible = segments.length;\n          if (inside || visible) {\n            listener.polygonStart();\n            if (inside) {\n              listener.lineStart();\n              interpolate(null, null, 1, listener);\n              listener.lineEnd();\n            }\n            if (visible) {\n              d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener);\n            }\n            listener.polygonEnd();\n          }\n          segments = polygon = ring = null;\n        }\n      };\n      function insidePolygon(p) {\n        var wn = 0, n = polygon.length, y = p[1];\n        for (var i = 0; i < n; ++i) {\n          for (var j = 1, v = polygon[i], m = v.length, a = v[0], b; j < m; ++j) {\n            b = v[j];\n            if (a[1] <= y) {\n              if (b[1] > y && d3_cross2d(a, b, p) > 0) ++wn;\n            } else {\n              if (b[1] <= y && d3_cross2d(a, b, p) < 0) --wn;\n            }\n            a = b;\n          }\n        }\n        return wn !== 0;\n      }\n      function interpolate(from, to, direction, listener) {\n        var a = 0, a1 = 0;\n        if (from == null || (a = corner(from, direction)) !== (a1 = corner(to, direction)) || comparePoints(from, to) < 0 ^ direction > 0) {\n          do {\n            listener.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n          } while ((a = (a + direction + 4) % 4) !== a1);\n        } else {\n          listener.point(to[0], to[1]);\n        }\n      }\n      function pointVisible(x, y) {\n        return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n      }\n      function point(x, y) {\n        if (pointVisible(x, y)) listener.point(x, y);\n      }\n      var x__, y__, v__, x_, y_, v_, first, clean;\n      function lineStart() {\n        clip.point = linePoint;\n        if (polygon) polygon.push(ring = []);\n        first = true;\n        v_ = false;\n        x_ = y_ = NaN;\n      }\n      function lineEnd() {\n        if (segments) {\n          linePoint(x__, y__);\n          if (v__ && v_) bufferListener.rejoin();\n          segments.push(bufferListener.buffer());\n        }\n        clip.point = point;\n        if (v_) listener.lineEnd();\n      }\n      function linePoint(x, y) {\n        x = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, x));\n        y = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, y));\n        var v = pointVisible(x, y);\n        if (polygon) ring.push([ x, y ]);\n        if (first) {\n          x__ = x, y__ = y, v__ = v;\n          first = false;\n          if (v) {\n            listener.lineStart();\n            listener.point(x, y);\n          }\n        } else {\n          if (v && v_) listener.point(x, y); else {\n            var l = {\n              a: {\n                x: x_,\n                y: y_\n              },\n              b: {\n                x: x,\n                y: y\n              }\n            };\n            if (clipLine(l)) {\n              if (!v_) {\n                listener.lineStart();\n                listener.point(l.a.x, l.a.y);\n              }\n              listener.point(l.b.x, l.b.y);\n              if (!v) listener.lineEnd();\n              clean = false;\n            } else if (v) {\n              listener.lineStart();\n              listener.point(x, y);\n              clean = false;\n            }\n          }\n        }\n        x_ = x, y_ = y, v_ = v;\n      }\n      return clip;\n    };\n    function corner(p, direction) {\n      return abs(p[0] - x0) < ε ? direction > 0 ? 0 : 3 : abs(p[0] - x1) < ε ? direction > 0 ? 2 : 1 : abs(p[1] - y0) < ε ? direction > 0 ? 1 : 0 : direction > 0 ? 3 : 2;\n    }\n    function compare(a, b) {\n      return comparePoints(a.x, b.x);\n    }\n    function comparePoints(a, b) {\n      var ca = corner(a, 1), cb = corner(b, 1);\n      return ca !== cb ? ca - cb : ca === 0 ? b[1] - a[1] : ca === 1 ? a[0] - b[0] : ca === 2 ? a[1] - b[1] : b[0] - a[0];\n    }\n  }\n  function d3_geo_conic(projectAt) {\n    var φ0 = 0, φ1 = π / 3, m = d3_geo_projectionMutator(projectAt), p = m(φ0, φ1);\n    p.parallels = function(_) {\n      if (!arguments.length) return [ φ0 / π * 180, φ1 / π * 180 ];\n      return m(φ0 = _[0] * π / 180, φ1 = _[1] * π / 180);\n    };\n    return p;\n  }\n  function d3_geo_conicEqualArea(φ0, φ1) {\n    var sinφ0 = Math.sin(φ0), n = (sinφ0 + Math.sin(φ1)) / 2, C = 1 + sinφ0 * (2 * n - sinφ0), ρ0 = Math.sqrt(C) / n;\n    function forward(λ, φ) {\n      var ρ = Math.sqrt(C - 2 * n * Math.sin(φ)) / n;\n      return [ ρ * Math.sin(λ *= n), ρ0 - ρ * Math.cos(λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = ρ0 - y;\n      return [ Math.atan2(x, ρ0_y) / n, d3_asin((C - (x * x + ρ0_y * ρ0_y) * n * n) / (2 * n)) ];\n    };\n    return forward;\n  }\n  (d3.geo.conicEqualArea = function() {\n    return d3_geo_conic(d3_geo_conicEqualArea);\n  }).raw = d3_geo_conicEqualArea;\n  d3.geo.albers = function() {\n    return d3.geo.conicEqualArea().rotate([ 96, 0 ]).center([ -.6, 38.7 ]).parallels([ 29.5, 45.5 ]).scale(1070);\n  };\n  d3.geo.albersUsa = function() {\n    var lower48 = d3.geo.albers();\n    var alaska = d3.geo.conicEqualArea().rotate([ 154, 0 ]).center([ -2, 58.5 ]).parallels([ 55, 65 ]);\n    var hawaii = d3.geo.conicEqualArea().rotate([ 157, 0 ]).center([ -3, 19.9 ]).parallels([ 8, 18 ]);\n    var point, pointStream = {\n      point: function(x, y) {\n        point = [ x, y ];\n      }\n    }, lower48Point, alaskaPoint, hawaiiPoint;\n    function albersUsa(coordinates) {\n      var x = coordinates[0], y = coordinates[1];\n      point = null;\n      (lower48Point(x, y), point) || (alaskaPoint(x, y), point) || hawaiiPoint(x, y);\n      return point;\n    }\n    albersUsa.invert = function(coordinates) {\n      var k = lower48.scale(), t = lower48.translate(), x = (coordinates[0] - t[0]) / k, y = (coordinates[1] - t[1]) / k;\n      return (y >= .12 && y < .234 && x >= -.425 && x < -.214 ? alaska : y >= .166 && y < .234 && x >= -.214 && x < -.115 ? hawaii : lower48).invert(coordinates);\n    };\n    albersUsa.stream = function(stream) {\n      var lower48Stream = lower48.stream(stream), alaskaStream = alaska.stream(stream), hawaiiStream = hawaii.stream(stream);\n      return {\n        point: function(x, y) {\n          lower48Stream.point(x, y);\n          alaskaStream.point(x, y);\n          hawaiiStream.point(x, y);\n        },\n        sphere: function() {\n          lower48Stream.sphere();\n          alaskaStream.sphere();\n          hawaiiStream.sphere();\n        },\n        lineStart: function() {\n          lower48Stream.lineStart();\n          alaskaStream.lineStart();\n          hawaiiStream.lineStart();\n        },\n        lineEnd: function() {\n          lower48Stream.lineEnd();\n          alaskaStream.lineEnd();\n          hawaiiStream.lineEnd();\n        },\n        polygonStart: function() {\n          lower48Stream.polygonStart();\n          alaskaStream.polygonStart();\n          hawaiiStream.polygonStart();\n        },\n        polygonEnd: function() {\n          lower48Stream.polygonEnd();\n          alaskaStream.polygonEnd();\n          hawaiiStream.polygonEnd();\n        }\n      };\n    };\n    albersUsa.precision = function(_) {\n      if (!arguments.length) return lower48.precision();\n      lower48.precision(_);\n      alaska.precision(_);\n      hawaii.precision(_);\n      return albersUsa;\n    };\n    albersUsa.scale = function(_) {\n      if (!arguments.length) return lower48.scale();\n      lower48.scale(_);\n      alaska.scale(_ * .35);\n      hawaii.scale(_);\n      return albersUsa.translate(lower48.translate());\n    };\n    albersUsa.translate = function(_) {\n      if (!arguments.length) return lower48.translate();\n      var k = lower48.scale(), x = +_[0], y = +_[1];\n      lower48Point = lower48.translate(_).clipExtent([ [ x - .455 * k, y - .238 * k ], [ x + .455 * k, y + .238 * k ] ]).stream(pointStream).point;\n      alaskaPoint = alaska.translate([ x - .307 * k, y + .201 * k ]).clipExtent([ [ x - .425 * k + ε, y + .12 * k + ε ], [ x - .214 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n      hawaiiPoint = hawaii.translate([ x - .205 * k, y + .212 * k ]).clipExtent([ [ x - .214 * k + ε, y + .166 * k + ε ], [ x - .115 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n      return albersUsa;\n    };\n    return albersUsa.scale(1070);\n  };\n  var d3_geo_pathAreaSum, d3_geo_pathAreaPolygon, d3_geo_pathArea = {\n    point: d3_noop,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: function() {\n      d3_geo_pathAreaPolygon = 0;\n      d3_geo_pathArea.lineStart = d3_geo_pathAreaRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_pathArea.lineStart = d3_geo_pathArea.lineEnd = d3_geo_pathArea.point = d3_noop;\n      d3_geo_pathAreaSum += abs(d3_geo_pathAreaPolygon / 2);\n    }\n  };\n  function d3_geo_pathAreaRingStart() {\n    var x00, y00, x0, y0;\n    d3_geo_pathArea.point = function(x, y) {\n      d3_geo_pathArea.point = nextPoint;\n      x00 = x0 = x, y00 = y0 = y;\n    };\n    function nextPoint(x, y) {\n      d3_geo_pathAreaPolygon += y0 * x - x0 * y;\n      x0 = x, y0 = y;\n    }\n    d3_geo_pathArea.lineEnd = function() {\n      nextPoint(x00, y00);\n    };\n  }\n  var d3_geo_pathBoundsX0, d3_geo_pathBoundsY0, d3_geo_pathBoundsX1, d3_geo_pathBoundsY1;\n  var d3_geo_pathBounds = {\n    point: d3_geo_pathBoundsPoint,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: d3_noop,\n    polygonEnd: d3_noop\n  };\n  function d3_geo_pathBoundsPoint(x, y) {\n    if (x < d3_geo_pathBoundsX0) d3_geo_pathBoundsX0 = x;\n    if (x > d3_geo_pathBoundsX1) d3_geo_pathBoundsX1 = x;\n    if (y < d3_geo_pathBoundsY0) d3_geo_pathBoundsY0 = y;\n    if (y > d3_geo_pathBoundsY1) d3_geo_pathBoundsY1 = y;\n  }\n  function d3_geo_pathBuffer() {\n    var pointCircle = d3_geo_pathBufferCircle(4.5), buffer = [];\n    var stream = {\n      point: point,\n      lineStart: function() {\n        stream.point = pointLineStart;\n      },\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        stream.lineEnd = lineEndPolygon;\n      },\n      polygonEnd: function() {\n        stream.lineEnd = lineEnd;\n        stream.point = point;\n      },\n      pointRadius: function(_) {\n        pointCircle = d3_geo_pathBufferCircle(_);\n        return stream;\n      },\n      result: function() {\n        if (buffer.length) {\n          var result = buffer.join(\"\");\n          buffer = [];\n          return result;\n        }\n      }\n    };\n    function point(x, y) {\n      buffer.push(\"M\", x, \",\", y, pointCircle);\n    }\n    function pointLineStart(x, y) {\n      buffer.push(\"M\", x, \",\", y);\n      stream.point = pointLine;\n    }\n    function pointLine(x, y) {\n      buffer.push(\"L\", x, \",\", y);\n    }\n    function lineEnd() {\n      stream.point = point;\n    }\n    function lineEndPolygon() {\n      buffer.push(\"Z\");\n    }\n    return stream;\n  }\n  function d3_geo_pathBufferCircle(radius) {\n    return \"m0,\" + radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius + \"z\";\n  }\n  var d3_geo_pathCentroid = {\n    point: d3_geo_pathCentroidPoint,\n    lineStart: d3_geo_pathCentroidLineStart,\n    lineEnd: d3_geo_pathCentroidLineEnd,\n    polygonStart: function() {\n      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidLineStart;\n      d3_geo_pathCentroid.lineEnd = d3_geo_pathCentroidLineEnd;\n    }\n  };\n  function d3_geo_pathCentroidPoint(x, y) {\n    d3_geo_centroidX0 += x;\n    d3_geo_centroidY0 += y;\n    ++d3_geo_centroidZ0;\n  }\n  function d3_geo_pathCentroidLineStart() {\n    var x0, y0;\n    d3_geo_pathCentroid.point = function(x, y) {\n      d3_geo_pathCentroid.point = nextPoint;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    };\n    function nextPoint(x, y) {\n      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n      d3_geo_centroidX1 += z * (x0 + x) / 2;\n      d3_geo_centroidY1 += z * (y0 + y) / 2;\n      d3_geo_centroidZ1 += z;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    }\n  }\n  function d3_geo_pathCentroidLineEnd() {\n    d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n  }\n  function d3_geo_pathCentroidRingStart() {\n    var x00, y00, x0, y0;\n    d3_geo_pathCentroid.point = function(x, y) {\n      d3_geo_pathCentroid.point = nextPoint;\n      d3_geo_pathCentroidPoint(x00 = x0 = x, y00 = y0 = y);\n    };\n    function nextPoint(x, y) {\n      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n      d3_geo_centroidX1 += z * (x0 + x) / 2;\n      d3_geo_centroidY1 += z * (y0 + y) / 2;\n      d3_geo_centroidZ1 += z;\n      z = y0 * x - x0 * y;\n      d3_geo_centroidX2 += z * (x0 + x);\n      d3_geo_centroidY2 += z * (y0 + y);\n      d3_geo_centroidZ2 += z * 3;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    }\n    d3_geo_pathCentroid.lineEnd = function() {\n      nextPoint(x00, y00);\n    };\n  }\n  function d3_geo_pathContext(context) {\n    var pointRadius = 4.5;\n    var stream = {\n      point: point,\n      lineStart: function() {\n        stream.point = pointLineStart;\n      },\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        stream.lineEnd = lineEndPolygon;\n      },\n      polygonEnd: function() {\n        stream.lineEnd = lineEnd;\n        stream.point = point;\n      },\n      pointRadius: function(_) {\n        pointRadius = _;\n        return stream;\n      },\n      result: d3_noop\n    };\n    function point(x, y) {\n      context.moveTo(x + pointRadius, y);\n      context.arc(x, y, pointRadius, 0, τ);\n    }\n    function pointLineStart(x, y) {\n      context.moveTo(x, y);\n      stream.point = pointLine;\n    }\n    function pointLine(x, y) {\n      context.lineTo(x, y);\n    }\n    function lineEnd() {\n      stream.point = point;\n    }\n    function lineEndPolygon() {\n      context.closePath();\n    }\n    return stream;\n  }\n  function d3_geo_resample(project) {\n    var δ2 = .5, cosMinDistance = Math.cos(30 * d3_radians), maxDepth = 16;\n    function resample(stream) {\n      return (maxDepth ? resampleRecursive : resampleNone)(stream);\n    }\n    function resampleNone(stream) {\n      return d3_geo_transformPoint(stream, function(x, y) {\n        x = project(x, y);\n        stream.point(x[0], x[1]);\n      });\n    }\n    function resampleRecursive(stream) {\n      var λ00, φ00, x00, y00, a00, b00, c00, λ0, x0, y0, a0, b0, c0;\n      var resample = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          stream.polygonStart();\n          resample.lineStart = ringStart;\n        },\n        polygonEnd: function() {\n          stream.polygonEnd();\n          resample.lineStart = lineStart;\n        }\n      };\n      function point(x, y) {\n        x = project(x, y);\n        stream.point(x[0], x[1]);\n      }\n      function lineStart() {\n        x0 = NaN;\n        resample.point = linePoint;\n        stream.lineStart();\n      }\n      function linePoint(λ, φ) {\n        var c = d3_geo_cartesian([ λ, φ ]), p = project(λ, φ);\n        resampleLineTo(x0, y0, λ0, a0, b0, c0, x0 = p[0], y0 = p[1], λ0 = λ, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n        stream.point(x0, y0);\n      }\n      function lineEnd() {\n        resample.point = point;\n        stream.lineEnd();\n      }\n      function ringStart() {\n        lineStart();\n        resample.point = ringPoint;\n        resample.lineEnd = ringEnd;\n      }\n      function ringPoint(λ, φ) {\n        linePoint(λ00 = λ, φ00 = φ), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n        resample.point = linePoint;\n      }\n      function ringEnd() {\n        resampleLineTo(x0, y0, λ0, a0, b0, c0, x00, y00, λ00, a00, b00, c00, maxDepth, stream);\n        resample.lineEnd = lineEnd;\n        lineEnd();\n      }\n      return resample;\n    }\n    function resampleLineTo(x0, y0, λ0, a0, b0, c0, x1, y1, λ1, a1, b1, c1, depth, stream) {\n      var dx = x1 - x0, dy = y1 - y0, d2 = dx * dx + dy * dy;\n      if (d2 > 4 * δ2 && depth--) {\n        var a = a0 + a1, b = b0 + b1, c = c0 + c1, m = Math.sqrt(a * a + b * b + c * c), φ2 = Math.asin(c /= m), λ2 = abs(abs(c) - 1) < ε || abs(λ0 - λ1) < ε ? (λ0 + λ1) / 2 : Math.atan2(b, a), p = project(λ2, φ2), x2 = p[0], y2 = p[1], dx2 = x2 - x0, dy2 = y2 - y0, dz = dy * dx2 - dx * dy2;\n        if (dz * dz / d2 > δ2 || abs((dx * dx2 + dy * dy2) / d2 - .5) > .3 || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) {\n          resampleLineTo(x0, y0, λ0, a0, b0, c0, x2, y2, λ2, a /= m, b /= m, c, depth, stream);\n          stream.point(x2, y2);\n          resampleLineTo(x2, y2, λ2, a, b, c, x1, y1, λ1, a1, b1, c1, depth, stream);\n        }\n      }\n    }\n    resample.precision = function(_) {\n      if (!arguments.length) return Math.sqrt(δ2);\n      maxDepth = (δ2 = _ * _) > 0 && 16;\n      return resample;\n    };\n    return resample;\n  }\n  d3.geo.path = function() {\n    var pointRadius = 4.5, projection, context, projectStream, contextStream, cacheStream;\n    function path(object) {\n      if (object) {\n        if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n        if (!cacheStream || !cacheStream.valid) cacheStream = projectStream(contextStream);\n        d3.geo.stream(object, cacheStream);\n      }\n      return contextStream.result();\n    }\n    path.area = function(object) {\n      d3_geo_pathAreaSum = 0;\n      d3.geo.stream(object, projectStream(d3_geo_pathArea));\n      return d3_geo_pathAreaSum;\n    };\n    path.centroid = function(object) {\n      d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n      d3.geo.stream(object, projectStream(d3_geo_pathCentroid));\n      return d3_geo_centroidZ2 ? [ d3_geo_centroidX2 / d3_geo_centroidZ2, d3_geo_centroidY2 / d3_geo_centroidZ2 ] : d3_geo_centroidZ1 ? [ d3_geo_centroidX1 / d3_geo_centroidZ1, d3_geo_centroidY1 / d3_geo_centroidZ1 ] : d3_geo_centroidZ0 ? [ d3_geo_centroidX0 / d3_geo_centroidZ0, d3_geo_centroidY0 / d3_geo_centroidZ0 ] : [ NaN, NaN ];\n    };\n    path.bounds = function(object) {\n      d3_geo_pathBoundsX1 = d3_geo_pathBoundsY1 = -(d3_geo_pathBoundsX0 = d3_geo_pathBoundsY0 = Infinity);\n      d3.geo.stream(object, projectStream(d3_geo_pathBounds));\n      return [ [ d3_geo_pathBoundsX0, d3_geo_pathBoundsY0 ], [ d3_geo_pathBoundsX1, d3_geo_pathBoundsY1 ] ];\n    };\n    path.projection = function(_) {\n      if (!arguments.length) return projection;\n      projectStream = (projection = _) ? _.stream || d3_geo_pathProjectStream(_) : d3_identity;\n      return reset();\n    };\n    path.context = function(_) {\n      if (!arguments.length) return context;\n      contextStream = (context = _) == null ? new d3_geo_pathBuffer() : new d3_geo_pathContext(_);\n      if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n      return reset();\n    };\n    path.pointRadius = function(_) {\n      if (!arguments.length) return pointRadius;\n      pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n      return path;\n    };\n    function reset() {\n      cacheStream = null;\n      return path;\n    }\n    return path.projection(d3.geo.albersUsa()).context(null);\n  };\n  function d3_geo_pathProjectStream(project) {\n    var resample = d3_geo_resample(function(x, y) {\n      return project([ x * d3_degrees, y * d3_degrees ]);\n    });\n    return function(stream) {\n      return d3_geo_projectionRadians(resample(stream));\n    };\n  }\n  d3.geo.transform = function(methods) {\n    return {\n      stream: function(stream) {\n        var transform = new d3_geo_transform(stream);\n        for (var k in methods) transform[k] = methods[k];\n        return transform;\n      }\n    };\n  };\n  function d3_geo_transform(stream) {\n    this.stream = stream;\n  }\n  d3_geo_transform.prototype = {\n    point: function(x, y) {\n      this.stream.point(x, y);\n    },\n    sphere: function() {\n      this.stream.sphere();\n    },\n    lineStart: function() {\n      this.stream.lineStart();\n    },\n    lineEnd: function() {\n      this.stream.lineEnd();\n    },\n    polygonStart: function() {\n      this.stream.polygonStart();\n    },\n    polygonEnd: function() {\n      this.stream.polygonEnd();\n    }\n  };\n  function d3_geo_transformPoint(stream, point) {\n    return {\n      point: point,\n      sphere: function() {\n        stream.sphere();\n      },\n      lineStart: function() {\n        stream.lineStart();\n      },\n      lineEnd: function() {\n        stream.lineEnd();\n      },\n      polygonStart: function() {\n        stream.polygonStart();\n      },\n      polygonEnd: function() {\n        stream.polygonEnd();\n      }\n    };\n  }\n  d3.geo.projection = d3_geo_projection;\n  d3.geo.projectionMutator = d3_geo_projectionMutator;\n  function d3_geo_projection(project) {\n    return d3_geo_projectionMutator(function() {\n      return project;\n    })();\n  }\n  function d3_geo_projectionMutator(projectAt) {\n    var project, rotate, projectRotate, projectResample = d3_geo_resample(function(x, y) {\n      x = project(x, y);\n      return [ x[0] * k + δx, δy - x[1] * k ];\n    }), k = 150, x = 480, y = 250, λ = 0, φ = 0, δλ = 0, δφ = 0, δγ = 0, δx, δy, preclip = d3_geo_clipAntimeridian, postclip = d3_identity, clipAngle = null, clipExtent = null, stream;\n    function projection(point) {\n      point = projectRotate(point[0] * d3_radians, point[1] * d3_radians);\n      return [ point[0] * k + δx, δy - point[1] * k ];\n    }\n    function invert(point) {\n      point = projectRotate.invert((point[0] - δx) / k, (δy - point[1]) / k);\n      return point && [ point[0] * d3_degrees, point[1] * d3_degrees ];\n    }\n    projection.stream = function(output) {\n      if (stream) stream.valid = false;\n      stream = d3_geo_projectionRadians(preclip(rotate, projectResample(postclip(output))));\n      stream.valid = true;\n      return stream;\n    };\n    projection.clipAngle = function(_) {\n      if (!arguments.length) return clipAngle;\n      preclip = _ == null ? (clipAngle = _, d3_geo_clipAntimeridian) : d3_geo_clipCircle((clipAngle = +_) * d3_radians);\n      return invalidate();\n    };\n    projection.clipExtent = function(_) {\n      if (!arguments.length) return clipExtent;\n      clipExtent = _;\n      postclip = _ ? d3_geo_clipExtent(_[0][0], _[0][1], _[1][0], _[1][1]) : d3_identity;\n      return invalidate();\n    };\n    projection.scale = function(_) {\n      if (!arguments.length) return k;\n      k = +_;\n      return reset();\n    };\n    projection.translate = function(_) {\n      if (!arguments.length) return [ x, y ];\n      x = +_[0];\n      y = +_[1];\n      return reset();\n    };\n    projection.center = function(_) {\n      if (!arguments.length) return [ λ * d3_degrees, φ * d3_degrees ];\n      λ = _[0] % 360 * d3_radians;\n      φ = _[1] % 360 * d3_radians;\n      return reset();\n    };\n    projection.rotate = function(_) {\n      if (!arguments.length) return [ δλ * d3_degrees, δφ * d3_degrees, δγ * d3_degrees ];\n      δλ = _[0] % 360 * d3_radians;\n      δφ = _[1] % 360 * d3_radians;\n      δγ = _.length > 2 ? _[2] % 360 * d3_radians : 0;\n      return reset();\n    };\n    d3.rebind(projection, projectResample, \"precision\");\n    function reset() {\n      projectRotate = d3_geo_compose(rotate = d3_geo_rotation(δλ, δφ, δγ), project);\n      var center = project(λ, φ);\n      δx = x - center[0] * k;\n      δy = y + center[1] * k;\n      return invalidate();\n    }\n    function invalidate() {\n      if (stream) stream.valid = false, stream = null;\n      return projection;\n    }\n    return function() {\n      project = projectAt.apply(this, arguments);\n      projection.invert = project.invert && invert;\n      return reset();\n    };\n  }\n  function d3_geo_projectionRadians(stream) {\n    return d3_geo_transformPoint(stream, function(x, y) {\n      stream.point(x * d3_radians, y * d3_radians);\n    });\n  }\n  function d3_geo_equirectangular(λ, φ) {\n    return [ λ, φ ];\n  }\n  (d3.geo.equirectangular = function() {\n    return d3_geo_projection(d3_geo_equirectangular);\n  }).raw = d3_geo_equirectangular.invert = d3_geo_equirectangular;\n  d3.geo.rotation = function(rotate) {\n    rotate = d3_geo_rotation(rotate[0] % 360 * d3_radians, rotate[1] * d3_radians, rotate.length > 2 ? rotate[2] * d3_radians : 0);\n    function forward(coordinates) {\n      coordinates = rotate(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n    }\n    forward.invert = function(coordinates) {\n      coordinates = rotate.invert(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n    };\n    return forward;\n  };\n  function d3_geo_identityRotation(λ, φ) {\n    return [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n  }\n  d3_geo_identityRotation.invert = d3_geo_equirectangular;\n  function d3_geo_rotation(δλ, δφ, δγ) {\n    return δλ ? δφ || δγ ? d3_geo_compose(d3_geo_rotationλ(δλ), d3_geo_rotationφγ(δφ, δγ)) : d3_geo_rotationλ(δλ) : δφ || δγ ? d3_geo_rotationφγ(δφ, δγ) : d3_geo_identityRotation;\n  }\n  function d3_geo_forwardRotationλ(δλ) {\n    return function(λ, φ) {\n      return λ += δλ, [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n    };\n  }\n  function d3_geo_rotationλ(δλ) {\n    var rotation = d3_geo_forwardRotationλ(δλ);\n    rotation.invert = d3_geo_forwardRotationλ(-δλ);\n    return rotation;\n  }\n  function d3_geo_rotationφγ(δφ, δγ) {\n    var cosδφ = Math.cos(δφ), sinδφ = Math.sin(δφ), cosδγ = Math.cos(δγ), sinδγ = Math.sin(δγ);\n    function rotation(λ, φ) {\n      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδφ + x * sinδφ;\n      return [ Math.atan2(y * cosδγ - k * sinδγ, x * cosδφ - z * sinδφ), d3_asin(k * cosδγ + y * sinδγ) ];\n    }\n    rotation.invert = function(λ, φ) {\n      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδγ - y * sinδγ;\n      return [ Math.atan2(y * cosδγ + z * sinδγ, x * cosδφ + k * sinδφ), d3_asin(k * cosδφ - x * sinδφ) ];\n    };\n    return rotation;\n  }\n  d3.geo.circle = function() {\n    var origin = [ 0, 0 ], angle, precision = 6, interpolate;\n    function circle() {\n      var center = typeof origin === \"function\" ? origin.apply(this, arguments) : origin, rotate = d3_geo_rotation(-center[0] * d3_radians, -center[1] * d3_radians, 0).invert, ring = [];\n      interpolate(null, null, 1, {\n        point: function(x, y) {\n          ring.push(x = rotate(x, y));\n          x[0] *= d3_degrees, x[1] *= d3_degrees;\n        }\n      });\n      return {\n        type: \"Polygon\",\n        coordinates: [ ring ]\n      };\n    }\n    circle.origin = function(x) {\n      if (!arguments.length) return origin;\n      origin = x;\n      return circle;\n    };\n    circle.angle = function(x) {\n      if (!arguments.length) return angle;\n      interpolate = d3_geo_circleInterpolate((angle = +x) * d3_radians, precision * d3_radians);\n      return circle;\n    };\n    circle.precision = function(_) {\n      if (!arguments.length) return precision;\n      interpolate = d3_geo_circleInterpolate(angle * d3_radians, (precision = +_) * d3_radians);\n      return circle;\n    };\n    return circle.angle(90);\n  };\n  function d3_geo_circleInterpolate(radius, precision) {\n    var cr = Math.cos(radius), sr = Math.sin(radius);\n    return function(from, to, direction, listener) {\n      var step = direction * precision;\n      if (from != null) {\n        from = d3_geo_circleAngle(cr, from);\n        to = d3_geo_circleAngle(cr, to);\n        if (direction > 0 ? from < to : from > to) from += direction * τ;\n      } else {\n        from = radius + direction * τ;\n        to = radius - .5 * step;\n      }\n      for (var point, t = from; direction > 0 ? t > to : t < to; t -= step) {\n        listener.point((point = d3_geo_spherical([ cr, -sr * Math.cos(t), -sr * Math.sin(t) ]))[0], point[1]);\n      }\n    };\n  }\n  function d3_geo_circleAngle(cr, point) {\n    var a = d3_geo_cartesian(point);\n    a[0] -= cr;\n    d3_geo_cartesianNormalize(a);\n    var angle = d3_acos(-a[1]);\n    return ((-a[2] < 0 ? -angle : angle) + 2 * Math.PI - ε) % (2 * Math.PI);\n  }\n  d3.geo.distance = function(a, b) {\n    var Δλ = (b[0] - a[0]) * d3_radians, φ0 = a[1] * d3_radians, φ1 = b[1] * d3_radians, sinΔλ = Math.sin(Δλ), cosΔλ = Math.cos(Δλ), sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), sinφ1 = Math.sin(φ1), cosφ1 = Math.cos(φ1), t;\n    return Math.atan2(Math.sqrt((t = cosφ1 * sinΔλ) * t + (t = cosφ0 * sinφ1 - sinφ0 * cosφ1 * cosΔλ) * t), sinφ0 * sinφ1 + cosφ0 * cosφ1 * cosΔλ);\n  };\n  d3.geo.graticule = function() {\n    var x1, x0, X1, X0, y1, y0, Y1, Y0, dx = 10, dy = dx, DX = 90, DY = 360, x, y, X, Y, precision = 2.5;\n    function graticule() {\n      return {\n        type: \"MultiLineString\",\n        coordinates: lines()\n      };\n    }\n    function lines() {\n      return d3.range(Math.ceil(X0 / DX) * DX, X1, DX).map(X).concat(d3.range(Math.ceil(Y0 / DY) * DY, Y1, DY).map(Y)).concat(d3.range(Math.ceil(x0 / dx) * dx, x1, dx).filter(function(x) {\n        return abs(x % DX) > ε;\n      }).map(x)).concat(d3.range(Math.ceil(y0 / dy) * dy, y1, dy).filter(function(y) {\n        return abs(y % DY) > ε;\n      }).map(y));\n    }\n    graticule.lines = function() {\n      return lines().map(function(coordinates) {\n        return {\n          type: \"LineString\",\n          coordinates: coordinates\n        };\n      });\n    };\n    graticule.outline = function() {\n      return {\n        type: \"Polygon\",\n        coordinates: [ X(X0).concat(Y(Y1).slice(1), X(X1).reverse().slice(1), Y(Y0).reverse().slice(1)) ]\n      };\n    };\n    graticule.extent = function(_) {\n      if (!arguments.length) return graticule.minorExtent();\n      return graticule.majorExtent(_).minorExtent(_);\n    };\n    graticule.majorExtent = function(_) {\n      if (!arguments.length) return [ [ X0, Y0 ], [ X1, Y1 ] ];\n      X0 = +_[0][0], X1 = +_[1][0];\n      Y0 = +_[0][1], Y1 = +_[1][1];\n      if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n      if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n      return graticule.precision(precision);\n    };\n    graticule.minorExtent = function(_) {\n      if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n      x0 = +_[0][0], x1 = +_[1][0];\n      y0 = +_[0][1], y1 = +_[1][1];\n      if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n      if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n      return graticule.precision(precision);\n    };\n    graticule.step = function(_) {\n      if (!arguments.length) return graticule.minorStep();\n      return graticule.majorStep(_).minorStep(_);\n    };\n    graticule.majorStep = function(_) {\n      if (!arguments.length) return [ DX, DY ];\n      DX = +_[0], DY = +_[1];\n      return graticule;\n    };\n    graticule.minorStep = function(_) {\n      if (!arguments.length) return [ dx, dy ];\n      dx = +_[0], dy = +_[1];\n      return graticule;\n    };\n    graticule.precision = function(_) {\n      if (!arguments.length) return precision;\n      precision = +_;\n      x = d3_geo_graticuleX(y0, y1, 90);\n      y = d3_geo_graticuleY(x0, x1, precision);\n      X = d3_geo_graticuleX(Y0, Y1, 90);\n      Y = d3_geo_graticuleY(X0, X1, precision);\n      return graticule;\n    };\n    return graticule.majorExtent([ [ -180, -90 + ε ], [ 180, 90 - ε ] ]).minorExtent([ [ -180, -80 - ε ], [ 180, 80 + ε ] ]);\n  };\n  function d3_geo_graticuleX(y0, y1, dy) {\n    var y = d3.range(y0, y1 - ε, dy).concat(y1);\n    return function(x) {\n      return y.map(function(y) {\n        return [ x, y ];\n      });\n    };\n  }\n  function d3_geo_graticuleY(x0, x1, dx) {\n    var x = d3.range(x0, x1 - ε, dx).concat(x1);\n    return function(y) {\n      return x.map(function(x) {\n        return [ x, y ];\n      });\n    };\n  }\n  function d3_source(d) {\n    return d.source;\n  }\n  function d3_target(d) {\n    return d.target;\n  }\n  d3.geo.greatArc = function() {\n    var source = d3_source, source_, target = d3_target, target_;\n    function greatArc() {\n      return {\n        type: \"LineString\",\n        coordinates: [ source_ || source.apply(this, arguments), target_ || target.apply(this, arguments) ]\n      };\n    }\n    greatArc.distance = function() {\n      return d3.geo.distance(source_ || source.apply(this, arguments), target_ || target.apply(this, arguments));\n    };\n    greatArc.source = function(_) {\n      if (!arguments.length) return source;\n      source = _, source_ = typeof _ === \"function\" ? null : _;\n      return greatArc;\n    };\n    greatArc.target = function(_) {\n      if (!arguments.length) return target;\n      target = _, target_ = typeof _ === \"function\" ? null : _;\n      return greatArc;\n    };\n    greatArc.precision = function() {\n      return arguments.length ? greatArc : 0;\n    };\n    return greatArc;\n  };\n  d3.geo.interpolate = function(source, target) {\n    return d3_geo_interpolate(source[0] * d3_radians, source[1] * d3_radians, target[0] * d3_radians, target[1] * d3_radians);\n  };\n  function d3_geo_interpolate(x0, y0, x1, y1) {\n    var cy0 = Math.cos(y0), sy0 = Math.sin(y0), cy1 = Math.cos(y1), sy1 = Math.sin(y1), kx0 = cy0 * Math.cos(x0), ky0 = cy0 * Math.sin(x0), kx1 = cy1 * Math.cos(x1), ky1 = cy1 * Math.sin(x1), d = 2 * Math.asin(Math.sqrt(d3_haversin(y1 - y0) + cy0 * cy1 * d3_haversin(x1 - x0))), k = 1 / Math.sin(d);\n    var interpolate = d ? function(t) {\n      var B = Math.sin(t *= d) * k, A = Math.sin(d - t) * k, x = A * kx0 + B * kx1, y = A * ky0 + B * ky1, z = A * sy0 + B * sy1;\n      return [ Math.atan2(y, x) * d3_degrees, Math.atan2(z, Math.sqrt(x * x + y * y)) * d3_degrees ];\n    } : function() {\n      return [ x0 * d3_degrees, y0 * d3_degrees ];\n    };\n    interpolate.distance = d;\n    return interpolate;\n  }\n  d3.geo.length = function(object) {\n    d3_geo_lengthSum = 0;\n    d3.geo.stream(object, d3_geo_length);\n    return d3_geo_lengthSum;\n  };\n  var d3_geo_lengthSum;\n  var d3_geo_length = {\n    sphere: d3_noop,\n    point: d3_noop,\n    lineStart: d3_geo_lengthLineStart,\n    lineEnd: d3_noop,\n    polygonStart: d3_noop,\n    polygonEnd: d3_noop\n  };\n  function d3_geo_lengthLineStart() {\n    var λ0, sinφ0, cosφ0;\n    d3_geo_length.point = function(λ, φ) {\n      λ0 = λ * d3_radians, sinφ0 = Math.sin(φ *= d3_radians), cosφ0 = Math.cos(φ);\n      d3_geo_length.point = nextPoint;\n    };\n    d3_geo_length.lineEnd = function() {\n      d3_geo_length.point = d3_geo_length.lineEnd = d3_noop;\n    };\n    function nextPoint(λ, φ) {\n      var sinφ = Math.sin(φ *= d3_radians), cosφ = Math.cos(φ), t = abs((λ *= d3_radians) - λ0), cosΔλ = Math.cos(t);\n      d3_geo_lengthSum += Math.atan2(Math.sqrt((t = cosφ * Math.sin(t)) * t + (t = cosφ0 * sinφ - sinφ0 * cosφ * cosΔλ) * t), sinφ0 * sinφ + cosφ0 * cosφ * cosΔλ);\n      λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ;\n    }\n  }\n  function d3_geo_azimuthal(scale, angle) {\n    function azimuthal(λ, φ) {\n      var cosλ = Math.cos(λ), cosφ = Math.cos(φ), k = scale(cosλ * cosφ);\n      return [ k * cosφ * Math.sin(λ), k * Math.sin(φ) ];\n    }\n    azimuthal.invert = function(x, y) {\n      var ρ = Math.sqrt(x * x + y * y), c = angle(ρ), sinc = Math.sin(c), cosc = Math.cos(c);\n      return [ Math.atan2(x * sinc, ρ * cosc), Math.asin(ρ && y * sinc / ρ) ];\n    };\n    return azimuthal;\n  }\n  var d3_geo_azimuthalEqualArea = d3_geo_azimuthal(function(cosλcosφ) {\n    return Math.sqrt(2 / (1 + cosλcosφ));\n  }, function(ρ) {\n    return 2 * Math.asin(ρ / 2);\n  });\n  (d3.geo.azimuthalEqualArea = function() {\n    return d3_geo_projection(d3_geo_azimuthalEqualArea);\n  }).raw = d3_geo_azimuthalEqualArea;\n  var d3_geo_azimuthalEquidistant = d3_geo_azimuthal(function(cosλcosφ) {\n    var c = Math.acos(cosλcosφ);\n    return c && c / Math.sin(c);\n  }, d3_identity);\n  (d3.geo.azimuthalEquidistant = function() {\n    return d3_geo_projection(d3_geo_azimuthalEquidistant);\n  }).raw = d3_geo_azimuthalEquidistant;\n  function d3_geo_conicConformal(φ0, φ1) {\n    var cosφ0 = Math.cos(φ0), t = function(φ) {\n      return Math.tan(π / 4 + φ / 2);\n    }, n = φ0 === φ1 ? Math.sin(φ0) : Math.log(cosφ0 / Math.cos(φ1)) / Math.log(t(φ1) / t(φ0)), F = cosφ0 * Math.pow(t(φ0), n) / n;\n    if (!n) return d3_geo_mercator;\n    function forward(λ, φ) {\n      if (F > 0) {\n        if (φ < -halfπ + ε) φ = -halfπ + ε;\n      } else {\n        if (φ > halfπ - ε) φ = halfπ - ε;\n      }\n      var ρ = F / Math.pow(t(φ), n);\n      return [ ρ * Math.sin(n * λ), F - ρ * Math.cos(n * λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = F - y, ρ = d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y);\n      return [ Math.atan2(x, ρ0_y) / n, 2 * Math.atan(Math.pow(F / ρ, 1 / n)) - halfπ ];\n    };\n    return forward;\n  }\n  (d3.geo.conicConformal = function() {\n    return d3_geo_conic(d3_geo_conicConformal);\n  }).raw = d3_geo_conicConformal;\n  function d3_geo_conicEquidistant(φ0, φ1) {\n    var cosφ0 = Math.cos(φ0), n = φ0 === φ1 ? Math.sin(φ0) : (cosφ0 - Math.cos(φ1)) / (φ1 - φ0), G = cosφ0 / n + φ0;\n    if (abs(n) < ε) return d3_geo_equirectangular;\n    function forward(λ, φ) {\n      var ρ = G - φ;\n      return [ ρ * Math.sin(n * λ), G - ρ * Math.cos(n * λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = G - y;\n      return [ Math.atan2(x, ρ0_y) / n, G - d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y) ];\n    };\n    return forward;\n  }\n  (d3.geo.conicEquidistant = function() {\n    return d3_geo_conic(d3_geo_conicEquidistant);\n  }).raw = d3_geo_conicEquidistant;\n  var d3_geo_gnomonic = d3_geo_azimuthal(function(cosλcosφ) {\n    return 1 / cosλcosφ;\n  }, Math.atan);\n  (d3.geo.gnomonic = function() {\n    return d3_geo_projection(d3_geo_gnomonic);\n  }).raw = d3_geo_gnomonic;\n  function d3_geo_mercator(λ, φ) {\n    return [ λ, Math.log(Math.tan(π / 4 + φ / 2)) ];\n  }\n  d3_geo_mercator.invert = function(x, y) {\n    return [ x, 2 * Math.atan(Math.exp(y)) - halfπ ];\n  };\n  function d3_geo_mercatorProjection(project) {\n    var m = d3_geo_projection(project), scale = m.scale, translate = m.translate, clipExtent = m.clipExtent, clipAuto;\n    m.scale = function() {\n      var v = scale.apply(m, arguments);\n      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n    };\n    m.translate = function() {\n      var v = translate.apply(m, arguments);\n      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n    };\n    m.clipExtent = function(_) {\n      var v = clipExtent.apply(m, arguments);\n      if (v === m) {\n        if (clipAuto = _ == null) {\n          var k = π * scale(), t = translate();\n          clipExtent([ [ t[0] - k, t[1] - k ], [ t[0] + k, t[1] + k ] ]);\n        }\n      } else if (clipAuto) {\n        v = null;\n      }\n      return v;\n    };\n    return m.clipExtent(null);\n  }\n  (d3.geo.mercator = function() {\n    return d3_geo_mercatorProjection(d3_geo_mercator);\n  }).raw = d3_geo_mercator;\n  var d3_geo_orthographic = d3_geo_azimuthal(function() {\n    return 1;\n  }, Math.asin);\n  (d3.geo.orthographic = function() {\n    return d3_geo_projection(d3_geo_orthographic);\n  }).raw = d3_geo_orthographic;\n  var d3_geo_stereographic = d3_geo_azimuthal(function(cosλcosφ) {\n    return 1 / (1 + cosλcosφ);\n  }, function(ρ) {\n    return 2 * Math.atan(ρ);\n  });\n  (d3.geo.stereographic = function() {\n    return d3_geo_projection(d3_geo_stereographic);\n  }).raw = d3_geo_stereographic;\n  function d3_geo_transverseMercator(λ, φ) {\n    return [ Math.log(Math.tan(π / 4 + φ / 2)), -λ ];\n  }\n  d3_geo_transverseMercator.invert = function(x, y) {\n    return [ -y, 2 * Math.atan(Math.exp(x)) - halfπ ];\n  };\n  (d3.geo.transverseMercator = function() {\n    var projection = d3_geo_mercatorProjection(d3_geo_transverseMercator), center = projection.center, rotate = projection.rotate;\n    projection.center = function(_) {\n      return _ ? center([ -_[1], _[0] ]) : (_ = center(), [ _[1], -_[0] ]);\n    };\n    projection.rotate = function(_) {\n      return _ ? rotate([ _[0], _[1], _.length > 2 ? _[2] + 90 : 90 ]) : (_ = rotate(), \n      [ _[0], _[1], _[2] - 90 ]);\n    };\n    return rotate([ 0, 0, 90 ]);\n  }).raw = d3_geo_transverseMercator;\n  d3.geom = {};\n  function d3_geom_pointX(d) {\n    return d[0];\n  }\n  function d3_geom_pointY(d) {\n    return d[1];\n  }\n  d3.geom.hull = function(vertices) {\n    var x = d3_geom_pointX, y = d3_geom_pointY;\n    if (arguments.length) return hull(vertices);\n    function hull(data) {\n      if (data.length < 3) return [];\n      var fx = d3_functor(x), fy = d3_functor(y), i, n = data.length, points = [], flippedPoints = [];\n      for (i = 0; i < n; i++) {\n        points.push([ +fx.call(this, data[i], i), +fy.call(this, data[i], i), i ]);\n      }\n      points.sort(d3_geom_hullOrder);\n      for (i = 0; i < n; i++) flippedPoints.push([ points[i][0], -points[i][1] ]);\n      var upper = d3_geom_hullUpper(points), lower = d3_geom_hullUpper(flippedPoints);\n      var skipLeft = lower[0] === upper[0], skipRight = lower[lower.length - 1] === upper[upper.length - 1], polygon = [];\n      for (i = upper.length - 1; i >= 0; --i) polygon.push(data[points[upper[i]][2]]);\n      for (i = +skipLeft; i < lower.length - skipRight; ++i) polygon.push(data[points[lower[i]][2]]);\n      return polygon;\n    }\n    hull.x = function(_) {\n      return arguments.length ? (x = _, hull) : x;\n    };\n    hull.y = function(_) {\n      return arguments.length ? (y = _, hull) : y;\n    };\n    return hull;\n  };\n  function d3_geom_hullUpper(points) {\n    var n = points.length, hull = [ 0, 1 ], hs = 2;\n    for (var i = 2; i < n; i++) {\n      while (hs > 1 && d3_cross2d(points[hull[hs - 2]], points[hull[hs - 1]], points[i]) <= 0) --hs;\n      hull[hs++] = i;\n    }\n    return hull.slice(0, hs);\n  }\n  function d3_geom_hullOrder(a, b) {\n    return a[0] - b[0] || a[1] - b[1];\n  }\n  d3.geom.polygon = function(coordinates) {\n    d3_subclass(coordinates, d3_geom_polygonPrototype);\n    return coordinates;\n  };\n  var d3_geom_polygonPrototype = d3.geom.polygon.prototype = [];\n  d3_geom_polygonPrototype.area = function() {\n    var i = -1, n = this.length, a, b = this[n - 1], area = 0;\n    while (++i < n) {\n      a = b;\n      b = this[i];\n      area += a[1] * b[0] - a[0] * b[1];\n    }\n    return area * .5;\n  };\n  d3_geom_polygonPrototype.centroid = function(k) {\n    var i = -1, n = this.length, x = 0, y = 0, a, b = this[n - 1], c;\n    if (!arguments.length) k = -1 / (6 * this.area());\n    while (++i < n) {\n      a = b;\n      b = this[i];\n      c = a[0] * b[1] - b[0] * a[1];\n      x += (a[0] + b[0]) * c;\n      y += (a[1] + b[1]) * c;\n    }\n    return [ x * k, y * k ];\n  };\n  d3_geom_polygonPrototype.clip = function(subject) {\n    var input, closed = d3_geom_polygonClosed(subject), i = -1, n = this.length - d3_geom_polygonClosed(this), j, m, a = this[n - 1], b, c, d;\n    while (++i < n) {\n      input = subject.slice();\n      subject.length = 0;\n      b = this[i];\n      c = input[(m = input.length - closed) - 1];\n      j = -1;\n      while (++j < m) {\n        d = input[j];\n        if (d3_geom_polygonInside(d, a, b)) {\n          if (!d3_geom_polygonInside(c, a, b)) {\n            subject.push(d3_geom_polygonIntersect(c, d, a, b));\n          }\n          subject.push(d);\n        } else if (d3_geom_polygonInside(c, a, b)) {\n          subject.push(d3_geom_polygonIntersect(c, d, a, b));\n        }\n        c = d;\n      }\n      if (closed) subject.push(subject[0]);\n      a = b;\n    }\n    return subject;\n  };\n  function d3_geom_polygonInside(p, a, b) {\n    return (b[0] - a[0]) * (p[1] - a[1]) < (b[1] - a[1]) * (p[0] - a[0]);\n  }\n  function d3_geom_polygonIntersect(c, d, a, b) {\n    var x1 = c[0], x3 = a[0], x21 = d[0] - x1, x43 = b[0] - x3, y1 = c[1], y3 = a[1], y21 = d[1] - y1, y43 = b[1] - y3, ua = (x43 * (y1 - y3) - y43 * (x1 - x3)) / (y43 * x21 - x43 * y21);\n    return [ x1 + ua * x21, y1 + ua * y21 ];\n  }\n  function d3_geom_polygonClosed(coordinates) {\n    var a = coordinates[0], b = coordinates[coordinates.length - 1];\n    return !(a[0] - b[0] || a[1] - b[1]);\n  }\n  var d3_geom_voronoiEdges, d3_geom_voronoiCells, d3_geom_voronoiBeaches, d3_geom_voronoiBeachPool = [], d3_geom_voronoiFirstCircle, d3_geom_voronoiCircles, d3_geom_voronoiCirclePool = [];\n  function d3_geom_voronoiBeach() {\n    d3_geom_voronoiRedBlackNode(this);\n    this.edge = this.site = this.circle = null;\n  }\n  function d3_geom_voronoiCreateBeach(site) {\n    var beach = d3_geom_voronoiBeachPool.pop() || new d3_geom_voronoiBeach();\n    beach.site = site;\n    return beach;\n  }\n  function d3_geom_voronoiDetachBeach(beach) {\n    d3_geom_voronoiDetachCircle(beach);\n    d3_geom_voronoiBeaches.remove(beach);\n    d3_geom_voronoiBeachPool.push(beach);\n    d3_geom_voronoiRedBlackNode(beach);\n  }\n  function d3_geom_voronoiRemoveBeach(beach) {\n    var circle = beach.circle, x = circle.x, y = circle.cy, vertex = {\n      x: x,\n      y: y\n    }, previous = beach.P, next = beach.N, disappearing = [ beach ];\n    d3_geom_voronoiDetachBeach(beach);\n    var lArc = previous;\n    while (lArc.circle && abs(x - lArc.circle.x) < ε && abs(y - lArc.circle.cy) < ε) {\n      previous = lArc.P;\n      disappearing.unshift(lArc);\n      d3_geom_voronoiDetachBeach(lArc);\n      lArc = previous;\n    }\n    disappearing.unshift(lArc);\n    d3_geom_voronoiDetachCircle(lArc);\n    var rArc = next;\n    while (rArc.circle && abs(x - rArc.circle.x) < ε && abs(y - rArc.circle.cy) < ε) {\n      next = rArc.N;\n      disappearing.push(rArc);\n      d3_geom_voronoiDetachBeach(rArc);\n      rArc = next;\n    }\n    disappearing.push(rArc);\n    d3_geom_voronoiDetachCircle(rArc);\n    var nArcs = disappearing.length, iArc;\n    for (iArc = 1; iArc < nArcs; ++iArc) {\n      rArc = disappearing[iArc];\n      lArc = disappearing[iArc - 1];\n      d3_geom_voronoiSetEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n    }\n    lArc = disappearing[0];\n    rArc = disappearing[nArcs - 1];\n    rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, rArc.site, null, vertex);\n    d3_geom_voronoiAttachCircle(lArc);\n    d3_geom_voronoiAttachCircle(rArc);\n  }\n  function d3_geom_voronoiAddBeach(site) {\n    var x = site.x, directrix = site.y, lArc, rArc, dxl, dxr, node = d3_geom_voronoiBeaches._;\n    while (node) {\n      dxl = d3_geom_voronoiLeftBreakPoint(node, directrix) - x;\n      if (dxl > ε) node = node.L; else {\n        dxr = x - d3_geom_voronoiRightBreakPoint(node, directrix);\n        if (dxr > ε) {\n          if (!node.R) {\n            lArc = node;\n            break;\n          }\n          node = node.R;\n        } else {\n          if (dxl > -ε) {\n            lArc = node.P;\n            rArc = node;\n          } else if (dxr > -ε) {\n            lArc = node;\n            rArc = node.N;\n          } else {\n            lArc = rArc = node;\n          }\n          break;\n        }\n      }\n    }\n    var newArc = d3_geom_voronoiCreateBeach(site);\n    d3_geom_voronoiBeaches.insert(lArc, newArc);\n    if (!lArc && !rArc) return;\n    if (lArc === rArc) {\n      d3_geom_voronoiDetachCircle(lArc);\n      rArc = d3_geom_voronoiCreateBeach(lArc.site);\n      d3_geom_voronoiBeaches.insert(newArc, rArc);\n      newArc.edge = rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n      d3_geom_voronoiAttachCircle(lArc);\n      d3_geom_voronoiAttachCircle(rArc);\n      return;\n    }\n    if (!rArc) {\n      newArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n      return;\n    }\n    d3_geom_voronoiDetachCircle(lArc);\n    d3_geom_voronoiDetachCircle(rArc);\n    var lSite = lArc.site, ax = lSite.x, ay = lSite.y, bx = site.x - ax, by = site.y - ay, rSite = rArc.site, cx = rSite.x - ax, cy = rSite.y - ay, d = 2 * (bx * cy - by * cx), hb = bx * bx + by * by, hc = cx * cx + cy * cy, vertex = {\n      x: (cy * hb - by * hc) / d + ax,\n      y: (bx * hc - cx * hb) / d + ay\n    };\n    d3_geom_voronoiSetEdgeEnd(rArc.edge, lSite, rSite, vertex);\n    newArc.edge = d3_geom_voronoiCreateEdge(lSite, site, null, vertex);\n    rArc.edge = d3_geom_voronoiCreateEdge(site, rSite, null, vertex);\n    d3_geom_voronoiAttachCircle(lArc);\n    d3_geom_voronoiAttachCircle(rArc);\n  }\n  function d3_geom_voronoiLeftBreakPoint(arc, directrix) {\n    var site = arc.site, rfocx = site.x, rfocy = site.y, pby2 = rfocy - directrix;\n    if (!pby2) return rfocx;\n    var lArc = arc.P;\n    if (!lArc) return -Infinity;\n    site = lArc.site;\n    var lfocx = site.x, lfocy = site.y, plby2 = lfocy - directrix;\n    if (!plby2) return lfocx;\n    var hl = lfocx - rfocx, aby2 = 1 / pby2 - 1 / plby2, b = hl / plby2;\n    if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n    return (rfocx + lfocx) / 2;\n  }\n  function d3_geom_voronoiRightBreakPoint(arc, directrix) {\n    var rArc = arc.N;\n    if (rArc) return d3_geom_voronoiLeftBreakPoint(rArc, directrix);\n    var site = arc.site;\n    return site.y === directrix ? site.x : Infinity;\n  }\n  function d3_geom_voronoiCell(site) {\n    this.site = site;\n    this.edges = [];\n  }\n  d3_geom_voronoiCell.prototype.prepare = function() {\n    var halfEdges = this.edges, iHalfEdge = halfEdges.length, edge;\n    while (iHalfEdge--) {\n      edge = halfEdges[iHalfEdge].edge;\n      if (!edge.b || !edge.a) halfEdges.splice(iHalfEdge, 1);\n    }\n    halfEdges.sort(d3_geom_voronoiHalfEdgeOrder);\n    return halfEdges.length;\n  };\n  function d3_geom_voronoiCloseCells(extent) {\n    var x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], x2, y2, x3, y3, cells = d3_geom_voronoiCells, iCell = cells.length, cell, iHalfEdge, halfEdges, nHalfEdges, start, end;\n    while (iCell--) {\n      cell = cells[iCell];\n      if (!cell || !cell.prepare()) continue;\n      halfEdges = cell.edges;\n      nHalfEdges = halfEdges.length;\n      iHalfEdge = 0;\n      while (iHalfEdge < nHalfEdges) {\n        end = halfEdges[iHalfEdge].end(), x3 = end.x, y3 = end.y;\n        start = halfEdges[++iHalfEdge % nHalfEdges].start(), x2 = start.x, y2 = start.y;\n        if (abs(x3 - x2) > ε || abs(y3 - y2) > ε) {\n          halfEdges.splice(iHalfEdge, 0, new d3_geom_voronoiHalfEdge(d3_geom_voronoiCreateBorderEdge(cell.site, end, abs(x3 - x0) < ε && y1 - y3 > ε ? {\n            x: x0,\n            y: abs(x2 - x0) < ε ? y2 : y1\n          } : abs(y3 - y1) < ε && x1 - x3 > ε ? {\n            x: abs(y2 - y1) < ε ? x2 : x1,\n            y: y1\n          } : abs(x3 - x1) < ε && y3 - y0 > ε ? {\n            x: x1,\n            y: abs(x2 - x1) < ε ? y2 : y0\n          } : abs(y3 - y0) < ε && x3 - x0 > ε ? {\n            x: abs(y2 - y0) < ε ? x2 : x0,\n            y: y0\n          } : null), cell.site, null));\n          ++nHalfEdges;\n        }\n      }\n    }\n  }\n  function d3_geom_voronoiHalfEdgeOrder(a, b) {\n    return b.angle - a.angle;\n  }\n  function d3_geom_voronoiCircle() {\n    d3_geom_voronoiRedBlackNode(this);\n    this.x = this.y = this.arc = this.site = this.cy = null;\n  }\n  function d3_geom_voronoiAttachCircle(arc) {\n    var lArc = arc.P, rArc = arc.N;\n    if (!lArc || !rArc) return;\n    var lSite = lArc.site, cSite = arc.site, rSite = rArc.site;\n    if (lSite === rSite) return;\n    var bx = cSite.x, by = cSite.y, ax = lSite.x - bx, ay = lSite.y - by, cx = rSite.x - bx, cy = rSite.y - by;\n    var d = 2 * (ax * cy - ay * cx);\n    if (d >= -ε2) return;\n    var ha = ax * ax + ay * ay, hc = cx * cx + cy * cy, x = (cy * ha - ay * hc) / d, y = (ax * hc - cx * ha) / d, cy = y + by;\n    var circle = d3_geom_voronoiCirclePool.pop() || new d3_geom_voronoiCircle();\n    circle.arc = arc;\n    circle.site = cSite;\n    circle.x = x + bx;\n    circle.y = cy + Math.sqrt(x * x + y * y);\n    circle.cy = cy;\n    arc.circle = circle;\n    var before = null, node = d3_geom_voronoiCircles._;\n    while (node) {\n      if (circle.y < node.y || circle.y === node.y && circle.x <= node.x) {\n        if (node.L) node = node.L; else {\n          before = node.P;\n          break;\n        }\n      } else {\n        if (node.R) node = node.R; else {\n          before = node;\n          break;\n        }\n      }\n    }\n    d3_geom_voronoiCircles.insert(before, circle);\n    if (!before) d3_geom_voronoiFirstCircle = circle;\n  }\n  function d3_geom_voronoiDetachCircle(arc) {\n    var circle = arc.circle;\n    if (circle) {\n      if (!circle.P) d3_geom_voronoiFirstCircle = circle.N;\n      d3_geom_voronoiCircles.remove(circle);\n      d3_geom_voronoiCirclePool.push(circle);\n      d3_geom_voronoiRedBlackNode(circle);\n      arc.circle = null;\n    }\n  }\n  function d3_geom_voronoiClipEdges(extent) {\n    var edges = d3_geom_voronoiEdges, clip = d3_geom_clipLine(extent[0][0], extent[0][1], extent[1][0], extent[1][1]), i = edges.length, e;\n    while (i--) {\n      e = edges[i];\n      if (!d3_geom_voronoiConnectEdge(e, extent) || !clip(e) || abs(e.a.x - e.b.x) < ε && abs(e.a.y - e.b.y) < ε) {\n        e.a = e.b = null;\n        edges.splice(i, 1);\n      }\n    }\n  }\n  function d3_geom_voronoiConnectEdge(edge, extent) {\n    var vb = edge.b;\n    if (vb) return true;\n    var va = edge.a, x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], lSite = edge.l, rSite = edge.r, lx = lSite.x, ly = lSite.y, rx = rSite.x, ry = rSite.y, fx = (lx + rx) / 2, fy = (ly + ry) / 2, fm, fb;\n    if (ry === ly) {\n      if (fx < x0 || fx >= x1) return;\n      if (lx > rx) {\n        if (!va) va = {\n          x: fx,\n          y: y0\n        }; else if (va.y >= y1) return;\n        vb = {\n          x: fx,\n          y: y1\n        };\n      } else {\n        if (!va) va = {\n          x: fx,\n          y: y1\n        }; else if (va.y < y0) return;\n        vb = {\n          x: fx,\n          y: y0\n        };\n      }\n    } else {\n      fm = (lx - rx) / (ry - ly);\n      fb = fy - fm * fx;\n      if (fm < -1 || fm > 1) {\n        if (lx > rx) {\n          if (!va) va = {\n            x: (y0 - fb) / fm,\n            y: y0\n          }; else if (va.y >= y1) return;\n          vb = {\n            x: (y1 - fb) / fm,\n            y: y1\n          };\n        } else {\n          if (!va) va = {\n            x: (y1 - fb) / fm,\n            y: y1\n          }; else if (va.y < y0) return;\n          vb = {\n            x: (y0 - fb) / fm,\n            y: y0\n          };\n        }\n      } else {\n        if (ly < ry) {\n          if (!va) va = {\n            x: x0,\n            y: fm * x0 + fb\n          }; else if (va.x >= x1) return;\n          vb = {\n            x: x1,\n            y: fm * x1 + fb\n          };\n        } else {\n          if (!va) va = {\n            x: x1,\n            y: fm * x1 + fb\n          }; else if (va.x < x0) return;\n          vb = {\n            x: x0,\n            y: fm * x0 + fb\n          };\n        }\n      }\n    }\n    edge.a = va;\n    edge.b = vb;\n    return true;\n  }\n  function d3_geom_voronoiEdge(lSite, rSite) {\n    this.l = lSite;\n    this.r = rSite;\n    this.a = this.b = null;\n  }\n  function d3_geom_voronoiCreateEdge(lSite, rSite, va, vb) {\n    var edge = new d3_geom_voronoiEdge(lSite, rSite);\n    d3_geom_voronoiEdges.push(edge);\n    if (va) d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, va);\n    if (vb) d3_geom_voronoiSetEdgeEnd(edge, rSite, lSite, vb);\n    d3_geom_voronoiCells[lSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, lSite, rSite));\n    d3_geom_voronoiCells[rSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, rSite, lSite));\n    return edge;\n  }\n  function d3_geom_voronoiCreateBorderEdge(lSite, va, vb) {\n    var edge = new d3_geom_voronoiEdge(lSite, null);\n    edge.a = va;\n    edge.b = vb;\n    d3_geom_voronoiEdges.push(edge);\n    return edge;\n  }\n  function d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, vertex) {\n    if (!edge.a && !edge.b) {\n      edge.a = vertex;\n      edge.l = lSite;\n      edge.r = rSite;\n    } else if (edge.l === rSite) {\n      edge.b = vertex;\n    } else {\n      edge.a = vertex;\n    }\n  }\n  function d3_geom_voronoiHalfEdge(edge, lSite, rSite) {\n    var va = edge.a, vb = edge.b;\n    this.edge = edge;\n    this.site = lSite;\n    this.angle = rSite ? Math.atan2(rSite.y - lSite.y, rSite.x - lSite.x) : edge.l === lSite ? Math.atan2(vb.x - va.x, va.y - vb.y) : Math.atan2(va.x - vb.x, vb.y - va.y);\n  }\n  d3_geom_voronoiHalfEdge.prototype = {\n    start: function() {\n      return this.edge.l === this.site ? this.edge.a : this.edge.b;\n    },\n    end: function() {\n      return this.edge.l === this.site ? this.edge.b : this.edge.a;\n    }\n  };\n  function d3_geom_voronoiRedBlackTree() {\n    this._ = null;\n  }\n  function d3_geom_voronoiRedBlackNode(node) {\n    node.U = node.C = node.L = node.R = node.P = node.N = null;\n  }\n  d3_geom_voronoiRedBlackTree.prototype = {\n    insert: function(after, node) {\n      var parent, grandpa, uncle;\n      if (after) {\n        node.P = after;\n        node.N = after.N;\n        if (after.N) after.N.P = node;\n        after.N = node;\n        if (after.R) {\n          after = after.R;\n          while (after.L) after = after.L;\n          after.L = node;\n        } else {\n          after.R = node;\n        }\n        parent = after;\n      } else if (this._) {\n        after = d3_geom_voronoiRedBlackFirst(this._);\n        node.P = null;\n        node.N = after;\n        after.P = after.L = node;\n        parent = after;\n      } else {\n        node.P = node.N = null;\n        this._ = node;\n        parent = null;\n      }\n      node.L = node.R = null;\n      node.U = parent;\n      node.C = true;\n      after = node;\n      while (parent && parent.C) {\n        grandpa = parent.U;\n        if (parent === grandpa.L) {\n          uncle = grandpa.R;\n          if (uncle && uncle.C) {\n            parent.C = uncle.C = false;\n            grandpa.C = true;\n            after = grandpa;\n          } else {\n            if (after === parent.R) {\n              d3_geom_voronoiRedBlackRotateLeft(this, parent);\n              after = parent;\n              parent = after.U;\n            }\n            parent.C = false;\n            grandpa.C = true;\n            d3_geom_voronoiRedBlackRotateRight(this, grandpa);\n          }\n        } else {\n          uncle = grandpa.L;\n          if (uncle && uncle.C) {\n            parent.C = uncle.C = false;\n            grandpa.C = true;\n            after = grandpa;\n          } else {\n            if (after === parent.L) {\n              d3_geom_voronoiRedBlackRotateRight(this, parent);\n              after = parent;\n              parent = after.U;\n            }\n            parent.C = false;\n            grandpa.C = true;\n            d3_geom_voronoiRedBlackRotateLeft(this, grandpa);\n          }\n        }\n        parent = after.U;\n      }\n      this._.C = false;\n    },\n    remove: function(node) {\n      if (node.N) node.N.P = node.P;\n      if (node.P) node.P.N = node.N;\n      node.N = node.P = null;\n      var parent = node.U, sibling, left = node.L, right = node.R, next, red;\n      if (!left) next = right; else if (!right) next = left; else next = d3_geom_voronoiRedBlackFirst(right);\n      if (parent) {\n        if (parent.L === node) parent.L = next; else parent.R = next;\n      } else {\n        this._ = next;\n      }\n      if (left && right) {\n        red = next.C;\n        next.C = node.C;\n        next.L = left;\n        left.U = next;\n        if (next !== right) {\n          parent = next.U;\n          next.U = node.U;\n          node = next.R;\n          parent.L = node;\n          next.R = right;\n          right.U = next;\n        } else {\n          next.U = parent;\n          parent = next;\n          node = next.R;\n        }\n      } else {\n        red = node.C;\n        node = next;\n      }\n      if (node) node.U = parent;\n      if (red) return;\n      if (node && node.C) {\n        node.C = false;\n        return;\n      }\n      do {\n        if (node === this._) break;\n        if (node === parent.L) {\n          sibling = parent.R;\n          if (sibling.C) {\n            sibling.C = false;\n            parent.C = true;\n            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n            sibling = parent.R;\n          }\n          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n            if (!sibling.R || !sibling.R.C) {\n              sibling.L.C = false;\n              sibling.C = true;\n              d3_geom_voronoiRedBlackRotateRight(this, sibling);\n              sibling = parent.R;\n            }\n            sibling.C = parent.C;\n            parent.C = sibling.R.C = false;\n            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n            node = this._;\n            break;\n          }\n        } else {\n          sibling = parent.L;\n          if (sibling.C) {\n            sibling.C = false;\n            parent.C = true;\n            d3_geom_voronoiRedBlackRotateRight(this, parent);\n            sibling = parent.L;\n          }\n          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n            if (!sibling.L || !sibling.L.C) {\n              sibling.R.C = false;\n              sibling.C = true;\n              d3_geom_voronoiRedBlackRotateLeft(this, sibling);\n              sibling = parent.L;\n            }\n            sibling.C = parent.C;\n            parent.C = sibling.L.C = false;\n            d3_geom_voronoiRedBlackRotateRight(this, parent);\n            node = this._;\n            break;\n          }\n        }\n        sibling.C = true;\n        node = parent;\n        parent = parent.U;\n      } while (!node.C);\n      if (node) node.C = false;\n    }\n  };\n  function d3_geom_voronoiRedBlackRotateLeft(tree, node) {\n    var p = node, q = node.R, parent = p.U;\n    if (parent) {\n      if (parent.L === p) parent.L = q; else parent.R = q;\n    } else {\n      tree._ = q;\n    }\n    q.U = parent;\n    p.U = q;\n    p.R = q.L;\n    if (p.R) p.R.U = p;\n    q.L = p;\n  }\n  function d3_geom_voronoiRedBlackRotateRight(tree, node) {\n    var p = node, q = node.L, parent = p.U;\n    if (parent) {\n      if (parent.L === p) parent.L = q; else parent.R = q;\n    } else {\n      tree._ = q;\n    }\n    q.U = parent;\n    p.U = q;\n    p.L = q.R;\n    if (p.L) p.L.U = p;\n    q.R = p;\n  }\n  function d3_geom_voronoiRedBlackFirst(node) {\n    while (node.L) node = node.L;\n    return node;\n  }\n  function d3_geom_voronoi(sites, bbox) {\n    var site = sites.sort(d3_geom_voronoiVertexOrder).pop(), x0, y0, circle;\n    d3_geom_voronoiEdges = [];\n    d3_geom_voronoiCells = new Array(sites.length);\n    d3_geom_voronoiBeaches = new d3_geom_voronoiRedBlackTree();\n    d3_geom_voronoiCircles = new d3_geom_voronoiRedBlackTree();\n    while (true) {\n      circle = d3_geom_voronoiFirstCircle;\n      if (site && (!circle || site.y < circle.y || site.y === circle.y && site.x < circle.x)) {\n        if (site.x !== x0 || site.y !== y0) {\n          d3_geom_voronoiCells[site.i] = new d3_geom_voronoiCell(site);\n          d3_geom_voronoiAddBeach(site);\n          x0 = site.x, y0 = site.y;\n        }\n        site = sites.pop();\n      } else if (circle) {\n        d3_geom_voronoiRemoveBeach(circle.arc);\n      } else {\n        break;\n      }\n    }\n    if (bbox) d3_geom_voronoiClipEdges(bbox), d3_geom_voronoiCloseCells(bbox);\n    var diagram = {\n      cells: d3_geom_voronoiCells,\n      edges: d3_geom_voronoiEdges\n    };\n    d3_geom_voronoiBeaches = d3_geom_voronoiCircles = d3_geom_voronoiEdges = d3_geom_voronoiCells = null;\n    return diagram;\n  }\n  function d3_geom_voronoiVertexOrder(a, b) {\n    return b.y - a.y || b.x - a.x;\n  }\n  d3.geom.voronoi = function(points) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, fx = x, fy = y, clipExtent = d3_geom_voronoiClipExtent;\n    if (points) return voronoi(points);\n    function voronoi(data) {\n      var polygons = new Array(data.length), x0 = clipExtent[0][0], y0 = clipExtent[0][1], x1 = clipExtent[1][0], y1 = clipExtent[1][1];\n      d3_geom_voronoi(sites(data), clipExtent).cells.forEach(function(cell, i) {\n        var edges = cell.edges, site = cell.site, polygon = polygons[i] = edges.length ? edges.map(function(e) {\n          var s = e.start();\n          return [ s.x, s.y ];\n        }) : site.x >= x0 && site.x <= x1 && site.y >= y0 && site.y <= y1 ? [ [ x0, y1 ], [ x1, y1 ], [ x1, y0 ], [ x0, y0 ] ] : [];\n        polygon.point = data[i];\n      });\n      return polygons;\n    }\n    function sites(data) {\n      return data.map(function(d, i) {\n        return {\n          x: Math.round(fx(d, i) / ε) * ε,\n          y: Math.round(fy(d, i) / ε) * ε,\n          i: i\n        };\n      });\n    }\n    voronoi.links = function(data) {\n      return d3_geom_voronoi(sites(data)).edges.filter(function(edge) {\n        return edge.l && edge.r;\n      }).map(function(edge) {\n        return {\n          source: data[edge.l.i],\n          target: data[edge.r.i]\n        };\n      });\n    };\n    voronoi.triangles = function(data) {\n      var triangles = [];\n      d3_geom_voronoi(sites(data)).cells.forEach(function(cell, i) {\n        var site = cell.site, edges = cell.edges.sort(d3_geom_voronoiHalfEdgeOrder), j = -1, m = edges.length, e0, s0, e1 = edges[m - 1].edge, s1 = e1.l === site ? e1.r : e1.l;\n        while (++j < m) {\n          e0 = e1;\n          s0 = s1;\n          e1 = edges[j].edge;\n          s1 = e1.l === site ? e1.r : e1.l;\n          if (i < s0.i && i < s1.i && d3_geom_voronoiTriangleArea(site, s0, s1) < 0) {\n            triangles.push([ data[i], data[s0.i], data[s1.i] ]);\n          }\n        }\n      });\n      return triangles;\n    };\n    voronoi.x = function(_) {\n      return arguments.length ? (fx = d3_functor(x = _), voronoi) : x;\n    };\n    voronoi.y = function(_) {\n      return arguments.length ? (fy = d3_functor(y = _), voronoi) : y;\n    };\n    voronoi.clipExtent = function(_) {\n      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent;\n      clipExtent = _ == null ? d3_geom_voronoiClipExtent : _;\n      return voronoi;\n    };\n    voronoi.size = function(_) {\n      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent && clipExtent[1];\n      return voronoi.clipExtent(_ && [ [ 0, 0 ], _ ]);\n    };\n    return voronoi;\n  };\n  var d3_geom_voronoiClipExtent = [ [ -1e6, -1e6 ], [ 1e6, 1e6 ] ];\n  function d3_geom_voronoiTriangleArea(a, b, c) {\n    return (a.x - c.x) * (b.y - a.y) - (a.x - b.x) * (c.y - a.y);\n  }\n  d3.geom.delaunay = function(vertices) {\n    return d3.geom.voronoi().triangles(vertices);\n  };\n  d3.geom.quadtree = function(points, x1, y1, x2, y2) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, compat;\n    if (compat = arguments.length) {\n      x = d3_geom_quadtreeCompatX;\n      y = d3_geom_quadtreeCompatY;\n      if (compat === 3) {\n        y2 = y1;\n        x2 = x1;\n        y1 = x1 = 0;\n      }\n      return quadtree(points);\n    }\n    function quadtree(data) {\n      var d, fx = d3_functor(x), fy = d3_functor(y), xs, ys, i, n, x1_, y1_, x2_, y2_;\n      if (x1 != null) {\n        x1_ = x1, y1_ = y1, x2_ = x2, y2_ = y2;\n      } else {\n        x2_ = y2_ = -(x1_ = y1_ = Infinity);\n        xs = [], ys = [];\n        n = data.length;\n        if (compat) for (i = 0; i < n; ++i) {\n          d = data[i];\n          if (d.x < x1_) x1_ = d.x;\n          if (d.y < y1_) y1_ = d.y;\n          if (d.x > x2_) x2_ = d.x;\n          if (d.y > y2_) y2_ = d.y;\n          xs.push(d.x);\n          ys.push(d.y);\n        } else for (i = 0; i < n; ++i) {\n          var x_ = +fx(d = data[i], i), y_ = +fy(d, i);\n          if (x_ < x1_) x1_ = x_;\n          if (y_ < y1_) y1_ = y_;\n          if (x_ > x2_) x2_ = x_;\n          if (y_ > y2_) y2_ = y_;\n          xs.push(x_);\n          ys.push(y_);\n        }\n      }\n      var dx = x2_ - x1_, dy = y2_ - y1_;\n      if (dx > dy) y2_ = y1_ + dx; else x2_ = x1_ + dy;\n      function insert(n, d, x, y, x1, y1, x2, y2) {\n        if (isNaN(x) || isNaN(y)) return;\n        if (n.leaf) {\n          var nx = n.x, ny = n.y;\n          if (nx != null) {\n            if (abs(nx - x) + abs(ny - y) < .01) {\n              insertChild(n, d, x, y, x1, y1, x2, y2);\n            } else {\n              var nPoint = n.point;\n              n.x = n.y = n.point = null;\n              insertChild(n, nPoint, nx, ny, x1, y1, x2, y2);\n              insertChild(n, d, x, y, x1, y1, x2, y2);\n            }\n          } else {\n            n.x = x, n.y = y, n.point = d;\n          }\n        } else {\n          insertChild(n, d, x, y, x1, y1, x2, y2);\n        }\n      }\n      function insertChild(n, d, x, y, x1, y1, x2, y2) {\n        var xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym, i = below << 1 | right;\n        n.leaf = false;\n        n = n.nodes[i] || (n.nodes[i] = d3_geom_quadtreeNode());\n        if (right) x1 = xm; else x2 = xm;\n        if (below) y1 = ym; else y2 = ym;\n        insert(n, d, x, y, x1, y1, x2, y2);\n      }\n      var root = d3_geom_quadtreeNode();\n      root.add = function(d) {\n        insert(root, d, +fx(d, ++i), +fy(d, i), x1_, y1_, x2_, y2_);\n      };\n      root.visit = function(f) {\n        d3_geom_quadtreeVisit(f, root, x1_, y1_, x2_, y2_);\n      };\n      root.find = function(point) {\n        return d3_geom_quadtreeFind(root, point[0], point[1], x1_, y1_, x2_, y2_);\n      };\n      i = -1;\n      if (x1 == null) {\n        while (++i < n) {\n          insert(root, data[i], xs[i], ys[i], x1_, y1_, x2_, y2_);\n        }\n        --i;\n      } else data.forEach(root.add);\n      xs = ys = data = d = null;\n      return root;\n    }\n    quadtree.x = function(_) {\n      return arguments.length ? (x = _, quadtree) : x;\n    };\n    quadtree.y = function(_) {\n      return arguments.length ? (y = _, quadtree) : y;\n    };\n    quadtree.extent = function(_) {\n      if (!arguments.length) return x1 == null ? null : [ [ x1, y1 ], [ x2, y2 ] ];\n      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = +_[0][0], y1 = +_[0][1], x2 = +_[1][0], \n      y2 = +_[1][1];\n      return quadtree;\n    };\n    quadtree.size = function(_) {\n      if (!arguments.length) return x1 == null ? null : [ x2 - x1, y2 - y1 ];\n      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = y1 = 0, x2 = +_[0], y2 = +_[1];\n      return quadtree;\n    };\n    return quadtree;\n  };\n  function d3_geom_quadtreeCompatX(d) {\n    return d.x;\n  }\n  function d3_geom_quadtreeCompatY(d) {\n    return d.y;\n  }\n  function d3_geom_quadtreeNode() {\n    return {\n      leaf: true,\n      nodes: [],\n      point: null,\n      x: null,\n      y: null\n    };\n  }\n  function d3_geom_quadtreeVisit(f, node, x1, y1, x2, y2) {\n    if (!f(node, x1, y1, x2, y2)) {\n      var sx = (x1 + x2) * .5, sy = (y1 + y2) * .5, children = node.nodes;\n      if (children[0]) d3_geom_quadtreeVisit(f, children[0], x1, y1, sx, sy);\n      if (children[1]) d3_geom_quadtreeVisit(f, children[1], sx, y1, x2, sy);\n      if (children[2]) d3_geom_quadtreeVisit(f, children[2], x1, sy, sx, y2);\n      if (children[3]) d3_geom_quadtreeVisit(f, children[3], sx, sy, x2, y2);\n    }\n  }\n  function d3_geom_quadtreeFind(root, x, y, x0, y0, x3, y3) {\n    var minDistance2 = Infinity, closestPoint;\n    (function find(node, x1, y1, x2, y2) {\n      if (x1 > x3 || y1 > y3 || x2 < x0 || y2 < y0) return;\n      if (point = node.point) {\n        var point, dx = x - node.x, dy = y - node.y, distance2 = dx * dx + dy * dy;\n        if (distance2 < minDistance2) {\n          var distance = Math.sqrt(minDistance2 = distance2);\n          x0 = x - distance, y0 = y - distance;\n          x3 = x + distance, y3 = y + distance;\n          closestPoint = point;\n        }\n      }\n      var children = node.nodes, xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym;\n      for (var i = below << 1 | right, j = i + 4; i < j; ++i) {\n        if (node = children[i & 3]) switch (i & 3) {\n         case 0:\n          find(node, x1, y1, xm, ym);\n          break;\n\n         case 1:\n          find(node, xm, y1, x2, ym);\n          break;\n\n         case 2:\n          find(node, x1, ym, xm, y2);\n          break;\n\n         case 3:\n          find(node, xm, ym, x2, y2);\n          break;\n        }\n      }\n    })(root, x0, y0, x3, y3);\n    return closestPoint;\n  }\n  d3.interpolateRgb = d3_interpolateRgb;\n  function d3_interpolateRgb(a, b) {\n    a = d3.rgb(a);\n    b = d3.rgb(b);\n    var ar = a.r, ag = a.g, ab = a.b, br = b.r - ar, bg = b.g - ag, bb = b.b - ab;\n    return function(t) {\n      return \"#\" + d3_rgb_hex(Math.round(ar + br * t)) + d3_rgb_hex(Math.round(ag + bg * t)) + d3_rgb_hex(Math.round(ab + bb * t));\n    };\n  }\n  d3.interpolateObject = d3_interpolateObject;\n  function d3_interpolateObject(a, b) {\n    var i = {}, c = {}, k;\n    for (k in a) {\n      if (k in b) {\n        i[k] = d3_interpolate(a[k], b[k]);\n      } else {\n        c[k] = a[k];\n      }\n    }\n    for (k in b) {\n      if (!(k in a)) {\n        c[k] = b[k];\n      }\n    }\n    return function(t) {\n      for (k in i) c[k] = i[k](t);\n      return c;\n    };\n  }\n  d3.interpolateNumber = d3_interpolateNumber;\n  function d3_interpolateNumber(a, b) {\n    a = +a, b = +b;\n    return function(t) {\n      return a * (1 - t) + b * t;\n    };\n  }\n  d3.interpolateString = d3_interpolateString;\n  function d3_interpolateString(a, b) {\n    var bi = d3_interpolate_numberA.lastIndex = d3_interpolate_numberB.lastIndex = 0, am, bm, bs, i = -1, s = [], q = [];\n    a = a + \"\", b = b + \"\";\n    while ((am = d3_interpolate_numberA.exec(a)) && (bm = d3_interpolate_numberB.exec(b))) {\n      if ((bs = bm.index) > bi) {\n        bs = b.slice(bi, bs);\n        if (s[i]) s[i] += bs; else s[++i] = bs;\n      }\n      if ((am = am[0]) === (bm = bm[0])) {\n        if (s[i]) s[i] += bm; else s[++i] = bm;\n      } else {\n        s[++i] = null;\n        q.push({\n          i: i,\n          x: d3_interpolateNumber(am, bm)\n        });\n      }\n      bi = d3_interpolate_numberB.lastIndex;\n    }\n    if (bi < b.length) {\n      bs = b.slice(bi);\n      if (s[i]) s[i] += bs; else s[++i] = bs;\n    }\n    return s.length < 2 ? q[0] ? (b = q[0].x, function(t) {\n      return b(t) + \"\";\n    }) : function() {\n      return b;\n    } : (b = q.length, function(t) {\n      for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    });\n  }\n  var d3_interpolate_numberA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g, d3_interpolate_numberB = new RegExp(d3_interpolate_numberA.source, \"g\");\n  d3.interpolate = d3_interpolate;\n  function d3_interpolate(a, b) {\n    var i = d3.interpolators.length, f;\n    while (--i >= 0 && !(f = d3.interpolators[i](a, b))) ;\n    return f;\n  }\n  d3.interpolators = [ function(a, b) {\n    var t = typeof b;\n    return (t === \"string\" ? d3_rgb_names.has(b.toLowerCase()) || /^(#|rgb\\(|hsl\\()/i.test(b) ? d3_interpolateRgb : d3_interpolateString : b instanceof d3_color ? d3_interpolateRgb : Array.isArray(b) ? d3_interpolateArray : t === \"object\" && isNaN(b) ? d3_interpolateObject : d3_interpolateNumber)(a, b);\n  } ];\n  d3.interpolateArray = d3_interpolateArray;\n  function d3_interpolateArray(a, b) {\n    var x = [], c = [], na = a.length, nb = b.length, n0 = Math.min(a.length, b.length), i;\n    for (i = 0; i < n0; ++i) x.push(d3_interpolate(a[i], b[i]));\n    for (;i < na; ++i) c[i] = a[i];\n    for (;i < nb; ++i) c[i] = b[i];\n    return function(t) {\n      for (i = 0; i < n0; ++i) c[i] = x[i](t);\n      return c;\n    };\n  }\n  var d3_ease_default = function() {\n    return d3_identity;\n  };\n  var d3_ease = d3.map({\n    linear: d3_ease_default,\n    poly: d3_ease_poly,\n    quad: function() {\n      return d3_ease_quad;\n    },\n    cubic: function() {\n      return d3_ease_cubic;\n    },\n    sin: function() {\n      return d3_ease_sin;\n    },\n    exp: function() {\n      return d3_ease_exp;\n    },\n    circle: function() {\n      return d3_ease_circle;\n    },\n    elastic: d3_ease_elastic,\n    back: d3_ease_back,\n    bounce: function() {\n      return d3_ease_bounce;\n    }\n  });\n  var d3_ease_mode = d3.map({\n    \"in\": d3_identity,\n    out: d3_ease_reverse,\n    \"in-out\": d3_ease_reflect,\n    \"out-in\": function(f) {\n      return d3_ease_reflect(d3_ease_reverse(f));\n    }\n  });\n  d3.ease = function(name) {\n    var i = name.indexOf(\"-\"), t = i >= 0 ? name.slice(0, i) : name, m = i >= 0 ? name.slice(i + 1) : \"in\";\n    t = d3_ease.get(t) || d3_ease_default;\n    m = d3_ease_mode.get(m) || d3_identity;\n    return d3_ease_clamp(m(t.apply(null, d3_arraySlice.call(arguments, 1))));\n  };\n  function d3_ease_clamp(f) {\n    return function(t) {\n      return t <= 0 ? 0 : t >= 1 ? 1 : f(t);\n    };\n  }\n  function d3_ease_reverse(f) {\n    return function(t) {\n      return 1 - f(1 - t);\n    };\n  }\n  function d3_ease_reflect(f) {\n    return function(t) {\n      return .5 * (t < .5 ? f(2 * t) : 2 - f(2 - 2 * t));\n    };\n  }\n  function d3_ease_quad(t) {\n    return t * t;\n  }\n  function d3_ease_cubic(t) {\n    return t * t * t;\n  }\n  function d3_ease_cubicInOut(t) {\n    if (t <= 0) return 0;\n    if (t >= 1) return 1;\n    var t2 = t * t, t3 = t2 * t;\n    return 4 * (t < .5 ? t3 : 3 * (t - t2) + t3 - .75);\n  }\n  function d3_ease_poly(e) {\n    return function(t) {\n      return Math.pow(t, e);\n    };\n  }\n  function d3_ease_sin(t) {\n    return 1 - Math.cos(t * halfπ);\n  }\n  function d3_ease_exp(t) {\n    return Math.pow(2, 10 * (t - 1));\n  }\n  function d3_ease_circle(t) {\n    return 1 - Math.sqrt(1 - t * t);\n  }\n  function d3_ease_elastic(a, p) {\n    var s;\n    if (arguments.length < 2) p = .45;\n    if (arguments.length) s = p / τ * Math.asin(1 / a); else a = 1, s = p / 4;\n    return function(t) {\n      return 1 + a * Math.pow(2, -10 * t) * Math.sin((t - s) * τ / p);\n    };\n  }\n  function d3_ease_back(s) {\n    if (!s) s = 1.70158;\n    return function(t) {\n      return t * t * ((s + 1) * t - s);\n    };\n  }\n  function d3_ease_bounce(t) {\n    return t < 1 / 2.75 ? 7.5625 * t * t : t < 2 / 2.75 ? 7.5625 * (t -= 1.5 / 2.75) * t + .75 : t < 2.5 / 2.75 ? 7.5625 * (t -= 2.25 / 2.75) * t + .9375 : 7.5625 * (t -= 2.625 / 2.75) * t + .984375;\n  }\n  d3.interpolateHcl = d3_interpolateHcl;\n  function d3_interpolateHcl(a, b) {\n    a = d3.hcl(a);\n    b = d3.hcl(b);\n    var ah = a.h, ac = a.c, al = a.l, bh = b.h - ah, bc = b.c - ac, bl = b.l - al;\n    if (isNaN(bc)) bc = 0, ac = isNaN(ac) ? b.c : ac;\n    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n    return function(t) {\n      return d3_hcl_lab(ah + bh * t, ac + bc * t, al + bl * t) + \"\";\n    };\n  }\n  d3.interpolateHsl = d3_interpolateHsl;\n  function d3_interpolateHsl(a, b) {\n    a = d3.hsl(a);\n    b = d3.hsl(b);\n    var ah = a.h, as = a.s, al = a.l, bh = b.h - ah, bs = b.s - as, bl = b.l - al;\n    if (isNaN(bs)) bs = 0, as = isNaN(as) ? b.s : as;\n    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n    return function(t) {\n      return d3_hsl_rgb(ah + bh * t, as + bs * t, al + bl * t) + \"\";\n    };\n  }\n  d3.interpolateLab = d3_interpolateLab;\n  function d3_interpolateLab(a, b) {\n    a = d3.lab(a);\n    b = d3.lab(b);\n    var al = a.l, aa = a.a, ab = a.b, bl = b.l - al, ba = b.a - aa, bb = b.b - ab;\n    return function(t) {\n      return d3_lab_rgb(al + bl * t, aa + ba * t, ab + bb * t) + \"\";\n    };\n  }\n  d3.interpolateRound = d3_interpolateRound;\n  function d3_interpolateRound(a, b) {\n    b -= a;\n    return function(t) {\n      return Math.round(a + b * t);\n    };\n  }\n  d3.transform = function(string) {\n    var g = d3_document.createElementNS(d3.ns.prefix.svg, \"g\");\n    return (d3.transform = function(string) {\n      if (string != null) {\n        g.setAttribute(\"transform\", string);\n        var t = g.transform.baseVal.consolidate();\n      }\n      return new d3_transform(t ? t.matrix : d3_transformIdentity);\n    })(string);\n  };\n  function d3_transform(m) {\n    var r0 = [ m.a, m.b ], r1 = [ m.c, m.d ], kx = d3_transformNormalize(r0), kz = d3_transformDot(r0, r1), ky = d3_transformNormalize(d3_transformCombine(r1, r0, -kz)) || 0;\n    if (r0[0] * r1[1] < r1[0] * r0[1]) {\n      r0[0] *= -1;\n      r0[1] *= -1;\n      kx *= -1;\n      kz *= -1;\n    }\n    this.rotate = (kx ? Math.atan2(r0[1], r0[0]) : Math.atan2(-r1[0], r1[1])) * d3_degrees;\n    this.translate = [ m.e, m.f ];\n    this.scale = [ kx, ky ];\n    this.skew = ky ? Math.atan2(kz, ky) * d3_degrees : 0;\n  }\n  d3_transform.prototype.toString = function() {\n    return \"translate(\" + this.translate + \")rotate(\" + this.rotate + \")skewX(\" + this.skew + \")scale(\" + this.scale + \")\";\n  };\n  function d3_transformDot(a, b) {\n    return a[0] * b[0] + a[1] * b[1];\n  }\n  function d3_transformNormalize(a) {\n    var k = Math.sqrt(d3_transformDot(a, a));\n    if (k) {\n      a[0] /= k;\n      a[1] /= k;\n    }\n    return k;\n  }\n  function d3_transformCombine(a, b, k) {\n    a[0] += k * b[0];\n    a[1] += k * b[1];\n    return a;\n  }\n  var d3_transformIdentity = {\n    a: 1,\n    b: 0,\n    c: 0,\n    d: 1,\n    e: 0,\n    f: 0\n  };\n  d3.interpolateTransform = d3_interpolateTransform;\n  function d3_interpolateTransformPop(s) {\n    return s.length ? s.pop() + \",\" : \"\";\n  }\n  function d3_interpolateTranslate(ta, tb, s, q) {\n    if (ta[0] !== tb[0] || ta[1] !== tb[1]) {\n      var i = s.push(\"translate(\", null, \",\", null, \")\");\n      q.push({\n        i: i - 4,\n        x: d3_interpolateNumber(ta[0], tb[0])\n      }, {\n        i: i - 2,\n        x: d3_interpolateNumber(ta[1], tb[1])\n      });\n    } else if (tb[0] || tb[1]) {\n      s.push(\"translate(\" + tb + \")\");\n    }\n  }\n  function d3_interpolateRotate(ra, rb, s, q) {\n    if (ra !== rb) {\n      if (ra - rb > 180) rb += 360; else if (rb - ra > 180) ra += 360;\n      q.push({\n        i: s.push(d3_interpolateTransformPop(s) + \"rotate(\", null, \")\") - 2,\n        x: d3_interpolateNumber(ra, rb)\n      });\n    } else if (rb) {\n      s.push(d3_interpolateTransformPop(s) + \"rotate(\" + rb + \")\");\n    }\n  }\n  function d3_interpolateSkew(wa, wb, s, q) {\n    if (wa !== wb) {\n      q.push({\n        i: s.push(d3_interpolateTransformPop(s) + \"skewX(\", null, \")\") - 2,\n        x: d3_interpolateNumber(wa, wb)\n      });\n    } else if (wb) {\n      s.push(d3_interpolateTransformPop(s) + \"skewX(\" + wb + \")\");\n    }\n  }\n  function d3_interpolateScale(ka, kb, s, q) {\n    if (ka[0] !== kb[0] || ka[1] !== kb[1]) {\n      var i = s.push(d3_interpolateTransformPop(s) + \"scale(\", null, \",\", null, \")\");\n      q.push({\n        i: i - 4,\n        x: d3_interpolateNumber(ka[0], kb[0])\n      }, {\n        i: i - 2,\n        x: d3_interpolateNumber(ka[1], kb[1])\n      });\n    } else if (kb[0] !== 1 || kb[1] !== 1) {\n      s.push(d3_interpolateTransformPop(s) + \"scale(\" + kb + \")\");\n    }\n  }\n  function d3_interpolateTransform(a, b) {\n    var s = [], q = [];\n    a = d3.transform(a), b = d3.transform(b);\n    d3_interpolateTranslate(a.translate, b.translate, s, q);\n    d3_interpolateRotate(a.rotate, b.rotate, s, q);\n    d3_interpolateSkew(a.skew, b.skew, s, q);\n    d3_interpolateScale(a.scale, b.scale, s, q);\n    a = b = null;\n    return function(t) {\n      var i = -1, n = q.length, o;\n      while (++i < n) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    };\n  }\n  function d3_uninterpolateNumber(a, b) {\n    b = (b -= a = +a) || 1 / b;\n    return function(x) {\n      return (x - a) / b;\n    };\n  }\n  function d3_uninterpolateClamp(a, b) {\n    b = (b -= a = +a) || 1 / b;\n    return function(x) {\n      return Math.max(0, Math.min(1, (x - a) / b));\n    };\n  }\n  d3.layout = {};\n  d3.layout.bundle = function() {\n    return function(links) {\n      var paths = [], i = -1, n = links.length;\n      while (++i < n) paths.push(d3_layout_bundlePath(links[i]));\n      return paths;\n    };\n  };\n  function d3_layout_bundlePath(link) {\n    var start = link.source, end = link.target, lca = d3_layout_bundleLeastCommonAncestor(start, end), points = [ start ];\n    while (start !== lca) {\n      start = start.parent;\n      points.push(start);\n    }\n    var k = points.length;\n    while (end !== lca) {\n      points.splice(k, 0, end);\n      end = end.parent;\n    }\n    return points;\n  }\n  function d3_layout_bundleAncestors(node) {\n    var ancestors = [], parent = node.parent;\n    while (parent != null) {\n      ancestors.push(node);\n      node = parent;\n      parent = parent.parent;\n    }\n    ancestors.push(node);\n    return ancestors;\n  }\n  function d3_layout_bundleLeastCommonAncestor(a, b) {\n    if (a === b) return a;\n    var aNodes = d3_layout_bundleAncestors(a), bNodes = d3_layout_bundleAncestors(b), aNode = aNodes.pop(), bNode = bNodes.pop(), sharedNode = null;\n    while (aNode === bNode) {\n      sharedNode = aNode;\n      aNode = aNodes.pop();\n      bNode = bNodes.pop();\n    }\n    return sharedNode;\n  }\n  d3.layout.chord = function() {\n    var chord = {}, chords, groups, matrix, n, padding = 0, sortGroups, sortSubgroups, sortChords;\n    function relayout() {\n      var subgroups = {}, groupSums = [], groupIndex = d3.range(n), subgroupIndex = [], k, x, x0, i, j;\n      chords = [];\n      groups = [];\n      k = 0, i = -1;\n      while (++i < n) {\n        x = 0, j = -1;\n        while (++j < n) {\n          x += matrix[i][j];\n        }\n        groupSums.push(x);\n        subgroupIndex.push(d3.range(n));\n        k += x;\n      }\n      if (sortGroups) {\n        groupIndex.sort(function(a, b) {\n          return sortGroups(groupSums[a], groupSums[b]);\n        });\n      }\n      if (sortSubgroups) {\n        subgroupIndex.forEach(function(d, i) {\n          d.sort(function(a, b) {\n            return sortSubgroups(matrix[i][a], matrix[i][b]);\n          });\n        });\n      }\n      k = (τ - padding * n) / k;\n      x = 0, i = -1;\n      while (++i < n) {\n        x0 = x, j = -1;\n        while (++j < n) {\n          var di = groupIndex[i], dj = subgroupIndex[di][j], v = matrix[di][dj], a0 = x, a1 = x += v * k;\n          subgroups[di + \"-\" + dj] = {\n            index: di,\n            subindex: dj,\n            startAngle: a0,\n            endAngle: a1,\n            value: v\n          };\n        }\n        groups[di] = {\n          index: di,\n          startAngle: x0,\n          endAngle: x,\n          value: groupSums[di]\n        };\n        x += padding;\n      }\n      i = -1;\n      while (++i < n) {\n        j = i - 1;\n        while (++j < n) {\n          var source = subgroups[i + \"-\" + j], target = subgroups[j + \"-\" + i];\n          if (source.value || target.value) {\n            chords.push(source.value < target.value ? {\n              source: target,\n              target: source\n            } : {\n              source: source,\n              target: target\n            });\n          }\n        }\n      }\n      if (sortChords) resort();\n    }\n    function resort() {\n      chords.sort(function(a, b) {\n        return sortChords((a.source.value + a.target.value) / 2, (b.source.value + b.target.value) / 2);\n      });\n    }\n    chord.matrix = function(x) {\n      if (!arguments.length) return matrix;\n      n = (matrix = x) && matrix.length;\n      chords = groups = null;\n      return chord;\n    };\n    chord.padding = function(x) {\n      if (!arguments.length) return padding;\n      padding = x;\n      chords = groups = null;\n      return chord;\n    };\n    chord.sortGroups = function(x) {\n      if (!arguments.length) return sortGroups;\n      sortGroups = x;\n      chords = groups = null;\n      return chord;\n    };\n    chord.sortSubgroups = function(x) {\n      if (!arguments.length) return sortSubgroups;\n      sortSubgroups = x;\n      chords = null;\n      return chord;\n    };\n    chord.sortChords = function(x) {\n      if (!arguments.length) return sortChords;\n      sortChords = x;\n      if (chords) resort();\n      return chord;\n    };\n    chord.chords = function() {\n      if (!chords) relayout();\n      return chords;\n    };\n    chord.groups = function() {\n      if (!groups) relayout();\n      return groups;\n    };\n    return chord;\n  };\n  d3.layout.force = function() {\n    var force = {}, event = d3.dispatch(\"start\", \"tick\", \"end\"), timer, size = [ 1, 1 ], drag, alpha, friction = .9, linkDistance = d3_layout_forceLinkDistance, linkStrength = d3_layout_forceLinkStrength, charge = -30, chargeDistance2 = d3_layout_forceChargeDistance2, gravity = .1, theta2 = .64, nodes = [], links = [], distances, strengths, charges;\n    function repulse(node) {\n      return function(quad, x1, _, x2) {\n        if (quad.point !== node) {\n          var dx = quad.cx - node.x, dy = quad.cy - node.y, dw = x2 - x1, dn = dx * dx + dy * dy;\n          if (dw * dw / theta2 < dn) {\n            if (dn < chargeDistance2) {\n              var k = quad.charge / dn;\n              node.px -= dx * k;\n              node.py -= dy * k;\n            }\n            return true;\n          }\n          if (quad.point && dn && dn < chargeDistance2) {\n            var k = quad.pointCharge / dn;\n            node.px -= dx * k;\n            node.py -= dy * k;\n          }\n        }\n        return !quad.charge;\n      };\n    }\n    force.tick = function() {\n      if ((alpha *= .99) < .005) {\n        timer = null;\n        event.end({\n          type: \"end\",\n          alpha: alpha = 0\n        });\n        return true;\n      }\n      var n = nodes.length, m = links.length, q, i, o, s, t, l, k, x, y;\n      for (i = 0; i < m; ++i) {\n        o = links[i];\n        s = o.source;\n        t = o.target;\n        x = t.x - s.x;\n        y = t.y - s.y;\n        if (l = x * x + y * y) {\n          l = alpha * strengths[i] * ((l = Math.sqrt(l)) - distances[i]) / l;\n          x *= l;\n          y *= l;\n          t.x -= x * (k = s.weight + t.weight ? s.weight / (s.weight + t.weight) : .5);\n          t.y -= y * k;\n          s.x += x * (k = 1 - k);\n          s.y += y * k;\n        }\n      }\n      if (k = alpha * gravity) {\n        x = size[0] / 2;\n        y = size[1] / 2;\n        i = -1;\n        if (k) while (++i < n) {\n          o = nodes[i];\n          o.x += (x - o.x) * k;\n          o.y += (y - o.y) * k;\n        }\n      }\n      if (charge) {\n        d3_layout_forceAccumulate(q = d3.geom.quadtree(nodes), alpha, charges);\n        i = -1;\n        while (++i < n) {\n          if (!(o = nodes[i]).fixed) {\n            q.visit(repulse(o));\n          }\n        }\n      }\n      i = -1;\n      while (++i < n) {\n        o = nodes[i];\n        if (o.fixed) {\n          o.x = o.px;\n          o.y = o.py;\n        } else {\n          o.x -= (o.px - (o.px = o.x)) * friction;\n          o.y -= (o.py - (o.py = o.y)) * friction;\n        }\n      }\n      event.tick({\n        type: \"tick\",\n        alpha: alpha\n      });\n    };\n    force.nodes = function(x) {\n      if (!arguments.length) return nodes;\n      nodes = x;\n      return force;\n    };\n    force.links = function(x) {\n      if (!arguments.length) return links;\n      links = x;\n      return force;\n    };\n    force.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return force;\n    };\n    force.linkDistance = function(x) {\n      if (!arguments.length) return linkDistance;\n      linkDistance = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.distance = force.linkDistance;\n    force.linkStrength = function(x) {\n      if (!arguments.length) return linkStrength;\n      linkStrength = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.friction = function(x) {\n      if (!arguments.length) return friction;\n      friction = +x;\n      return force;\n    };\n    force.charge = function(x) {\n      if (!arguments.length) return charge;\n      charge = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.chargeDistance = function(x) {\n      if (!arguments.length) return Math.sqrt(chargeDistance2);\n      chargeDistance2 = x * x;\n      return force;\n    };\n    force.gravity = function(x) {\n      if (!arguments.length) return gravity;\n      gravity = +x;\n      return force;\n    };\n    force.theta = function(x) {\n      if (!arguments.length) return Math.sqrt(theta2);\n      theta2 = x * x;\n      return force;\n    };\n    force.alpha = function(x) {\n      if (!arguments.length) return alpha;\n      x = +x;\n      if (alpha) {\n        if (x > 0) {\n          alpha = x;\n        } else {\n          timer.c = null, timer.t = NaN, timer = null;\n          event.end({\n            type: \"end\",\n            alpha: alpha = 0\n          });\n        }\n      } else if (x > 0) {\n        event.start({\n          type: \"start\",\n          alpha: alpha = x\n        });\n        timer = d3_timer(force.tick);\n      }\n      return force;\n    };\n    force.start = function() {\n      var i, n = nodes.length, m = links.length, w = size[0], h = size[1], neighbors, o;\n      for (i = 0; i < n; ++i) {\n        (o = nodes[i]).index = i;\n        o.weight = 0;\n      }\n      for (i = 0; i < m; ++i) {\n        o = links[i];\n        if (typeof o.source == \"number\") o.source = nodes[o.source];\n        if (typeof o.target == \"number\") o.target = nodes[o.target];\n        ++o.source.weight;\n        ++o.target.weight;\n      }\n      for (i = 0; i < n; ++i) {\n        o = nodes[i];\n        if (isNaN(o.x)) o.x = position(\"x\", w);\n        if (isNaN(o.y)) o.y = position(\"y\", h);\n        if (isNaN(o.px)) o.px = o.x;\n        if (isNaN(o.py)) o.py = o.y;\n      }\n      distances = [];\n      if (typeof linkDistance === \"function\") for (i = 0; i < m; ++i) distances[i] = +linkDistance.call(this, links[i], i); else for (i = 0; i < m; ++i) distances[i] = linkDistance;\n      strengths = [];\n      if (typeof linkStrength === \"function\") for (i = 0; i < m; ++i) strengths[i] = +linkStrength.call(this, links[i], i); else for (i = 0; i < m; ++i) strengths[i] = linkStrength;\n      charges = [];\n      if (typeof charge === \"function\") for (i = 0; i < n; ++i) charges[i] = +charge.call(this, nodes[i], i); else for (i = 0; i < n; ++i) charges[i] = charge;\n      function position(dimension, size) {\n        if (!neighbors) {\n          neighbors = new Array(n);\n          for (j = 0; j < n; ++j) {\n            neighbors[j] = [];\n          }\n          for (j = 0; j < m; ++j) {\n            var o = links[j];\n            neighbors[o.source.index].push(o.target);\n            neighbors[o.target.index].push(o.source);\n          }\n        }\n        var candidates = neighbors[i], j = -1, l = candidates.length, x;\n        while (++j < l) if (!isNaN(x = candidates[j][dimension])) return x;\n        return Math.random() * size;\n      }\n      return force.resume();\n    };\n    force.resume = function() {\n      return force.alpha(.1);\n    };\n    force.stop = function() {\n      return force.alpha(0);\n    };\n    force.drag = function() {\n      if (!drag) drag = d3.behavior.drag().origin(d3_identity).on(\"dragstart.force\", d3_layout_forceDragstart).on(\"drag.force\", dragmove).on(\"dragend.force\", d3_layout_forceDragend);\n      if (!arguments.length) return drag;\n      this.on(\"mouseover.force\", d3_layout_forceMouseover).on(\"mouseout.force\", d3_layout_forceMouseout).call(drag);\n    };\n    function dragmove(d) {\n      d.px = d3.event.x, d.py = d3.event.y;\n      force.resume();\n    }\n    return d3.rebind(force, event, \"on\");\n  };\n  function d3_layout_forceDragstart(d) {\n    d.fixed |= 2;\n  }\n  function d3_layout_forceDragend(d) {\n    d.fixed &= ~6;\n  }\n  function d3_layout_forceMouseover(d) {\n    d.fixed |= 4;\n    d.px = d.x, d.py = d.y;\n  }\n  function d3_layout_forceMouseout(d) {\n    d.fixed &= ~4;\n  }\n  function d3_layout_forceAccumulate(quad, alpha, charges) {\n    var cx = 0, cy = 0;\n    quad.charge = 0;\n    if (!quad.leaf) {\n      var nodes = quad.nodes, n = nodes.length, i = -1, c;\n      while (++i < n) {\n        c = nodes[i];\n        if (c == null) continue;\n        d3_layout_forceAccumulate(c, alpha, charges);\n        quad.charge += c.charge;\n        cx += c.charge * c.cx;\n        cy += c.charge * c.cy;\n      }\n    }\n    if (quad.point) {\n      if (!quad.leaf) {\n        quad.point.x += Math.random() - .5;\n        quad.point.y += Math.random() - .5;\n      }\n      var k = alpha * charges[quad.point.index];\n      quad.charge += quad.pointCharge = k;\n      cx += k * quad.point.x;\n      cy += k * quad.point.y;\n    }\n    quad.cx = cx / quad.charge;\n    quad.cy = cy / quad.charge;\n  }\n  var d3_layout_forceLinkDistance = 20, d3_layout_forceLinkStrength = 1, d3_layout_forceChargeDistance2 = Infinity;\n  d3.layout.hierarchy = function() {\n    var sort = d3_layout_hierarchySort, children = d3_layout_hierarchyChildren, value = d3_layout_hierarchyValue;\n    function hierarchy(root) {\n      var stack = [ root ], nodes = [], node;\n      root.depth = 0;\n      while ((node = stack.pop()) != null) {\n        nodes.push(node);\n        if ((childs = children.call(hierarchy, node, node.depth)) && (n = childs.length)) {\n          var n, childs, child;\n          while (--n >= 0) {\n            stack.push(child = childs[n]);\n            child.parent = node;\n            child.depth = node.depth + 1;\n          }\n          if (value) node.value = 0;\n          node.children = childs;\n        } else {\n          if (value) node.value = +value.call(hierarchy, node, node.depth) || 0;\n          delete node.children;\n        }\n      }\n      d3_layout_hierarchyVisitAfter(root, function(node) {\n        var childs, parent;\n        if (sort && (childs = node.children)) childs.sort(sort);\n        if (value && (parent = node.parent)) parent.value += node.value;\n      });\n      return nodes;\n    }\n    hierarchy.sort = function(x) {\n      if (!arguments.length) return sort;\n      sort = x;\n      return hierarchy;\n    };\n    hierarchy.children = function(x) {\n      if (!arguments.length) return children;\n      children = x;\n      return hierarchy;\n    };\n    hierarchy.value = function(x) {\n      if (!arguments.length) return value;\n      value = x;\n      return hierarchy;\n    };\n    hierarchy.revalue = function(root) {\n      if (value) {\n        d3_layout_hierarchyVisitBefore(root, function(node) {\n          if (node.children) node.value = 0;\n        });\n        d3_layout_hierarchyVisitAfter(root, function(node) {\n          var parent;\n          if (!node.children) node.value = +value.call(hierarchy, node, node.depth) || 0;\n          if (parent = node.parent) parent.value += node.value;\n        });\n      }\n      return root;\n    };\n    return hierarchy;\n  };\n  function d3_layout_hierarchyRebind(object, hierarchy) {\n    d3.rebind(object, hierarchy, \"sort\", \"children\", \"value\");\n    object.nodes = object;\n    object.links = d3_layout_hierarchyLinks;\n    return object;\n  }\n  function d3_layout_hierarchyVisitBefore(node, callback) {\n    var nodes = [ node ];\n    while ((node = nodes.pop()) != null) {\n      callback(node);\n      if ((children = node.children) && (n = children.length)) {\n        var n, children;\n        while (--n >= 0) nodes.push(children[n]);\n      }\n    }\n  }\n  function d3_layout_hierarchyVisitAfter(node, callback) {\n    var nodes = [ node ], nodes2 = [];\n    while ((node = nodes.pop()) != null) {\n      nodes2.push(node);\n      if ((children = node.children) && (n = children.length)) {\n        var i = -1, n, children;\n        while (++i < n) nodes.push(children[i]);\n      }\n    }\n    while ((node = nodes2.pop()) != null) {\n      callback(node);\n    }\n  }\n  function d3_layout_hierarchyChildren(d) {\n    return d.children;\n  }\n  function d3_layout_hierarchyValue(d) {\n    return d.value;\n  }\n  function d3_layout_hierarchySort(a, b) {\n    return b.value - a.value;\n  }\n  function d3_layout_hierarchyLinks(nodes) {\n    return d3.merge(nodes.map(function(parent) {\n      return (parent.children || []).map(function(child) {\n        return {\n          source: parent,\n          target: child\n        };\n      });\n    }));\n  }\n  d3.layout.partition = function() {\n    var hierarchy = d3.layout.hierarchy(), size = [ 1, 1 ];\n    function position(node, x, dx, dy) {\n      var children = node.children;\n      node.x = x;\n      node.y = node.depth * dy;\n      node.dx = dx;\n      node.dy = dy;\n      if (children && (n = children.length)) {\n        var i = -1, n, c, d;\n        dx = node.value ? dx / node.value : 0;\n        while (++i < n) {\n          position(c = children[i], x, d = c.value * dx, dy);\n          x += d;\n        }\n      }\n    }\n    function depth(node) {\n      var children = node.children, d = 0;\n      if (children && (n = children.length)) {\n        var i = -1, n;\n        while (++i < n) d = Math.max(d, depth(children[i]));\n      }\n      return 1 + d;\n    }\n    function partition(d, i) {\n      var nodes = hierarchy.call(this, d, i);\n      position(nodes[0], 0, size[0], size[1] / depth(nodes[0]));\n      return nodes;\n    }\n    partition.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return partition;\n    };\n    return d3_layout_hierarchyRebind(partition, hierarchy);\n  };\n  d3.layout.pie = function() {\n    var value = Number, sort = d3_layout_pieSortByValue, startAngle = 0, endAngle = τ, padAngle = 0;\n    function pie(data) {\n      var n = data.length, values = data.map(function(d, i) {\n        return +value.call(pie, d, i);\n      }), a = +(typeof startAngle === \"function\" ? startAngle.apply(this, arguments) : startAngle), da = (typeof endAngle === \"function\" ? endAngle.apply(this, arguments) : endAngle) - a, p = Math.min(Math.abs(da) / n, +(typeof padAngle === \"function\" ? padAngle.apply(this, arguments) : padAngle)), pa = p * (da < 0 ? -1 : 1), sum = d3.sum(values), k = sum ? (da - n * pa) / sum : 0, index = d3.range(n), arcs = [], v;\n      if (sort != null) index.sort(sort === d3_layout_pieSortByValue ? function(i, j) {\n        return values[j] - values[i];\n      } : function(i, j) {\n        return sort(data[i], data[j]);\n      });\n      index.forEach(function(i) {\n        arcs[i] = {\n          data: data[i],\n          value: v = values[i],\n          startAngle: a,\n          endAngle: a += v * k + pa,\n          padAngle: p\n        };\n      });\n      return arcs;\n    }\n    pie.value = function(_) {\n      if (!arguments.length) return value;\n      value = _;\n      return pie;\n    };\n    pie.sort = function(_) {\n      if (!arguments.length) return sort;\n      sort = _;\n      return pie;\n    };\n    pie.startAngle = function(_) {\n      if (!arguments.length) return startAngle;\n      startAngle = _;\n      return pie;\n    };\n    pie.endAngle = function(_) {\n      if (!arguments.length) return endAngle;\n      endAngle = _;\n      return pie;\n    };\n    pie.padAngle = function(_) {\n      if (!arguments.length) return padAngle;\n      padAngle = _;\n      return pie;\n    };\n    return pie;\n  };\n  var d3_layout_pieSortByValue = {};\n  d3.layout.stack = function() {\n    var values = d3_identity, order = d3_layout_stackOrderDefault, offset = d3_layout_stackOffsetZero, out = d3_layout_stackOut, x = d3_layout_stackX, y = d3_layout_stackY;\n    function stack(data, index) {\n      if (!(n = data.length)) return data;\n      var series = data.map(function(d, i) {\n        return values.call(stack, d, i);\n      });\n      var points = series.map(function(d) {\n        return d.map(function(v, i) {\n          return [ x.call(stack, v, i), y.call(stack, v, i) ];\n        });\n      });\n      var orders = order.call(stack, points, index);\n      series = d3.permute(series, orders);\n      points = d3.permute(points, orders);\n      var offsets = offset.call(stack, points, index);\n      var m = series[0].length, n, i, j, o;\n      for (j = 0; j < m; ++j) {\n        out.call(stack, series[0][j], o = offsets[j], points[0][j][1]);\n        for (i = 1; i < n; ++i) {\n          out.call(stack, series[i][j], o += points[i - 1][j][1], points[i][j][1]);\n        }\n      }\n      return data;\n    }\n    stack.values = function(x) {\n      if (!arguments.length) return values;\n      values = x;\n      return stack;\n    };\n    stack.order = function(x) {\n      if (!arguments.length) return order;\n      order = typeof x === \"function\" ? x : d3_layout_stackOrders.get(x) || d3_layout_stackOrderDefault;\n      return stack;\n    };\n    stack.offset = function(x) {\n      if (!arguments.length) return offset;\n      offset = typeof x === \"function\" ? x : d3_layout_stackOffsets.get(x) || d3_layout_stackOffsetZero;\n      return stack;\n    };\n    stack.x = function(z) {\n      if (!arguments.length) return x;\n      x = z;\n      return stack;\n    };\n    stack.y = function(z) {\n      if (!arguments.length) return y;\n      y = z;\n      return stack;\n    };\n    stack.out = function(z) {\n      if (!arguments.length) return out;\n      out = z;\n      return stack;\n    };\n    return stack;\n  };\n  function d3_layout_stackX(d) {\n    return d.x;\n  }\n  function d3_layout_stackY(d) {\n    return d.y;\n  }\n  function d3_layout_stackOut(d, y0, y) {\n    d.y0 = y0;\n    d.y = y;\n  }\n  var d3_layout_stackOrders = d3.map({\n    \"inside-out\": function(data) {\n      var n = data.length, i, j, max = data.map(d3_layout_stackMaxIndex), sums = data.map(d3_layout_stackReduceSum), index = d3.range(n).sort(function(a, b) {\n        return max[a] - max[b];\n      }), top = 0, bottom = 0, tops = [], bottoms = [];\n      for (i = 0; i < n; ++i) {\n        j = index[i];\n        if (top < bottom) {\n          top += sums[j];\n          tops.push(j);\n        } else {\n          bottom += sums[j];\n          bottoms.push(j);\n        }\n      }\n      return bottoms.reverse().concat(tops);\n    },\n    reverse: function(data) {\n      return d3.range(data.length).reverse();\n    },\n    \"default\": d3_layout_stackOrderDefault\n  });\n  var d3_layout_stackOffsets = d3.map({\n    silhouette: function(data) {\n      var n = data.length, m = data[0].length, sums = [], max = 0, i, j, o, y0 = [];\n      for (j = 0; j < m; ++j) {\n        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n        if (o > max) max = o;\n        sums.push(o);\n      }\n      for (j = 0; j < m; ++j) {\n        y0[j] = (max - sums[j]) / 2;\n      }\n      return y0;\n    },\n    wiggle: function(data) {\n      var n = data.length, x = data[0], m = x.length, i, j, k, s1, s2, s3, dx, o, o0, y0 = [];\n      y0[0] = o = o0 = 0;\n      for (j = 1; j < m; ++j) {\n        for (i = 0, s1 = 0; i < n; ++i) s1 += data[i][j][1];\n        for (i = 0, s2 = 0, dx = x[j][0] - x[j - 1][0]; i < n; ++i) {\n          for (k = 0, s3 = (data[i][j][1] - data[i][j - 1][1]) / (2 * dx); k < i; ++k) {\n            s3 += (data[k][j][1] - data[k][j - 1][1]) / dx;\n          }\n          s2 += s3 * data[i][j][1];\n        }\n        y0[j] = o -= s1 ? s2 / s1 * dx : 0;\n        if (o < o0) o0 = o;\n      }\n      for (j = 0; j < m; ++j) y0[j] -= o0;\n      return y0;\n    },\n    expand: function(data) {\n      var n = data.length, m = data[0].length, k = 1 / n, i, j, o, y0 = [];\n      for (j = 0; j < m; ++j) {\n        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n        if (o) for (i = 0; i < n; i++) data[i][j][1] /= o; else for (i = 0; i < n; i++) data[i][j][1] = k;\n      }\n      for (j = 0; j < m; ++j) y0[j] = 0;\n      return y0;\n    },\n    zero: d3_layout_stackOffsetZero\n  });\n  function d3_layout_stackOrderDefault(data) {\n    return d3.range(data.length);\n  }\n  function d3_layout_stackOffsetZero(data) {\n    var j = -1, m = data[0].length, y0 = [];\n    while (++j < m) y0[j] = 0;\n    return y0;\n  }\n  function d3_layout_stackMaxIndex(array) {\n    var i = 1, j = 0, v = array[0][1], k, n = array.length;\n    for (;i < n; ++i) {\n      if ((k = array[i][1]) > v) {\n        j = i;\n        v = k;\n      }\n    }\n    return j;\n  }\n  function d3_layout_stackReduceSum(d) {\n    return d.reduce(d3_layout_stackSum, 0);\n  }\n  function d3_layout_stackSum(p, d) {\n    return p + d[1];\n  }\n  d3.layout.histogram = function() {\n    var frequency = true, valuer = Number, ranger = d3_layout_histogramRange, binner = d3_layout_histogramBinSturges;\n    function histogram(data, i) {\n      var bins = [], values = data.map(valuer, this), range = ranger.call(this, values, i), thresholds = binner.call(this, range, values, i), bin, i = -1, n = values.length, m = thresholds.length - 1, k = frequency ? 1 : 1 / n, x;\n      while (++i < m) {\n        bin = bins[i] = [];\n        bin.dx = thresholds[i + 1] - (bin.x = thresholds[i]);\n        bin.y = 0;\n      }\n      if (m > 0) {\n        i = -1;\n        while (++i < n) {\n          x = values[i];\n          if (x >= range[0] && x <= range[1]) {\n            bin = bins[d3.bisect(thresholds, x, 1, m) - 1];\n            bin.y += k;\n            bin.push(data[i]);\n          }\n        }\n      }\n      return bins;\n    }\n    histogram.value = function(x) {\n      if (!arguments.length) return valuer;\n      valuer = x;\n      return histogram;\n    };\n    histogram.range = function(x) {\n      if (!arguments.length) return ranger;\n      ranger = d3_functor(x);\n      return histogram;\n    };\n    histogram.bins = function(x) {\n      if (!arguments.length) return binner;\n      binner = typeof x === \"number\" ? function(range) {\n        return d3_layout_histogramBinFixed(range, x);\n      } : d3_functor(x);\n      return histogram;\n    };\n    histogram.frequency = function(x) {\n      if (!arguments.length) return frequency;\n      frequency = !!x;\n      return histogram;\n    };\n    return histogram;\n  };\n  function d3_layout_histogramBinSturges(range, values) {\n    return d3_layout_histogramBinFixed(range, Math.ceil(Math.log(values.length) / Math.LN2 + 1));\n  }\n  function d3_layout_histogramBinFixed(range, n) {\n    var x = -1, b = +range[0], m = (range[1] - b) / n, f = [];\n    while (++x <= n) f[x] = m * x + b;\n    return f;\n  }\n  function d3_layout_histogramRange(values) {\n    return [ d3.min(values), d3.max(values) ];\n  }\n  d3.layout.pack = function() {\n    var hierarchy = d3.layout.hierarchy().sort(d3_layout_packSort), padding = 0, size = [ 1, 1 ], radius;\n    function pack(d, i) {\n      var nodes = hierarchy.call(this, d, i), root = nodes[0], w = size[0], h = size[1], r = radius == null ? Math.sqrt : typeof radius === \"function\" ? radius : function() {\n        return radius;\n      };\n      root.x = root.y = 0;\n      d3_layout_hierarchyVisitAfter(root, function(d) {\n        d.r = +r(d.value);\n      });\n      d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n      if (padding) {\n        var dr = padding * (radius ? 1 : Math.max(2 * root.r / w, 2 * root.r / h)) / 2;\n        d3_layout_hierarchyVisitAfter(root, function(d) {\n          d.r += dr;\n        });\n        d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n        d3_layout_hierarchyVisitAfter(root, function(d) {\n          d.r -= dr;\n        });\n      }\n      d3_layout_packTransform(root, w / 2, h / 2, radius ? 1 : 1 / Math.max(2 * root.r / w, 2 * root.r / h));\n      return nodes;\n    }\n    pack.size = function(_) {\n      if (!arguments.length) return size;\n      size = _;\n      return pack;\n    };\n    pack.radius = function(_) {\n      if (!arguments.length) return radius;\n      radius = _ == null || typeof _ === \"function\" ? _ : +_;\n      return pack;\n    };\n    pack.padding = function(_) {\n      if (!arguments.length) return padding;\n      padding = +_;\n      return pack;\n    };\n    return d3_layout_hierarchyRebind(pack, hierarchy);\n  };\n  function d3_layout_packSort(a, b) {\n    return a.value - b.value;\n  }\n  function d3_layout_packInsert(a, b) {\n    var c = a._pack_next;\n    a._pack_next = b;\n    b._pack_prev = a;\n    b._pack_next = c;\n    c._pack_prev = b;\n  }\n  function d3_layout_packSplice(a, b) {\n    a._pack_next = b;\n    b._pack_prev = a;\n  }\n  function d3_layout_packIntersects(a, b) {\n    var dx = b.x - a.x, dy = b.y - a.y, dr = a.r + b.r;\n    return .999 * dr * dr > dx * dx + dy * dy;\n  }\n  function d3_layout_packSiblings(node) {\n    if (!(nodes = node.children) || !(n = nodes.length)) return;\n    var nodes, xMin = Infinity, xMax = -Infinity, yMin = Infinity, yMax = -Infinity, a, b, c, i, j, k, n;\n    function bound(node) {\n      xMin = Math.min(node.x - node.r, xMin);\n      xMax = Math.max(node.x + node.r, xMax);\n      yMin = Math.min(node.y - node.r, yMin);\n      yMax = Math.max(node.y + node.r, yMax);\n    }\n    nodes.forEach(d3_layout_packLink);\n    a = nodes[0];\n    a.x = -a.r;\n    a.y = 0;\n    bound(a);\n    if (n > 1) {\n      b = nodes[1];\n      b.x = b.r;\n      b.y = 0;\n      bound(b);\n      if (n > 2) {\n        c = nodes[2];\n        d3_layout_packPlace(a, b, c);\n        bound(c);\n        d3_layout_packInsert(a, c);\n        a._pack_prev = c;\n        d3_layout_packInsert(c, b);\n        b = a._pack_next;\n        for (i = 3; i < n; i++) {\n          d3_layout_packPlace(a, b, c = nodes[i]);\n          var isect = 0, s1 = 1, s2 = 1;\n          for (j = b._pack_next; j !== b; j = j._pack_next, s1++) {\n            if (d3_layout_packIntersects(j, c)) {\n              isect = 1;\n              break;\n            }\n          }\n          if (isect == 1) {\n            for (k = a._pack_prev; k !== j._pack_prev; k = k._pack_prev, s2++) {\n              if (d3_layout_packIntersects(k, c)) {\n                break;\n              }\n            }\n          }\n          if (isect) {\n            if (s1 < s2 || s1 == s2 && b.r < a.r) d3_layout_packSplice(a, b = j); else d3_layout_packSplice(a = k, b);\n            i--;\n          } else {\n            d3_layout_packInsert(a, c);\n            b = c;\n            bound(c);\n          }\n        }\n      }\n    }\n    var cx = (xMin + xMax) / 2, cy = (yMin + yMax) / 2, cr = 0;\n    for (i = 0; i < n; i++) {\n      c = nodes[i];\n      c.x -= cx;\n      c.y -= cy;\n      cr = Math.max(cr, c.r + Math.sqrt(c.x * c.x + c.y * c.y));\n    }\n    node.r = cr;\n    nodes.forEach(d3_layout_packUnlink);\n  }\n  function d3_layout_packLink(node) {\n    node._pack_next = node._pack_prev = node;\n  }\n  function d3_layout_packUnlink(node) {\n    delete node._pack_next;\n    delete node._pack_prev;\n  }\n  function d3_layout_packTransform(node, x, y, k) {\n    var children = node.children;\n    node.x = x += k * node.x;\n    node.y = y += k * node.y;\n    node.r *= k;\n    if (children) {\n      var i = -1, n = children.length;\n      while (++i < n) d3_layout_packTransform(children[i], x, y, k);\n    }\n  }\n  function d3_layout_packPlace(a, b, c) {\n    var db = a.r + c.r, dx = b.x - a.x, dy = b.y - a.y;\n    if (db && (dx || dy)) {\n      var da = b.r + c.r, dc = dx * dx + dy * dy;\n      da *= da;\n      db *= db;\n      var x = .5 + (db - da) / (2 * dc), y = Math.sqrt(Math.max(0, 2 * da * (db + dc) - (db -= dc) * db - da * da)) / (2 * dc);\n      c.x = a.x + x * dx + y * dy;\n      c.y = a.y + x * dy - y * dx;\n    } else {\n      c.x = a.x + db;\n      c.y = a.y;\n    }\n  }\n  d3.layout.tree = function() {\n    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = null;\n    function tree(d, i) {\n      var nodes = hierarchy.call(this, d, i), root0 = nodes[0], root1 = wrapTree(root0);\n      d3_layout_hierarchyVisitAfter(root1, firstWalk), root1.parent.m = -root1.z;\n      d3_layout_hierarchyVisitBefore(root1, secondWalk);\n      if (nodeSize) d3_layout_hierarchyVisitBefore(root0, sizeNode); else {\n        var left = root0, right = root0, bottom = root0;\n        d3_layout_hierarchyVisitBefore(root0, function(node) {\n          if (node.x < left.x) left = node;\n          if (node.x > right.x) right = node;\n          if (node.depth > bottom.depth) bottom = node;\n        });\n        var tx = separation(left, right) / 2 - left.x, kx = size[0] / (right.x + separation(right, left) / 2 + tx), ky = size[1] / (bottom.depth || 1);\n        d3_layout_hierarchyVisitBefore(root0, function(node) {\n          node.x = (node.x + tx) * kx;\n          node.y = node.depth * ky;\n        });\n      }\n      return nodes;\n    }\n    function wrapTree(root0) {\n      var root1 = {\n        A: null,\n        children: [ root0 ]\n      }, queue = [ root1 ], node1;\n      while ((node1 = queue.pop()) != null) {\n        for (var children = node1.children, child, i = 0, n = children.length; i < n; ++i) {\n          queue.push((children[i] = child = {\n            _: children[i],\n            parent: node1,\n            children: (child = children[i].children) && child.slice() || [],\n            A: null,\n            a: null,\n            z: 0,\n            m: 0,\n            c: 0,\n            s: 0,\n            t: null,\n            i: i\n          }).a = child);\n        }\n      }\n      return root1.children[0];\n    }\n    function firstWalk(v) {\n      var children = v.children, siblings = v.parent.children, w = v.i ? siblings[v.i - 1] : null;\n      if (children.length) {\n        d3_layout_treeShift(v);\n        var midpoint = (children[0].z + children[children.length - 1].z) / 2;\n        if (w) {\n          v.z = w.z + separation(v._, w._);\n          v.m = v.z - midpoint;\n        } else {\n          v.z = midpoint;\n        }\n      } else if (w) {\n        v.z = w.z + separation(v._, w._);\n      }\n      v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\n    }\n    function secondWalk(v) {\n      v._.x = v.z + v.parent.m;\n      v.m += v.parent.m;\n    }\n    function apportion(v, w, ancestor) {\n      if (w) {\n        var vip = v, vop = v, vim = w, vom = vip.parent.children[0], sip = vip.m, sop = vop.m, sim = vim.m, som = vom.m, shift;\n        while (vim = d3_layout_treeRight(vim), vip = d3_layout_treeLeft(vip), vim && vip) {\n          vom = d3_layout_treeLeft(vom);\n          vop = d3_layout_treeRight(vop);\n          vop.a = v;\n          shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\n          if (shift > 0) {\n            d3_layout_treeMove(d3_layout_treeAncestor(vim, v, ancestor), v, shift);\n            sip += shift;\n            sop += shift;\n          }\n          sim += vim.m;\n          sip += vip.m;\n          som += vom.m;\n          sop += vop.m;\n        }\n        if (vim && !d3_layout_treeRight(vop)) {\n          vop.t = vim;\n          vop.m += sim - sop;\n        }\n        if (vip && !d3_layout_treeLeft(vom)) {\n          vom.t = vip;\n          vom.m += sip - som;\n          ancestor = v;\n        }\n      }\n      return ancestor;\n    }\n    function sizeNode(node) {\n      node.x *= size[0];\n      node.y = node.depth * size[1];\n    }\n    tree.separation = function(x) {\n      if (!arguments.length) return separation;\n      separation = x;\n      return tree;\n    };\n    tree.size = function(x) {\n      if (!arguments.length) return nodeSize ? null : size;\n      nodeSize = (size = x) == null ? sizeNode : null;\n      return tree;\n    };\n    tree.nodeSize = function(x) {\n      if (!arguments.length) return nodeSize ? size : null;\n      nodeSize = (size = x) == null ? null : sizeNode;\n      return tree;\n    };\n    return d3_layout_hierarchyRebind(tree, hierarchy);\n  };\n  function d3_layout_treeSeparation(a, b) {\n    return a.parent == b.parent ? 1 : 2;\n  }\n  function d3_layout_treeLeft(v) {\n    var children = v.children;\n    return children.length ? children[0] : v.t;\n  }\n  function d3_layout_treeRight(v) {\n    var children = v.children, n;\n    return (n = children.length) ? children[n - 1] : v.t;\n  }\n  function d3_layout_treeMove(wm, wp, shift) {\n    var change = shift / (wp.i - wm.i);\n    wp.c -= change;\n    wp.s += shift;\n    wm.c += change;\n    wp.z += shift;\n    wp.m += shift;\n  }\n  function d3_layout_treeShift(v) {\n    var shift = 0, change = 0, children = v.children, i = children.length, w;\n    while (--i >= 0) {\n      w = children[i];\n      w.z += shift;\n      w.m += shift;\n      shift += w.s + (change += w.c);\n    }\n  }\n  function d3_layout_treeAncestor(vim, v, ancestor) {\n    return vim.a.parent === v.parent ? vim.a : ancestor;\n  }\n  d3.layout.cluster = function() {\n    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = false;\n    function cluster(d, i) {\n      var nodes = hierarchy.call(this, d, i), root = nodes[0], previousNode, x = 0;\n      d3_layout_hierarchyVisitAfter(root, function(node) {\n        var children = node.children;\n        if (children && children.length) {\n          node.x = d3_layout_clusterX(children);\n          node.y = d3_layout_clusterY(children);\n        } else {\n          node.x = previousNode ? x += separation(node, previousNode) : 0;\n          node.y = 0;\n          previousNode = node;\n        }\n      });\n      var left = d3_layout_clusterLeft(root), right = d3_layout_clusterRight(root), x0 = left.x - separation(left, right) / 2, x1 = right.x + separation(right, left) / 2;\n      d3_layout_hierarchyVisitAfter(root, nodeSize ? function(node) {\n        node.x = (node.x - root.x) * size[0];\n        node.y = (root.y - node.y) * size[1];\n      } : function(node) {\n        node.x = (node.x - x0) / (x1 - x0) * size[0];\n        node.y = (1 - (root.y ? node.y / root.y : 1)) * size[1];\n      });\n      return nodes;\n    }\n    cluster.separation = function(x) {\n      if (!arguments.length) return separation;\n      separation = x;\n      return cluster;\n    };\n    cluster.size = function(x) {\n      if (!arguments.length) return nodeSize ? null : size;\n      nodeSize = (size = x) == null;\n      return cluster;\n    };\n    cluster.nodeSize = function(x) {\n      if (!arguments.length) return nodeSize ? size : null;\n      nodeSize = (size = x) != null;\n      return cluster;\n    };\n    return d3_layout_hierarchyRebind(cluster, hierarchy);\n  };\n  function d3_layout_clusterY(children) {\n    return 1 + d3.max(children, function(child) {\n      return child.y;\n    });\n  }\n  function d3_layout_clusterX(children) {\n    return children.reduce(function(x, child) {\n      return x + child.x;\n    }, 0) / children.length;\n  }\n  function d3_layout_clusterLeft(node) {\n    var children = node.children;\n    return children && children.length ? d3_layout_clusterLeft(children[0]) : node;\n  }\n  function d3_layout_clusterRight(node) {\n    var children = node.children, n;\n    return children && (n = children.length) ? d3_layout_clusterRight(children[n - 1]) : node;\n  }\n  d3.layout.treemap = function() {\n    var hierarchy = d3.layout.hierarchy(), round = Math.round, size = [ 1, 1 ], padding = null, pad = d3_layout_treemapPadNull, sticky = false, stickies, mode = \"squarify\", ratio = .5 * (1 + Math.sqrt(5));\n    function scale(children, k) {\n      var i = -1, n = children.length, child, area;\n      while (++i < n) {\n        area = (child = children[i]).value * (k < 0 ? 0 : k);\n        child.area = isNaN(area) || area <= 0 ? 0 : area;\n      }\n    }\n    function squarify(node) {\n      var children = node.children;\n      if (children && children.length) {\n        var rect = pad(node), row = [], remaining = children.slice(), child, best = Infinity, score, u = mode === \"slice\" ? rect.dx : mode === \"dice\" ? rect.dy : mode === \"slice-dice\" ? node.depth & 1 ? rect.dy : rect.dx : Math.min(rect.dx, rect.dy), n;\n        scale(remaining, rect.dx * rect.dy / node.value);\n        row.area = 0;\n        while ((n = remaining.length) > 0) {\n          row.push(child = remaining[n - 1]);\n          row.area += child.area;\n          if (mode !== \"squarify\" || (score = worst(row, u)) <= best) {\n            remaining.pop();\n            best = score;\n          } else {\n            row.area -= row.pop().area;\n            position(row, u, rect, false);\n            u = Math.min(rect.dx, rect.dy);\n            row.length = row.area = 0;\n            best = Infinity;\n          }\n        }\n        if (row.length) {\n          position(row, u, rect, true);\n          row.length = row.area = 0;\n        }\n        children.forEach(squarify);\n      }\n    }\n    function stickify(node) {\n      var children = node.children;\n      if (children && children.length) {\n        var rect = pad(node), remaining = children.slice(), child, row = [];\n        scale(remaining, rect.dx * rect.dy / node.value);\n        row.area = 0;\n        while (child = remaining.pop()) {\n          row.push(child);\n          row.area += child.area;\n          if (child.z != null) {\n            position(row, child.z ? rect.dx : rect.dy, rect, !remaining.length);\n            row.length = row.area = 0;\n          }\n        }\n        children.forEach(stickify);\n      }\n    }\n    function worst(row, u) {\n      var s = row.area, r, rmax = 0, rmin = Infinity, i = -1, n = row.length;\n      while (++i < n) {\n        if (!(r = row[i].area)) continue;\n        if (r < rmin) rmin = r;\n        if (r > rmax) rmax = r;\n      }\n      s *= s;\n      u *= u;\n      return s ? Math.max(u * rmax * ratio / s, s / (u * rmin * ratio)) : Infinity;\n    }\n    function position(row, u, rect, flush) {\n      var i = -1, n = row.length, x = rect.x, y = rect.y, v = u ? round(row.area / u) : 0, o;\n      if (u == rect.dx) {\n        if (flush || v > rect.dy) v = rect.dy;\n        while (++i < n) {\n          o = row[i];\n          o.x = x;\n          o.y = y;\n          o.dy = v;\n          x += o.dx = Math.min(rect.x + rect.dx - x, v ? round(o.area / v) : 0);\n        }\n        o.z = true;\n        o.dx += rect.x + rect.dx - x;\n        rect.y += v;\n        rect.dy -= v;\n      } else {\n        if (flush || v > rect.dx) v = rect.dx;\n        while (++i < n) {\n          o = row[i];\n          o.x = x;\n          o.y = y;\n          o.dx = v;\n          y += o.dy = Math.min(rect.y + rect.dy - y, v ? round(o.area / v) : 0);\n        }\n        o.z = false;\n        o.dy += rect.y + rect.dy - y;\n        rect.x += v;\n        rect.dx -= v;\n      }\n    }\n    function treemap(d) {\n      var nodes = stickies || hierarchy(d), root = nodes[0];\n      root.x = root.y = 0;\n      if (root.value) root.dx = size[0], root.dy = size[1]; else root.dx = root.dy = 0;\n      if (stickies) hierarchy.revalue(root);\n      scale([ root ], root.dx * root.dy / root.value);\n      (stickies ? stickify : squarify)(root);\n      if (sticky) stickies = nodes;\n      return nodes;\n    }\n    treemap.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return treemap;\n    };\n    treemap.padding = function(x) {\n      if (!arguments.length) return padding;\n      function padFunction(node) {\n        var p = x.call(treemap, node, node.depth);\n        return p == null ? d3_layout_treemapPadNull(node) : d3_layout_treemapPad(node, typeof p === \"number\" ? [ p, p, p, p ] : p);\n      }\n      function padConstant(node) {\n        return d3_layout_treemapPad(node, x);\n      }\n      var type;\n      pad = (padding = x) == null ? d3_layout_treemapPadNull : (type = typeof x) === \"function\" ? padFunction : type === \"number\" ? (x = [ x, x, x, x ], \n      padConstant) : padConstant;\n      return treemap;\n    };\n    treemap.round = function(x) {\n      if (!arguments.length) return round != Number;\n      round = x ? Math.round : Number;\n      return treemap;\n    };\n    treemap.sticky = function(x) {\n      if (!arguments.length) return sticky;\n      sticky = x;\n      stickies = null;\n      return treemap;\n    };\n    treemap.ratio = function(x) {\n      if (!arguments.length) return ratio;\n      ratio = x;\n      return treemap;\n    };\n    treemap.mode = function(x) {\n      if (!arguments.length) return mode;\n      mode = x + \"\";\n      return treemap;\n    };\n    return d3_layout_hierarchyRebind(treemap, hierarchy);\n  };\n  function d3_layout_treemapPadNull(node) {\n    return {\n      x: node.x,\n      y: node.y,\n      dx: node.dx,\n      dy: node.dy\n    };\n  }\n  function d3_layout_treemapPad(node, padding) {\n    var x = node.x + padding[3], y = node.y + padding[0], dx = node.dx - padding[1] - padding[3], dy = node.dy - padding[0] - padding[2];\n    if (dx < 0) {\n      x += dx / 2;\n      dx = 0;\n    }\n    if (dy < 0) {\n      y += dy / 2;\n      dy = 0;\n    }\n    return {\n      x: x,\n      y: y,\n      dx: dx,\n      dy: dy\n    };\n  }\n  d3.random = {\n    normal: function(µ, σ) {\n      var n = arguments.length;\n      if (n < 2) σ = 1;\n      if (n < 1) µ = 0;\n      return function() {\n        var x, y, r;\n        do {\n          x = Math.random() * 2 - 1;\n          y = Math.random() * 2 - 1;\n          r = x * x + y * y;\n        } while (!r || r > 1);\n        return µ + σ * x * Math.sqrt(-2 * Math.log(r) / r);\n      };\n    },\n    logNormal: function() {\n      var random = d3.random.normal.apply(d3, arguments);\n      return function() {\n        return Math.exp(random());\n      };\n    },\n    bates: function(m) {\n      var random = d3.random.irwinHall(m);\n      return function() {\n        return random() / m;\n      };\n    },\n    irwinHall: function(m) {\n      return function() {\n        for (var s = 0, j = 0; j < m; j++) s += Math.random();\n        return s;\n      };\n    }\n  };\n  d3.scale = {};\n  function d3_scaleExtent(domain) {\n    var start = domain[0], stop = domain[domain.length - 1];\n    return start < stop ? [ start, stop ] : [ stop, start ];\n  }\n  function d3_scaleRange(scale) {\n    return scale.rangeExtent ? scale.rangeExtent() : d3_scaleExtent(scale.range());\n  }\n  function d3_scale_bilinear(domain, range, uninterpolate, interpolate) {\n    var u = uninterpolate(domain[0], domain[1]), i = interpolate(range[0], range[1]);\n    return function(x) {\n      return i(u(x));\n    };\n  }\n  function d3_scale_nice(domain, nice) {\n    var i0 = 0, i1 = domain.length - 1, x0 = domain[i0], x1 = domain[i1], dx;\n    if (x1 < x0) {\n      dx = i0, i0 = i1, i1 = dx;\n      dx = x0, x0 = x1, x1 = dx;\n    }\n    domain[i0] = nice.floor(x0);\n    domain[i1] = nice.ceil(x1);\n    return domain;\n  }\n  function d3_scale_niceStep(step) {\n    return step ? {\n      floor: function(x) {\n        return Math.floor(x / step) * step;\n      },\n      ceil: function(x) {\n        return Math.ceil(x / step) * step;\n      }\n    } : d3_scale_niceIdentity;\n  }\n  var d3_scale_niceIdentity = {\n    floor: d3_identity,\n    ceil: d3_identity\n  };\n  function d3_scale_polylinear(domain, range, uninterpolate, interpolate) {\n    var u = [], i = [], j = 0, k = Math.min(domain.length, range.length) - 1;\n    if (domain[k] < domain[0]) {\n      domain = domain.slice().reverse();\n      range = range.slice().reverse();\n    }\n    while (++j <= k) {\n      u.push(uninterpolate(domain[j - 1], domain[j]));\n      i.push(interpolate(range[j - 1], range[j]));\n    }\n    return function(x) {\n      var j = d3.bisect(domain, x, 1, k) - 1;\n      return i[j](u[j](x));\n    };\n  }\n  d3.scale.linear = function() {\n    return d3_scale_linear([ 0, 1 ], [ 0, 1 ], d3_interpolate, false);\n  };\n  function d3_scale_linear(domain, range, interpolate, clamp) {\n    var output, input;\n    function rescale() {\n      var linear = Math.min(domain.length, range.length) > 2 ? d3_scale_polylinear : d3_scale_bilinear, uninterpolate = clamp ? d3_uninterpolateClamp : d3_uninterpolateNumber;\n      output = linear(domain, range, uninterpolate, interpolate);\n      input = linear(range, domain, uninterpolate, d3_interpolate);\n      return scale;\n    }\n    function scale(x) {\n      return output(x);\n    }\n    scale.invert = function(y) {\n      return input(y);\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(Number);\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.rangeRound = function(x) {\n      return scale.range(x).interpolate(d3_interpolateRound);\n    };\n    scale.clamp = function(x) {\n      if (!arguments.length) return clamp;\n      clamp = x;\n      return rescale();\n    };\n    scale.interpolate = function(x) {\n      if (!arguments.length) return interpolate;\n      interpolate = x;\n      return rescale();\n    };\n    scale.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    scale.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    scale.nice = function(m) {\n      d3_scale_linearNice(domain, m);\n      return rescale();\n    };\n    scale.copy = function() {\n      return d3_scale_linear(domain, range, interpolate, clamp);\n    };\n    return rescale();\n  }\n  function d3_scale_linearRebind(scale, linear) {\n    return d3.rebind(scale, linear, \"range\", \"rangeRound\", \"interpolate\", \"clamp\");\n  }\n  function d3_scale_linearNice(domain, m) {\n    d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));\n    d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));\n    return domain;\n  }\n  function d3_scale_linearTickRange(domain, m) {\n    if (m == null) m = 10;\n    var extent = d3_scaleExtent(domain), span = extent[1] - extent[0], step = Math.pow(10, Math.floor(Math.log(span / m) / Math.LN10)), err = m / span * step;\n    if (err <= .15) step *= 10; else if (err <= .35) step *= 5; else if (err <= .75) step *= 2;\n    extent[0] = Math.ceil(extent[0] / step) * step;\n    extent[1] = Math.floor(extent[1] / step) * step + step * .5;\n    extent[2] = step;\n    return extent;\n  }\n  function d3_scale_linearTicks(domain, m) {\n    return d3.range.apply(d3, d3_scale_linearTickRange(domain, m));\n  }\n  function d3_scale_linearTickFormat(domain, m, format) {\n    var range = d3_scale_linearTickRange(domain, m);\n    if (format) {\n      var match = d3_format_re.exec(format);\n      match.shift();\n      if (match[8] === \"s\") {\n        var prefix = d3.formatPrefix(Math.max(abs(range[0]), abs(range[1])));\n        if (!match[7]) match[7] = \".\" + d3_scale_linearPrecision(prefix.scale(range[2]));\n        match[8] = \"f\";\n        format = d3.format(match.join(\"\"));\n        return function(d) {\n          return format(prefix.scale(d)) + prefix.symbol;\n        };\n      }\n      if (!match[7]) match[7] = \".\" + d3_scale_linearFormatPrecision(match[8], range);\n      format = match.join(\"\");\n    } else {\n      format = \",.\" + d3_scale_linearPrecision(range[2]) + \"f\";\n    }\n    return d3.format(format);\n  }\n  var d3_scale_linearFormatSignificant = {\n    s: 1,\n    g: 1,\n    p: 1,\n    r: 1,\n    e: 1\n  };\n  function d3_scale_linearPrecision(value) {\n    return -Math.floor(Math.log(value) / Math.LN10 + .01);\n  }\n  function d3_scale_linearFormatPrecision(type, range) {\n    var p = d3_scale_linearPrecision(range[2]);\n    return type in d3_scale_linearFormatSignificant ? Math.abs(p - d3_scale_linearPrecision(Math.max(abs(range[0]), abs(range[1])))) + +(type !== \"e\") : p - (type === \"%\") * 2;\n  }\n  d3.scale.log = function() {\n    return d3_scale_log(d3.scale.linear().domain([ 0, 1 ]), 10, true, [ 1, 10 ]);\n  };\n  function d3_scale_log(linear, base, positive, domain) {\n    function log(x) {\n      return (positive ? Math.log(x < 0 ? 0 : x) : -Math.log(x > 0 ? 0 : -x)) / Math.log(base);\n    }\n    function pow(x) {\n      return positive ? Math.pow(base, x) : -Math.pow(base, -x);\n    }\n    function scale(x) {\n      return linear(log(x));\n    }\n    scale.invert = function(x) {\n      return pow(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      positive = x[0] >= 0;\n      linear.domain((domain = x.map(Number)).map(log));\n      return scale;\n    };\n    scale.base = function(_) {\n      if (!arguments.length) return base;\n      base = +_;\n      linear.domain(domain.map(log));\n      return scale;\n    };\n    scale.nice = function() {\n      var niced = d3_scale_nice(domain.map(log), positive ? Math : d3_scale_logNiceNegative);\n      linear.domain(niced);\n      domain = niced.map(pow);\n      return scale;\n    };\n    scale.ticks = function() {\n      var extent = d3_scaleExtent(domain), ticks = [], u = extent[0], v = extent[1], i = Math.floor(log(u)), j = Math.ceil(log(v)), n = base % 1 ? 2 : base;\n      if (isFinite(j - i)) {\n        if (positive) {\n          for (;i < j; i++) for (var k = 1; k < n; k++) ticks.push(pow(i) * k);\n          ticks.push(pow(i));\n        } else {\n          ticks.push(pow(i));\n          for (;i++ < j; ) for (var k = n - 1; k > 0; k--) ticks.push(pow(i) * k);\n        }\n        for (i = 0; ticks[i] < u; i++) {}\n        for (j = ticks.length; ticks[j - 1] > v; j--) {}\n        ticks = ticks.slice(i, j);\n      }\n      return ticks;\n    };\n    scale.tickFormat = function(n, format) {\n      if (!arguments.length) return d3_scale_logFormat;\n      if (arguments.length < 2) format = d3_scale_logFormat; else if (typeof format !== \"function\") format = d3.format(format);\n      var k = Math.max(1, base * n / scale.ticks().length);\n      return function(d) {\n        var i = d / pow(Math.round(log(d)));\n        if (i * base < base - .5) i *= base;\n        return i <= k ? format(d) : \"\";\n      };\n    };\n    scale.copy = function() {\n      return d3_scale_log(linear.copy(), base, positive, domain);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  var d3_scale_logFormat = d3.format(\".0e\"), d3_scale_logNiceNegative = {\n    floor: function(x) {\n      return -Math.ceil(-x);\n    },\n    ceil: function(x) {\n      return -Math.floor(-x);\n    }\n  };\n  d3.scale.pow = function() {\n    return d3_scale_pow(d3.scale.linear(), 1, [ 0, 1 ]);\n  };\n  function d3_scale_pow(linear, exponent, domain) {\n    var powp = d3_scale_powPow(exponent), powb = d3_scale_powPow(1 / exponent);\n    function scale(x) {\n      return linear(powp(x));\n    }\n    scale.invert = function(x) {\n      return powb(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      linear.domain((domain = x.map(Number)).map(powp));\n      return scale;\n    };\n    scale.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    scale.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    scale.nice = function(m) {\n      return scale.domain(d3_scale_linearNice(domain, m));\n    };\n    scale.exponent = function(x) {\n      if (!arguments.length) return exponent;\n      powp = d3_scale_powPow(exponent = x);\n      powb = d3_scale_powPow(1 / exponent);\n      linear.domain(domain.map(powp));\n      return scale;\n    };\n    scale.copy = function() {\n      return d3_scale_pow(linear.copy(), exponent, domain);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  function d3_scale_powPow(e) {\n    return function(x) {\n      return x < 0 ? -Math.pow(-x, e) : Math.pow(x, e);\n    };\n  }\n  d3.scale.sqrt = function() {\n    return d3.scale.pow().exponent(.5);\n  };\n  d3.scale.ordinal = function() {\n    return d3_scale_ordinal([], {\n      t: \"range\",\n      a: [ [] ]\n    });\n  };\n  function d3_scale_ordinal(domain, ranger) {\n    var index, range, rangeBand;\n    function scale(x) {\n      return range[((index.get(x) || (ranger.t === \"range\" ? index.set(x, domain.push(x)) : NaN)) - 1) % range.length];\n    }\n    function steps(start, step) {\n      return d3.range(domain.length).map(function(i) {\n        return start + step * i;\n      });\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = [];\n      index = new d3_Map();\n      var i = -1, n = x.length, xi;\n      while (++i < n) if (!index.has(xi = x[i])) index.set(xi, domain.push(xi));\n      return scale[ranger.t].apply(scale, ranger.a);\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      rangeBand = 0;\n      ranger = {\n        t: \"range\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangePoints = function(x, padding) {\n      if (arguments.length < 2) padding = 0;\n      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = (start + stop) / 2, \n      0) : (stop - start) / (domain.length - 1 + padding);\n      range = steps(start + step * padding / 2, step);\n      rangeBand = 0;\n      ranger = {\n        t: \"rangePoints\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeRoundPoints = function(x, padding) {\n      if (arguments.length < 2) padding = 0;\n      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = stop = Math.round((start + stop) / 2), \n      0) : (stop - start) / (domain.length - 1 + padding) | 0;\n      range = steps(start + Math.round(step * padding / 2 + (stop - start - (domain.length - 1 + padding) * step) / 2), step);\n      rangeBand = 0;\n      ranger = {\n        t: \"rangeRoundPoints\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeBands = function(x, padding, outerPadding) {\n      if (arguments.length < 2) padding = 0;\n      if (arguments.length < 3) outerPadding = padding;\n      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = (stop - start) / (domain.length - padding + 2 * outerPadding);\n      range = steps(start + step * outerPadding, step);\n      if (reverse) range.reverse();\n      rangeBand = step * (1 - padding);\n      ranger = {\n        t: \"rangeBands\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeRoundBands = function(x, padding, outerPadding) {\n      if (arguments.length < 2) padding = 0;\n      if (arguments.length < 3) outerPadding = padding;\n      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = Math.floor((stop - start) / (domain.length - padding + 2 * outerPadding));\n      range = steps(start + Math.round((stop - start - (domain.length - padding) * step) / 2), step);\n      if (reverse) range.reverse();\n      rangeBand = Math.round(step * (1 - padding));\n      ranger = {\n        t: \"rangeRoundBands\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeBand = function() {\n      return rangeBand;\n    };\n    scale.rangeExtent = function() {\n      return d3_scaleExtent(ranger.a[0]);\n    };\n    scale.copy = function() {\n      return d3_scale_ordinal(domain, ranger);\n    };\n    return scale.domain(domain);\n  }\n  d3.scale.category10 = function() {\n    return d3.scale.ordinal().range(d3_category10);\n  };\n  d3.scale.category20 = function() {\n    return d3.scale.ordinal().range(d3_category20);\n  };\n  d3.scale.category20b = function() {\n    return d3.scale.ordinal().range(d3_category20b);\n  };\n  d3.scale.category20c = function() {\n    return d3.scale.ordinal().range(d3_category20c);\n  };\n  var d3_category10 = [ 2062260, 16744206, 2924588, 14034728, 9725885, 9197131, 14907330, 8355711, 12369186, 1556175 ].map(d3_rgbString);\n  var d3_category20 = [ 2062260, 11454440, 16744206, 16759672, 2924588, 10018698, 14034728, 16750742, 9725885, 12955861, 9197131, 12885140, 14907330, 16234194, 8355711, 13092807, 12369186, 14408589, 1556175, 10410725 ].map(d3_rgbString);\n  var d3_category20b = [ 3750777, 5395619, 7040719, 10264286, 6519097, 9216594, 11915115, 13556636, 9202993, 12426809, 15186514, 15190932, 8666169, 11356490, 14049643, 15177372, 8077683, 10834324, 13528509, 14589654 ].map(d3_rgbString);\n  var d3_category20c = [ 3244733, 7057110, 10406625, 13032431, 15095053, 16616764, 16625259, 16634018, 3253076, 7652470, 10607003, 13101504, 7695281, 10394312, 12369372, 14342891, 6513507, 9868950, 12434877, 14277081 ].map(d3_rgbString);\n  d3.scale.quantile = function() {\n    return d3_scale_quantile([], []);\n  };\n  function d3_scale_quantile(domain, range) {\n    var thresholds;\n    function rescale() {\n      var k = 0, q = range.length;\n      thresholds = [];\n      while (++k < q) thresholds[k - 1] = d3.quantile(domain, k / q);\n      return scale;\n    }\n    function scale(x) {\n      if (!isNaN(x = +x)) return range[d3.bisect(thresholds, x)];\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(d3_number).filter(d3_numeric).sort(d3_ascending);\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.quantiles = function() {\n      return thresholds;\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      return y < 0 ? [ NaN, NaN ] : [ y > 0 ? thresholds[y - 1] : domain[0], y < thresholds.length ? thresholds[y] : domain[domain.length - 1] ];\n    };\n    scale.copy = function() {\n      return d3_scale_quantile(domain, range);\n    };\n    return rescale();\n  }\n  d3.scale.quantize = function() {\n    return d3_scale_quantize(0, 1, [ 0, 1 ]);\n  };\n  function d3_scale_quantize(x0, x1, range) {\n    var kx, i;\n    function scale(x) {\n      return range[Math.max(0, Math.min(i, Math.floor(kx * (x - x0))))];\n    }\n    function rescale() {\n      kx = range.length / (x1 - x0);\n      i = range.length - 1;\n      return scale;\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return [ x0, x1 ];\n      x0 = +x[0];\n      x1 = +x[x.length - 1];\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      y = y < 0 ? NaN : y / kx + x0;\n      return [ y, y + 1 / kx ];\n    };\n    scale.copy = function() {\n      return d3_scale_quantize(x0, x1, range);\n    };\n    return rescale();\n  }\n  d3.scale.threshold = function() {\n    return d3_scale_threshold([ .5 ], [ 0, 1 ]);\n  };\n  function d3_scale_threshold(domain, range) {\n    function scale(x) {\n      if (x <= x) return range[d3.bisect(domain, x)];\n    }\n    scale.domain = function(_) {\n      if (!arguments.length) return domain;\n      domain = _;\n      return scale;\n    };\n    scale.range = function(_) {\n      if (!arguments.length) return range;\n      range = _;\n      return scale;\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      return [ domain[y - 1], domain[y] ];\n    };\n    scale.copy = function() {\n      return d3_scale_threshold(domain, range);\n    };\n    return scale;\n  }\n  d3.scale.identity = function() {\n    return d3_scale_identity([ 0, 1 ]);\n  };\n  function d3_scale_identity(domain) {\n    function identity(x) {\n      return +x;\n    }\n    identity.invert = identity;\n    identity.domain = identity.range = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(identity);\n      return identity;\n    };\n    identity.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    identity.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    identity.copy = function() {\n      return d3_scale_identity(domain);\n    };\n    return identity;\n  }\n  d3.svg = {};\n  function d3_zero() {\n    return 0;\n  }\n  d3.svg.arc = function() {\n    var innerRadius = d3_svg_arcInnerRadius, outerRadius = d3_svg_arcOuterRadius, cornerRadius = d3_zero, padRadius = d3_svg_arcAuto, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle, padAngle = d3_svg_arcPadAngle;\n    function arc() {\n      var r0 = Math.max(0, +innerRadius.apply(this, arguments)), r1 = Math.max(0, +outerRadius.apply(this, arguments)), a0 = startAngle.apply(this, arguments) - halfπ, a1 = endAngle.apply(this, arguments) - halfπ, da = Math.abs(a1 - a0), cw = a0 > a1 ? 0 : 1;\n      if (r1 < r0) rc = r1, r1 = r0, r0 = rc;\n      if (da >= τε) return circleSegment(r1, cw) + (r0 ? circleSegment(r0, 1 - cw) : \"\") + \"Z\";\n      var rc, cr, rp, ap, p0 = 0, p1 = 0, x0, y0, x1, y1, x2, y2, x3, y3, path = [];\n      if (ap = (+padAngle.apply(this, arguments) || 0) / 2) {\n        rp = padRadius === d3_svg_arcAuto ? Math.sqrt(r0 * r0 + r1 * r1) : +padRadius.apply(this, arguments);\n        if (!cw) p1 *= -1;\n        if (r1) p1 = d3_asin(rp / r1 * Math.sin(ap));\n        if (r0) p0 = d3_asin(rp / r0 * Math.sin(ap));\n      }\n      if (r1) {\n        x0 = r1 * Math.cos(a0 + p1);\n        y0 = r1 * Math.sin(a0 + p1);\n        x1 = r1 * Math.cos(a1 - p1);\n        y1 = r1 * Math.sin(a1 - p1);\n        var l1 = Math.abs(a1 - a0 - 2 * p1) <= π ? 0 : 1;\n        if (p1 && d3_svg_arcSweep(x0, y0, x1, y1) === cw ^ l1) {\n          var h1 = (a0 + a1) / 2;\n          x0 = r1 * Math.cos(h1);\n          y0 = r1 * Math.sin(h1);\n          x1 = y1 = null;\n        }\n      } else {\n        x0 = y0 = 0;\n      }\n      if (r0) {\n        x2 = r0 * Math.cos(a1 - p0);\n        y2 = r0 * Math.sin(a1 - p0);\n        x3 = r0 * Math.cos(a0 + p0);\n        y3 = r0 * Math.sin(a0 + p0);\n        var l0 = Math.abs(a0 - a1 + 2 * p0) <= π ? 0 : 1;\n        if (p0 && d3_svg_arcSweep(x2, y2, x3, y3) === 1 - cw ^ l0) {\n          var h0 = (a0 + a1) / 2;\n          x2 = r0 * Math.cos(h0);\n          y2 = r0 * Math.sin(h0);\n          x3 = y3 = null;\n        }\n      } else {\n        x2 = y2 = 0;\n      }\n      if (da > ε && (rc = Math.min(Math.abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments))) > .001) {\n        cr = r0 < r1 ^ cw ? 0 : 1;\n        var rc1 = rc, rc0 = rc;\n        if (da < π) {\n          var oc = x3 == null ? [ x2, y2 ] : x1 == null ? [ x0, y0 ] : d3_geom_polygonIntersect([ x0, y0 ], [ x3, y3 ], [ x1, y1 ], [ x2, y2 ]), ax = x0 - oc[0], ay = y0 - oc[1], bx = x1 - oc[0], by = y1 - oc[1], kc = 1 / Math.sin(Math.acos((ax * bx + ay * by) / (Math.sqrt(ax * ax + ay * ay) * Math.sqrt(bx * bx + by * by))) / 2), lc = Math.sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n          rc0 = Math.min(rc, (r0 - lc) / (kc - 1));\n          rc1 = Math.min(rc, (r1 - lc) / (kc + 1));\n        }\n        if (x1 != null) {\n          var t30 = d3_svg_arcCornerTangents(x3 == null ? [ x2, y2 ] : [ x3, y3 ], [ x0, y0 ], r1, rc1, cw), t12 = d3_svg_arcCornerTangents([ x1, y1 ], [ x2, y2 ], r1, rc1, cw);\n          if (rc === rc1) {\n            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t30[1], \"A\", r1, \",\", r1, \" 0 \", 1 - cw ^ d3_svg_arcSweep(t30[1][0], t30[1][1], t12[1][0], t12[1][1]), \",\", cw, \" \", t12[1], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t12[0]);\n          } else {\n            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 1,\", cr, \" \", t12[0]);\n          }\n        } else {\n          path.push(\"M\", x0, \",\", y0);\n        }\n        if (x3 != null) {\n          var t03 = d3_svg_arcCornerTangents([ x0, y0 ], [ x3, y3 ], r0, -rc0, cw), t21 = d3_svg_arcCornerTangents([ x2, y2 ], x1 == null ? [ x0, y0 ] : [ x1, y1 ], r0, -rc0, cw);\n          if (rc === rc0) {\n            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t21[1], \"A\", r0, \",\", r0, \" 0 \", cw ^ d3_svg_arcSweep(t21[1][0], t21[1][1], t03[1][0], t03[1][1]), \",\", 1 - cw, \" \", t03[1], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\n          } else {\n            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\n          }\n        } else {\n          path.push(\"L\", x2, \",\", y2);\n        }\n      } else {\n        path.push(\"M\", x0, \",\", y0);\n        if (x1 != null) path.push(\"A\", r1, \",\", r1, \" 0 \", l1, \",\", cw, \" \", x1, \",\", y1);\n        path.push(\"L\", x2, \",\", y2);\n        if (x3 != null) path.push(\"A\", r0, \",\", r0, \" 0 \", l0, \",\", 1 - cw, \" \", x3, \",\", y3);\n      }\n      path.push(\"Z\");\n      return path.join(\"\");\n    }\n    function circleSegment(r1, cw) {\n      return \"M0,\" + r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + -r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + r1;\n    }\n    arc.innerRadius = function(v) {\n      if (!arguments.length) return innerRadius;\n      innerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.outerRadius = function(v) {\n      if (!arguments.length) return outerRadius;\n      outerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.cornerRadius = function(v) {\n      if (!arguments.length) return cornerRadius;\n      cornerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.padRadius = function(v) {\n      if (!arguments.length) return padRadius;\n      padRadius = v == d3_svg_arcAuto ? d3_svg_arcAuto : d3_functor(v);\n      return arc;\n    };\n    arc.startAngle = function(v) {\n      if (!arguments.length) return startAngle;\n      startAngle = d3_functor(v);\n      return arc;\n    };\n    arc.endAngle = function(v) {\n      if (!arguments.length) return endAngle;\n      endAngle = d3_functor(v);\n      return arc;\n    };\n    arc.padAngle = function(v) {\n      if (!arguments.length) return padAngle;\n      padAngle = d3_functor(v);\n      return arc;\n    };\n    arc.centroid = function() {\n      var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2, a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - halfπ;\n      return [ Math.cos(a) * r, Math.sin(a) * r ];\n    };\n    return arc;\n  };\n  var d3_svg_arcAuto = \"auto\";\n  function d3_svg_arcInnerRadius(d) {\n    return d.innerRadius;\n  }\n  function d3_svg_arcOuterRadius(d) {\n    return d.outerRadius;\n  }\n  function d3_svg_arcStartAngle(d) {\n    return d.startAngle;\n  }\n  function d3_svg_arcEndAngle(d) {\n    return d.endAngle;\n  }\n  function d3_svg_arcPadAngle(d) {\n    return d && d.padAngle;\n  }\n  function d3_svg_arcSweep(x0, y0, x1, y1) {\n    return (x0 - x1) * y0 - (y0 - y1) * x0 > 0 ? 0 : 1;\n  }\n  function d3_svg_arcCornerTangents(p0, p1, r1, rc, cw) {\n    var x01 = p0[0] - p1[0], y01 = p0[1] - p1[1], lo = (cw ? rc : -rc) / Math.sqrt(x01 * x01 + y01 * y01), ox = lo * y01, oy = -lo * x01, x1 = p0[0] + ox, y1 = p0[1] + oy, x2 = p1[0] + ox, y2 = p1[1] + oy, x3 = (x1 + x2) / 2, y3 = (y1 + y2) / 2, dx = x2 - x1, dy = y2 - y1, d2 = dx * dx + dy * dy, r = r1 - rc, D = x1 * y2 - x2 * y1, d = (dy < 0 ? -1 : 1) * Math.sqrt(Math.max(0, r * r * d2 - D * D)), cx0 = (D * dy - dx * d) / d2, cy0 = (-D * dx - dy * d) / d2, cx1 = (D * dy + dx * d) / d2, cy1 = (-D * dx + dy * d) / d2, dx0 = cx0 - x3, dy0 = cy0 - y3, dx1 = cx1 - x3, dy1 = cy1 - y3;\n    if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n    return [ [ cx0 - ox, cy0 - oy ], [ cx0 * r1 / r, cy0 * r1 / r ] ];\n  }\n  function d3_svg_line(projection) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, tension = .7;\n    function line(data) {\n      var segments = [], points = [], i = -1, n = data.length, d, fx = d3_functor(x), fy = d3_functor(y);\n      function segment() {\n        segments.push(\"M\", interpolate(projection(points), tension));\n      }\n      while (++i < n) {\n        if (defined.call(this, d = data[i], i)) {\n          points.push([ +fx.call(this, d, i), +fy.call(this, d, i) ]);\n        } else if (points.length) {\n          segment();\n          points = [];\n        }\n      }\n      if (points.length) segment();\n      return segments.length ? segments.join(\"\") : null;\n    }\n    line.x = function(_) {\n      if (!arguments.length) return x;\n      x = _;\n      return line;\n    };\n    line.y = function(_) {\n      if (!arguments.length) return y;\n      y = _;\n      return line;\n    };\n    line.defined = function(_) {\n      if (!arguments.length) return defined;\n      defined = _;\n      return line;\n    };\n    line.interpolate = function(_) {\n      if (!arguments.length) return interpolateKey;\n      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n      return line;\n    };\n    line.tension = function(_) {\n      if (!arguments.length) return tension;\n      tension = _;\n      return line;\n    };\n    return line;\n  }\n  d3.svg.line = function() {\n    return d3_svg_line(d3_identity);\n  };\n  var d3_svg_lineInterpolators = d3.map({\n    linear: d3_svg_lineLinear,\n    \"linear-closed\": d3_svg_lineLinearClosed,\n    step: d3_svg_lineStep,\n    \"step-before\": d3_svg_lineStepBefore,\n    \"step-after\": d3_svg_lineStepAfter,\n    basis: d3_svg_lineBasis,\n    \"basis-open\": d3_svg_lineBasisOpen,\n    \"basis-closed\": d3_svg_lineBasisClosed,\n    bundle: d3_svg_lineBundle,\n    cardinal: d3_svg_lineCardinal,\n    \"cardinal-open\": d3_svg_lineCardinalOpen,\n    \"cardinal-closed\": d3_svg_lineCardinalClosed,\n    monotone: d3_svg_lineMonotone\n  });\n  d3_svg_lineInterpolators.forEach(function(key, value) {\n    value.key = key;\n    value.closed = /-closed$/.test(key);\n  });\n  function d3_svg_lineLinear(points) {\n    return points.length > 1 ? points.join(\"L\") : points + \"Z\";\n  }\n  function d3_svg_lineLinearClosed(points) {\n    return points.join(\"L\") + \"Z\";\n  }\n  function d3_svg_lineStep(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"H\", (p[0] + (p = points[i])[0]) / 2, \"V\", p[1]);\n    if (n > 1) path.push(\"H\", p[0]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineStepBefore(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"V\", (p = points[i])[1], \"H\", p[0]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineStepAfter(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"H\", (p = points[i])[0], \"V\", p[1]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineCardinalOpen(points, tension) {\n    return points.length < 4 ? d3_svg_lineLinear(points) : points[1] + d3_svg_lineHermite(points.slice(1, -1), d3_svg_lineCardinalTangents(points, tension));\n  }\n  function d3_svg_lineCardinalClosed(points, tension) {\n    return points.length < 3 ? d3_svg_lineLinearClosed(points) : points[0] + d3_svg_lineHermite((points.push(points[0]), \n    points), d3_svg_lineCardinalTangents([ points[points.length - 2] ].concat(points, [ points[1] ]), tension));\n  }\n  function d3_svg_lineCardinal(points, tension) {\n    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineCardinalTangents(points, tension));\n  }\n  function d3_svg_lineHermite(points, tangents) {\n    if (tangents.length < 1 || points.length != tangents.length && points.length != tangents.length + 2) {\n      return d3_svg_lineLinear(points);\n    }\n    var quad = points.length != tangents.length, path = \"\", p0 = points[0], p = points[1], t0 = tangents[0], t = t0, pi = 1;\n    if (quad) {\n      path += \"Q\" + (p[0] - t0[0] * 2 / 3) + \",\" + (p[1] - t0[1] * 2 / 3) + \",\" + p[0] + \",\" + p[1];\n      p0 = points[1];\n      pi = 2;\n    }\n    if (tangents.length > 1) {\n      t = tangents[1];\n      p = points[pi];\n      pi++;\n      path += \"C\" + (p0[0] + t0[0]) + \",\" + (p0[1] + t0[1]) + \",\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n      for (var i = 2; i < tangents.length; i++, pi++) {\n        p = points[pi];\n        t = tangents[i];\n        path += \"S\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n      }\n    }\n    if (quad) {\n      var lp = points[pi];\n      path += \"Q\" + (p[0] + t[0] * 2 / 3) + \",\" + (p[1] + t[1] * 2 / 3) + \",\" + lp[0] + \",\" + lp[1];\n    }\n    return path;\n  }\n  function d3_svg_lineCardinalTangents(points, tension) {\n    var tangents = [], a = (1 - tension) / 2, p0, p1 = points[0], p2 = points[1], i = 1, n = points.length;\n    while (++i < n) {\n      p0 = p1;\n      p1 = p2;\n      p2 = points[i];\n      tangents.push([ a * (p2[0] - p0[0]), a * (p2[1] - p0[1]) ]);\n    }\n    return tangents;\n  }\n  function d3_svg_lineBasis(points) {\n    if (points.length < 3) return d3_svg_lineLinear(points);\n    var i = 1, n = points.length, pi = points[0], x0 = pi[0], y0 = pi[1], px = [ x0, x0, x0, (pi = points[1])[0] ], py = [ y0, y0, y0, pi[1] ], path = [ x0, \",\", y0, \"L\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n    points.push(points[n - 1]);\n    while (++i <= n) {\n      pi = points[i];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    points.pop();\n    path.push(\"L\", pi);\n    return path.join(\"\");\n  }\n  function d3_svg_lineBasisOpen(points) {\n    if (points.length < 4) return d3_svg_lineLinear(points);\n    var path = [], i = -1, n = points.length, pi, px = [ 0 ], py = [ 0 ];\n    while (++i < 3) {\n      pi = points[i];\n      px.push(pi[0]);\n      py.push(pi[1]);\n    }\n    path.push(d3_svg_lineDot4(d3_svg_lineBasisBezier3, px) + \",\" + d3_svg_lineDot4(d3_svg_lineBasisBezier3, py));\n    --i;\n    while (++i < n) {\n      pi = points[i];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    return path.join(\"\");\n  }\n  function d3_svg_lineBasisClosed(points) {\n    var path, i = -1, n = points.length, m = n + 4, pi, px = [], py = [];\n    while (++i < 4) {\n      pi = points[i % n];\n      px.push(pi[0]);\n      py.push(pi[1]);\n    }\n    path = [ d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n    --i;\n    while (++i < m) {\n      pi = points[i % n];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    return path.join(\"\");\n  }\n  function d3_svg_lineBundle(points, tension) {\n    var n = points.length - 1;\n    if (n) {\n      var x0 = points[0][0], y0 = points[0][1], dx = points[n][0] - x0, dy = points[n][1] - y0, i = -1, p, t;\n      while (++i <= n) {\n        p = points[i];\n        t = i / n;\n        p[0] = tension * p[0] + (1 - tension) * (x0 + t * dx);\n        p[1] = tension * p[1] + (1 - tension) * (y0 + t * dy);\n      }\n    }\n    return d3_svg_lineBasis(points);\n  }\n  function d3_svg_lineDot4(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n  }\n  var d3_svg_lineBasisBezier1 = [ 0, 2 / 3, 1 / 3, 0 ], d3_svg_lineBasisBezier2 = [ 0, 1 / 3, 2 / 3, 0 ], d3_svg_lineBasisBezier3 = [ 0, 1 / 6, 2 / 3, 1 / 6 ];\n  function d3_svg_lineBasisBezier(path, x, y) {\n    path.push(\"C\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, y));\n  }\n  function d3_svg_lineSlope(p0, p1) {\n    return (p1[1] - p0[1]) / (p1[0] - p0[0]);\n  }\n  function d3_svg_lineFiniteDifferences(points) {\n    var i = 0, j = points.length - 1, m = [], p0 = points[0], p1 = points[1], d = m[0] = d3_svg_lineSlope(p0, p1);\n    while (++i < j) {\n      m[i] = (d + (d = d3_svg_lineSlope(p0 = p1, p1 = points[i + 1]))) / 2;\n    }\n    m[i] = d;\n    return m;\n  }\n  function d3_svg_lineMonotoneTangents(points) {\n    var tangents = [], d, a, b, s, m = d3_svg_lineFiniteDifferences(points), i = -1, j = points.length - 1;\n    while (++i < j) {\n      d = d3_svg_lineSlope(points[i], points[i + 1]);\n      if (abs(d) < ε) {\n        m[i] = m[i + 1] = 0;\n      } else {\n        a = m[i] / d;\n        b = m[i + 1] / d;\n        s = a * a + b * b;\n        if (s > 9) {\n          s = d * 3 / Math.sqrt(s);\n          m[i] = s * a;\n          m[i + 1] = s * b;\n        }\n      }\n    }\n    i = -1;\n    while (++i <= j) {\n      s = (points[Math.min(j, i + 1)][0] - points[Math.max(0, i - 1)][0]) / (6 * (1 + m[i] * m[i]));\n      tangents.push([ s || 0, m[i] * s || 0 ]);\n    }\n    return tangents;\n  }\n  function d3_svg_lineMonotone(points) {\n    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineMonotoneTangents(points));\n  }\n  d3.svg.line.radial = function() {\n    var line = d3_svg_line(d3_svg_lineRadial);\n    line.radius = line.x, delete line.x;\n    line.angle = line.y, delete line.y;\n    return line;\n  };\n  function d3_svg_lineRadial(points) {\n    var point, i = -1, n = points.length, r, a;\n    while (++i < n) {\n      point = points[i];\n      r = point[0];\n      a = point[1] - halfπ;\n      point[0] = r * Math.cos(a);\n      point[1] = r * Math.sin(a);\n    }\n    return points;\n  }\n  function d3_svg_area(projection) {\n    var x0 = d3_geom_pointX, x1 = d3_geom_pointX, y0 = 0, y1 = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, interpolateReverse = interpolate, L = \"L\", tension = .7;\n    function area(data) {\n      var segments = [], points0 = [], points1 = [], i = -1, n = data.length, d, fx0 = d3_functor(x0), fy0 = d3_functor(y0), fx1 = x0 === x1 ? function() {\n        return x;\n      } : d3_functor(x1), fy1 = y0 === y1 ? function() {\n        return y;\n      } : d3_functor(y1), x, y;\n      function segment() {\n        segments.push(\"M\", interpolate(projection(points1), tension), L, interpolateReverse(projection(points0.reverse()), tension), \"Z\");\n      }\n      while (++i < n) {\n        if (defined.call(this, d = data[i], i)) {\n          points0.push([ x = +fx0.call(this, d, i), y = +fy0.call(this, d, i) ]);\n          points1.push([ +fx1.call(this, d, i), +fy1.call(this, d, i) ]);\n        } else if (points0.length) {\n          segment();\n          points0 = [];\n          points1 = [];\n        }\n      }\n      if (points0.length) segment();\n      return segments.length ? segments.join(\"\") : null;\n    }\n    area.x = function(_) {\n      if (!arguments.length) return x1;\n      x0 = x1 = _;\n      return area;\n    };\n    area.x0 = function(_) {\n      if (!arguments.length) return x0;\n      x0 = _;\n      return area;\n    };\n    area.x1 = function(_) {\n      if (!arguments.length) return x1;\n      x1 = _;\n      return area;\n    };\n    area.y = function(_) {\n      if (!arguments.length) return y1;\n      y0 = y1 = _;\n      return area;\n    };\n    area.y0 = function(_) {\n      if (!arguments.length) return y0;\n      y0 = _;\n      return area;\n    };\n    area.y1 = function(_) {\n      if (!arguments.length) return y1;\n      y1 = _;\n      return area;\n    };\n    area.defined = function(_) {\n      if (!arguments.length) return defined;\n      defined = _;\n      return area;\n    };\n    area.interpolate = function(_) {\n      if (!arguments.length) return interpolateKey;\n      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n      interpolateReverse = interpolate.reverse || interpolate;\n      L = interpolate.closed ? \"M\" : \"L\";\n      return area;\n    };\n    area.tension = function(_) {\n      if (!arguments.length) return tension;\n      tension = _;\n      return area;\n    };\n    return area;\n  }\n  d3_svg_lineStepBefore.reverse = d3_svg_lineStepAfter;\n  d3_svg_lineStepAfter.reverse = d3_svg_lineStepBefore;\n  d3.svg.area = function() {\n    return d3_svg_area(d3_identity);\n  };\n  d3.svg.area.radial = function() {\n    var area = d3_svg_area(d3_svg_lineRadial);\n    area.radius = area.x, delete area.x;\n    area.innerRadius = area.x0, delete area.x0;\n    area.outerRadius = area.x1, delete area.x1;\n    area.angle = area.y, delete area.y;\n    area.startAngle = area.y0, delete area.y0;\n    area.endAngle = area.y1, delete area.y1;\n    return area;\n  };\n  d3.svg.chord = function() {\n    var source = d3_source, target = d3_target, radius = d3_svg_chordRadius, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle;\n    function chord(d, i) {\n      var s = subgroup(this, source, d, i), t = subgroup(this, target, d, i);\n      return \"M\" + s.p0 + arc(s.r, s.p1, s.a1 - s.a0) + (equals(s, t) ? curve(s.r, s.p1, s.r, s.p0) : curve(s.r, s.p1, t.r, t.p0) + arc(t.r, t.p1, t.a1 - t.a0) + curve(t.r, t.p1, s.r, s.p0)) + \"Z\";\n    }\n    function subgroup(self, f, d, i) {\n      var subgroup = f.call(self, d, i), r = radius.call(self, subgroup, i), a0 = startAngle.call(self, subgroup, i) - halfπ, a1 = endAngle.call(self, subgroup, i) - halfπ;\n      return {\n        r: r,\n        a0: a0,\n        a1: a1,\n        p0: [ r * Math.cos(a0), r * Math.sin(a0) ],\n        p1: [ r * Math.cos(a1), r * Math.sin(a1) ]\n      };\n    }\n    function equals(a, b) {\n      return a.a0 == b.a0 && a.a1 == b.a1;\n    }\n    function arc(r, p, a) {\n      return \"A\" + r + \",\" + r + \" 0 \" + +(a > π) + \",1 \" + p;\n    }\n    function curve(r0, p0, r1, p1) {\n      return \"Q 0,0 \" + p1;\n    }\n    chord.radius = function(v) {\n      if (!arguments.length) return radius;\n      radius = d3_functor(v);\n      return chord;\n    };\n    chord.source = function(v) {\n      if (!arguments.length) return source;\n      source = d3_functor(v);\n      return chord;\n    };\n    chord.target = function(v) {\n      if (!arguments.length) return target;\n      target = d3_functor(v);\n      return chord;\n    };\n    chord.startAngle = function(v) {\n      if (!arguments.length) return startAngle;\n      startAngle = d3_functor(v);\n      return chord;\n    };\n    chord.endAngle = function(v) {\n      if (!arguments.length) return endAngle;\n      endAngle = d3_functor(v);\n      return chord;\n    };\n    return chord;\n  };\n  function d3_svg_chordRadius(d) {\n    return d.radius;\n  }\n  d3.svg.diagonal = function() {\n    var source = d3_source, target = d3_target, projection = d3_svg_diagonalProjection;\n    function diagonal(d, i) {\n      var p0 = source.call(this, d, i), p3 = target.call(this, d, i), m = (p0.y + p3.y) / 2, p = [ p0, {\n        x: p0.x,\n        y: m\n      }, {\n        x: p3.x,\n        y: m\n      }, p3 ];\n      p = p.map(projection);\n      return \"M\" + p[0] + \"C\" + p[1] + \" \" + p[2] + \" \" + p[3];\n    }\n    diagonal.source = function(x) {\n      if (!arguments.length) return source;\n      source = d3_functor(x);\n      return diagonal;\n    };\n    diagonal.target = function(x) {\n      if (!arguments.length) return target;\n      target = d3_functor(x);\n      return diagonal;\n    };\n    diagonal.projection = function(x) {\n      if (!arguments.length) return projection;\n      projection = x;\n      return diagonal;\n    };\n    return diagonal;\n  };\n  function d3_svg_diagonalProjection(d) {\n    return [ d.x, d.y ];\n  }\n  d3.svg.diagonal.radial = function() {\n    var diagonal = d3.svg.diagonal(), projection = d3_svg_diagonalProjection, projection_ = diagonal.projection;\n    diagonal.projection = function(x) {\n      return arguments.length ? projection_(d3_svg_diagonalRadialProjection(projection = x)) : projection;\n    };\n    return diagonal;\n  };\n  function d3_svg_diagonalRadialProjection(projection) {\n    return function() {\n      var d = projection.apply(this, arguments), r = d[0], a = d[1] - halfπ;\n      return [ r * Math.cos(a), r * Math.sin(a) ];\n    };\n  }\n  d3.svg.symbol = function() {\n    var type = d3_svg_symbolType, size = d3_svg_symbolSize;\n    function symbol(d, i) {\n      return (d3_svg_symbols.get(type.call(this, d, i)) || d3_svg_symbolCircle)(size.call(this, d, i));\n    }\n    symbol.type = function(x) {\n      if (!arguments.length) return type;\n      type = d3_functor(x);\n      return symbol;\n    };\n    symbol.size = function(x) {\n      if (!arguments.length) return size;\n      size = d3_functor(x);\n      return symbol;\n    };\n    return symbol;\n  };\n  function d3_svg_symbolSize() {\n    return 64;\n  }\n  function d3_svg_symbolType() {\n    return \"circle\";\n  }\n  function d3_svg_symbolCircle(size) {\n    var r = Math.sqrt(size / π);\n    return \"M0,\" + r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + -r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + r + \"Z\";\n  }\n  var d3_svg_symbols = d3.map({\n    circle: d3_svg_symbolCircle,\n    cross: function(size) {\n      var r = Math.sqrt(size / 5) / 2;\n      return \"M\" + -3 * r + \",\" + -r + \"H\" + -r + \"V\" + -3 * r + \"H\" + r + \"V\" + -r + \"H\" + 3 * r + \"V\" + r + \"H\" + r + \"V\" + 3 * r + \"H\" + -r + \"V\" + r + \"H\" + -3 * r + \"Z\";\n    },\n    diamond: function(size) {\n      var ry = Math.sqrt(size / (2 * d3_svg_symbolTan30)), rx = ry * d3_svg_symbolTan30;\n      return \"M0,\" + -ry + \"L\" + rx + \",0\" + \" 0,\" + ry + \" \" + -rx + \",0\" + \"Z\";\n    },\n    square: function(size) {\n      var r = Math.sqrt(size) / 2;\n      return \"M\" + -r + \",\" + -r + \"L\" + r + \",\" + -r + \" \" + r + \",\" + r + \" \" + -r + \",\" + r + \"Z\";\n    },\n    \"triangle-down\": function(size) {\n      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n      return \"M0,\" + ry + \"L\" + rx + \",\" + -ry + \" \" + -rx + \",\" + -ry + \"Z\";\n    },\n    \"triangle-up\": function(size) {\n      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n      return \"M0,\" + -ry + \"L\" + rx + \",\" + ry + \" \" + -rx + \",\" + ry + \"Z\";\n    }\n  });\n  d3.svg.symbolTypes = d3_svg_symbols.keys();\n  var d3_svg_symbolSqrt3 = Math.sqrt(3), d3_svg_symbolTan30 = Math.tan(30 * d3_radians);\n  d3_selectionPrototype.transition = function(name) {\n    var id = d3_transitionInheritId || ++d3_transitionId, ns = d3_transitionNamespace(name), subgroups = [], subgroup, node, transition = d3_transitionInherit || {\n      time: Date.now(),\n      ease: d3_ease_cubicInOut,\n      delay: 0,\n      duration: 250\n    };\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) d3_transitionNode(node, i, ns, id, transition);\n        subgroup.push(node);\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_selectionPrototype.interrupt = function(name) {\n    return this.each(name == null ? d3_selection_interrupt : d3_selection_interruptNS(d3_transitionNamespace(name)));\n  };\n  var d3_selection_interrupt = d3_selection_interruptNS(d3_transitionNamespace());\n  function d3_selection_interruptNS(ns) {\n    return function() {\n      var lock, activeId, active;\n      if ((lock = this[ns]) && (active = lock[activeId = lock.active])) {\n        active.timer.c = null;\n        active.timer.t = NaN;\n        if (--lock.count) delete lock[activeId]; else delete this[ns];\n        lock.active += .5;\n        active.event && active.event.interrupt.call(this, this.__data__, active.index);\n      }\n    };\n  }\n  function d3_transition(groups, ns, id) {\n    d3_subclass(groups, d3_transitionPrototype);\n    groups.namespace = ns;\n    groups.id = id;\n    return groups;\n  }\n  var d3_transitionPrototype = [], d3_transitionId = 0, d3_transitionInheritId, d3_transitionInherit;\n  d3_transitionPrototype.call = d3_selectionPrototype.call;\n  d3_transitionPrototype.empty = d3_selectionPrototype.empty;\n  d3_transitionPrototype.node = d3_selectionPrototype.node;\n  d3_transitionPrototype.size = d3_selectionPrototype.size;\n  d3.transition = function(selection, name) {\n    return selection && selection.transition ? d3_transitionInheritId ? selection.transition(name) : selection : d3.selection().transition(selection);\n  };\n  d3.transition.prototype = d3_transitionPrototype;\n  d3_transitionPrototype.select = function(selector) {\n    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnode, node;\n    selector = d3_selection_selector(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if ((node = group[i]) && (subnode = selector.call(node, node.__data__, i, j))) {\n          if (\"__data__\" in node) subnode.__data__ = node.__data__;\n          d3_transitionNode(subnode, i, ns, id, node[ns][id]);\n          subgroup.push(subnode);\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_transitionPrototype.selectAll = function(selector) {\n    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnodes, node, subnode, transition;\n    selector = d3_selection_selectorAll(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          transition = node[ns][id];\n          subnodes = selector.call(node, node.__data__, i, j);\n          subgroups.push(subgroup = []);\n          for (var k = -1, o = subnodes.length; ++k < o; ) {\n            if (subnode = subnodes[k]) d3_transitionNode(subnode, k, ns, id, transition);\n            subgroup.push(subnode);\n          }\n        }\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_transitionPrototype.filter = function(filter) {\n    var subgroups = [], subgroup, group, node;\n    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n          subgroup.push(node);\n        }\n      }\n    }\n    return d3_transition(subgroups, this.namespace, this.id);\n  };\n  d3_transitionPrototype.tween = function(name, tween) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 2) return this.node()[ns][id].tween.get(name);\n    return d3_selection_each(this, tween == null ? function(node) {\n      node[ns][id].tween.remove(name);\n    } : function(node) {\n      node[ns][id].tween.set(name, tween);\n    });\n  };\n  function d3_transition_tween(groups, name, value, tween) {\n    var id = groups.id, ns = groups.namespace;\n    return d3_selection_each(groups, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].tween.set(name, tween(value.call(node, node.__data__, i, j)));\n    } : (value = tween(value), function(node) {\n      node[ns][id].tween.set(name, value);\n    }));\n  }\n  d3_transitionPrototype.attr = function(nameNS, value) {\n    if (arguments.length < 2) {\n      for (value in nameNS) this.attr(value, nameNS[value]);\n      return this;\n    }\n    var interpolate = nameNS == \"transform\" ? d3_interpolateTransform : d3_interpolate, name = d3.ns.qualify(nameNS);\n    function attrNull() {\n      this.removeAttribute(name);\n    }\n    function attrNullNS() {\n      this.removeAttributeNS(name.space, name.local);\n    }\n    function attrTween(b) {\n      return b == null ? attrNull : (b += \"\", function() {\n        var a = this.getAttribute(name), i;\n        return a !== b && (i = interpolate(a, b), function(t) {\n          this.setAttribute(name, i(t));\n        });\n      });\n    }\n    function attrTweenNS(b) {\n      return b == null ? attrNullNS : (b += \"\", function() {\n        var a = this.getAttributeNS(name.space, name.local), i;\n        return a !== b && (i = interpolate(a, b), function(t) {\n          this.setAttributeNS(name.space, name.local, i(t));\n        });\n      });\n    }\n    return d3_transition_tween(this, \"attr.\" + nameNS, value, name.local ? attrTweenNS : attrTween);\n  };\n  d3_transitionPrototype.attrTween = function(nameNS, tween) {\n    var name = d3.ns.qualify(nameNS);\n    function attrTween(d, i) {\n      var f = tween.call(this, d, i, this.getAttribute(name));\n      return f && function(t) {\n        this.setAttribute(name, f(t));\n      };\n    }\n    function attrTweenNS(d, i) {\n      var f = tween.call(this, d, i, this.getAttributeNS(name.space, name.local));\n      return f && function(t) {\n        this.setAttributeNS(name.space, name.local, f(t));\n      };\n    }\n    return this.tween(\"attr.\" + nameNS, name.local ? attrTweenNS : attrTween);\n  };\n  d3_transitionPrototype.style = function(name, value, priority) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof name !== \"string\") {\n        if (n < 2) value = \"\";\n        for (priority in name) this.style(priority, name[priority], value);\n        return this;\n      }\n      priority = \"\";\n    }\n    function styleNull() {\n      this.style.removeProperty(name);\n    }\n    function styleString(b) {\n      return b == null ? styleNull : (b += \"\", function() {\n        var a = d3_window(this).getComputedStyle(this, null).getPropertyValue(name), i;\n        return a !== b && (i = d3_interpolate(a, b), function(t) {\n          this.style.setProperty(name, i(t), priority);\n        });\n      });\n    }\n    return d3_transition_tween(this, \"style.\" + name, value, styleString);\n  };\n  d3_transitionPrototype.styleTween = function(name, tween, priority) {\n    if (arguments.length < 3) priority = \"\";\n    function styleTween(d, i) {\n      var f = tween.call(this, d, i, d3_window(this).getComputedStyle(this, null).getPropertyValue(name));\n      return f && function(t) {\n        this.style.setProperty(name, f(t), priority);\n      };\n    }\n    return this.tween(\"style.\" + name, styleTween);\n  };\n  d3_transitionPrototype.text = function(value) {\n    return d3_transition_tween(this, \"text\", value, d3_transition_text);\n  };\n  function d3_transition_text(b) {\n    if (b == null) b = \"\";\n    return function() {\n      this.textContent = b;\n    };\n  }\n  d3_transitionPrototype.remove = function() {\n    var ns = this.namespace;\n    return this.each(\"end.transition\", function() {\n      var p;\n      if (this[ns].count < 2 && (p = this.parentNode)) p.removeChild(this);\n    });\n  };\n  d3_transitionPrototype.ease = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].ease;\n    if (typeof value !== \"function\") value = d3.ease.apply(d3, arguments);\n    return d3_selection_each(this, function(node) {\n      node[ns][id].ease = value;\n    });\n  };\n  d3_transitionPrototype.delay = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].delay;\n    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].delay = +value.call(node, node.__data__, i, j);\n    } : (value = +value, function(node) {\n      node[ns][id].delay = value;\n    }));\n  };\n  d3_transitionPrototype.duration = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].duration;\n    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].duration = Math.max(1, value.call(node, node.__data__, i, j));\n    } : (value = Math.max(1, value), function(node) {\n      node[ns][id].duration = value;\n    }));\n  };\n  d3_transitionPrototype.each = function(type, listener) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 2) {\n      var inherit = d3_transitionInherit, inheritId = d3_transitionInheritId;\n      try {\n        d3_transitionInheritId = id;\n        d3_selection_each(this, function(node, i, j) {\n          d3_transitionInherit = node[ns][id];\n          type.call(node, node.__data__, i, j);\n        });\n      } finally {\n        d3_transitionInherit = inherit;\n        d3_transitionInheritId = inheritId;\n      }\n    } else {\n      d3_selection_each(this, function(node) {\n        var transition = node[ns][id];\n        (transition.event || (transition.event = d3.dispatch(\"start\", \"end\", \"interrupt\"))).on(type, listener);\n      });\n    }\n    return this;\n  };\n  d3_transitionPrototype.transition = function() {\n    var id0 = this.id, id1 = ++d3_transitionId, ns = this.namespace, subgroups = [], subgroup, group, node, transition;\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        if (node = group[i]) {\n          transition = node[ns][id0];\n          d3_transitionNode(node, i, ns, id1, {\n            time: transition.time,\n            ease: transition.ease,\n            delay: transition.delay + transition.duration,\n            duration: transition.duration\n          });\n        }\n        subgroup.push(node);\n      }\n    }\n    return d3_transition(subgroups, ns, id1);\n  };\n  function d3_transitionNamespace(name) {\n    return name == null ? \"__transition__\" : \"__transition_\" + name + \"__\";\n  }\n  function d3_transitionNode(node, i, ns, id, inherit) {\n    var lock = node[ns] || (node[ns] = {\n      active: 0,\n      count: 0\n    }), transition = lock[id], time, timer, duration, ease, tweens;\n    function schedule(elapsed) {\n      var delay = transition.delay;\n      timer.t = delay + time;\n      if (delay <= elapsed) return start(elapsed - delay);\n      timer.c = start;\n    }\n    function start(elapsed) {\n      var activeId = lock.active, active = lock[activeId];\n      if (active) {\n        active.timer.c = null;\n        active.timer.t = NaN;\n        --lock.count;\n        delete lock[activeId];\n        active.event && active.event.interrupt.call(node, node.__data__, active.index);\n      }\n      for (var cancelId in lock) {\n        if (+cancelId < id) {\n          var cancel = lock[cancelId];\n          cancel.timer.c = null;\n          cancel.timer.t = NaN;\n          --lock.count;\n          delete lock[cancelId];\n        }\n      }\n      timer.c = tick;\n      d3_timer(function() {\n        if (timer.c && tick(elapsed || 1)) {\n          timer.c = null;\n          timer.t = NaN;\n        }\n        return 1;\n      }, 0, time);\n      lock.active = id;\n      transition.event && transition.event.start.call(node, node.__data__, i);\n      tweens = [];\n      transition.tween.forEach(function(key, value) {\n        if (value = value.call(node, node.__data__, i)) {\n          tweens.push(value);\n        }\n      });\n      ease = transition.ease;\n      duration = transition.duration;\n    }\n    function tick(elapsed) {\n      var t = elapsed / duration, e = ease(t), n = tweens.length;\n      while (n > 0) {\n        tweens[--n].call(node, e);\n      }\n      if (t >= 1) {\n        transition.event && transition.event.end.call(node, node.__data__, i);\n        if (--lock.count) delete lock[id]; else delete node[ns];\n        return 1;\n      }\n    }\n    if (!transition) {\n      time = inherit.time;\n      timer = d3_timer(schedule, 0, time);\n      transition = lock[id] = {\n        tween: new d3_Map(),\n        time: time,\n        timer: timer,\n        delay: inherit.delay,\n        duration: inherit.duration,\n        ease: inherit.ease,\n        index: i\n      };\n      inherit = null;\n      ++lock.count;\n    }\n  }\n  d3.svg.axis = function() {\n    var scale = d3.scale.linear(), orient = d3_svg_axisDefaultOrient, innerTickSize = 6, outerTickSize = 6, tickPadding = 3, tickArguments_ = [ 10 ], tickValues = null, tickFormat_;\n    function axis(g) {\n      g.each(function() {\n        var g = d3.select(this);\n        var scale0 = this.__chart__ || scale, scale1 = this.__chart__ = scale.copy();\n        var ticks = tickValues == null ? scale1.ticks ? scale1.ticks.apply(scale1, tickArguments_) : scale1.domain() : tickValues, tickFormat = tickFormat_ == null ? scale1.tickFormat ? scale1.tickFormat.apply(scale1, tickArguments_) : d3_identity : tickFormat_, tick = g.selectAll(\".tick\").data(ticks, scale1), tickEnter = tick.enter().insert(\"g\", \".domain\").attr(\"class\", \"tick\").style(\"opacity\", ε), tickExit = d3.transition(tick.exit()).style(\"opacity\", ε).remove(), tickUpdate = d3.transition(tick.order()).style(\"opacity\", 1), tickSpacing = Math.max(innerTickSize, 0) + tickPadding, tickTransform;\n        var range = d3_scaleRange(scale1), path = g.selectAll(\".domain\").data([ 0 ]), pathUpdate = (path.enter().append(\"path\").attr(\"class\", \"domain\"), \n        d3.transition(path));\n        tickEnter.append(\"line\");\n        tickEnter.append(\"text\");\n        var lineEnter = tickEnter.select(\"line\"), lineUpdate = tickUpdate.select(\"line\"), text = tick.select(\"text\").text(tickFormat), textEnter = tickEnter.select(\"text\"), textUpdate = tickUpdate.select(\"text\"), sign = orient === \"top\" || orient === \"left\" ? -1 : 1, x1, x2, y1, y2;\n        if (orient === \"bottom\" || orient === \"top\") {\n          tickTransform = d3_svg_axisX, x1 = \"x\", y1 = \"y\", x2 = \"x2\", y2 = \"y2\";\n          text.attr(\"dy\", sign < 0 ? \"0em\" : \".71em\").style(\"text-anchor\", \"middle\");\n          pathUpdate.attr(\"d\", \"M\" + range[0] + \",\" + sign * outerTickSize + \"V0H\" + range[1] + \"V\" + sign * outerTickSize);\n        } else {\n          tickTransform = d3_svg_axisY, x1 = \"y\", y1 = \"x\", x2 = \"y2\", y2 = \"x2\";\n          text.attr(\"dy\", \".32em\").style(\"text-anchor\", sign < 0 ? \"end\" : \"start\");\n          pathUpdate.attr(\"d\", \"M\" + sign * outerTickSize + \",\" + range[0] + \"H0V\" + range[1] + \"H\" + sign * outerTickSize);\n        }\n        lineEnter.attr(y2, sign * innerTickSize);\n        textEnter.attr(y1, sign * tickSpacing);\n        lineUpdate.attr(x2, 0).attr(y2, sign * innerTickSize);\n        textUpdate.attr(x1, 0).attr(y1, sign * tickSpacing);\n        if (scale1.rangeBand) {\n          var x = scale1, dx = x.rangeBand() / 2;\n          scale0 = scale1 = function(d) {\n            return x(d) + dx;\n          };\n        } else if (scale0.rangeBand) {\n          scale0 = scale1;\n        } else {\n          tickExit.call(tickTransform, scale1, scale0);\n        }\n        tickEnter.call(tickTransform, scale0, scale1);\n        tickUpdate.call(tickTransform, scale1, scale1);\n      });\n    }\n    axis.scale = function(x) {\n      if (!arguments.length) return scale;\n      scale = x;\n      return axis;\n    };\n    axis.orient = function(x) {\n      if (!arguments.length) return orient;\n      orient = x in d3_svg_axisOrients ? x + \"\" : d3_svg_axisDefaultOrient;\n      return axis;\n    };\n    axis.ticks = function() {\n      if (!arguments.length) return tickArguments_;\n      tickArguments_ = d3_array(arguments);\n      return axis;\n    };\n    axis.tickValues = function(x) {\n      if (!arguments.length) return tickValues;\n      tickValues = x;\n      return axis;\n    };\n    axis.tickFormat = function(x) {\n      if (!arguments.length) return tickFormat_;\n      tickFormat_ = x;\n      return axis;\n    };\n    axis.tickSize = function(x) {\n      var n = arguments.length;\n      if (!n) return innerTickSize;\n      innerTickSize = +x;\n      outerTickSize = +arguments[n - 1];\n      return axis;\n    };\n    axis.innerTickSize = function(x) {\n      if (!arguments.length) return innerTickSize;\n      innerTickSize = +x;\n      return axis;\n    };\n    axis.outerTickSize = function(x) {\n      if (!arguments.length) return outerTickSize;\n      outerTickSize = +x;\n      return axis;\n    };\n    axis.tickPadding = function(x) {\n      if (!arguments.length) return tickPadding;\n      tickPadding = +x;\n      return axis;\n    };\n    axis.tickSubdivide = function() {\n      return arguments.length && axis;\n    };\n    return axis;\n  };\n  var d3_svg_axisDefaultOrient = \"bottom\", d3_svg_axisOrients = {\n    top: 1,\n    right: 1,\n    bottom: 1,\n    left: 1\n  };\n  function d3_svg_axisX(selection, x0, x1) {\n    selection.attr(\"transform\", function(d) {\n      var v0 = x0(d);\n      return \"translate(\" + (isFinite(v0) ? v0 : x1(d)) + \",0)\";\n    });\n  }\n  function d3_svg_axisY(selection, y0, y1) {\n    selection.attr(\"transform\", function(d) {\n      var v0 = y0(d);\n      return \"translate(0,\" + (isFinite(v0) ? v0 : y1(d)) + \")\";\n    });\n  }\n  d3.svg.brush = function() {\n    var event = d3_eventDispatch(brush, \"brushstart\", \"brush\", \"brushend\"), x = null, y = null, xExtent = [ 0, 0 ], yExtent = [ 0, 0 ], xExtentDomain, yExtentDomain, xClamp = true, yClamp = true, resizes = d3_svg_brushResizes[0];\n    function brush(g) {\n      g.each(function() {\n        var g = d3.select(this).style(\"pointer-events\", \"all\").style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\").on(\"mousedown.brush\", brushstart).on(\"touchstart.brush\", brushstart);\n        var background = g.selectAll(\".background\").data([ 0 ]);\n        background.enter().append(\"rect\").attr(\"class\", \"background\").style(\"visibility\", \"hidden\").style(\"cursor\", \"crosshair\");\n        g.selectAll(\".extent\").data([ 0 ]).enter().append(\"rect\").attr(\"class\", \"extent\").style(\"cursor\", \"move\");\n        var resize = g.selectAll(\".resize\").data(resizes, d3_identity);\n        resize.exit().remove();\n        resize.enter().append(\"g\").attr(\"class\", function(d) {\n          return \"resize \" + d;\n        }).style(\"cursor\", function(d) {\n          return d3_svg_brushCursor[d];\n        }).append(\"rect\").attr(\"x\", function(d) {\n          return /[ew]$/.test(d) ? -3 : null;\n        }).attr(\"y\", function(d) {\n          return /^[ns]/.test(d) ? -3 : null;\n        }).attr(\"width\", 6).attr(\"height\", 6).style(\"visibility\", \"hidden\");\n        resize.style(\"display\", brush.empty() ? \"none\" : null);\n        var gUpdate = d3.transition(g), backgroundUpdate = d3.transition(background), range;\n        if (x) {\n          range = d3_scaleRange(x);\n          backgroundUpdate.attr(\"x\", range[0]).attr(\"width\", range[1] - range[0]);\n          redrawX(gUpdate);\n        }\n        if (y) {\n          range = d3_scaleRange(y);\n          backgroundUpdate.attr(\"y\", range[0]).attr(\"height\", range[1] - range[0]);\n          redrawY(gUpdate);\n        }\n        redraw(gUpdate);\n      });\n    }\n    brush.event = function(g) {\n      g.each(function() {\n        var event_ = event.of(this, arguments), extent1 = {\n          x: xExtent,\n          y: yExtent,\n          i: xExtentDomain,\n          j: yExtentDomain\n        }, extent0 = this.__chart__ || extent1;\n        this.__chart__ = extent1;\n        if (d3_transitionInheritId) {\n          d3.select(this).transition().each(\"start.brush\", function() {\n            xExtentDomain = extent0.i;\n            yExtentDomain = extent0.j;\n            xExtent = extent0.x;\n            yExtent = extent0.y;\n            event_({\n              type: \"brushstart\"\n            });\n          }).tween(\"brush:brush\", function() {\n            var xi = d3_interpolateArray(xExtent, extent1.x), yi = d3_interpolateArray(yExtent, extent1.y);\n            xExtentDomain = yExtentDomain = null;\n            return function(t) {\n              xExtent = extent1.x = xi(t);\n              yExtent = extent1.y = yi(t);\n              event_({\n                type: \"brush\",\n                mode: \"resize\"\n              });\n            };\n          }).each(\"end.brush\", function() {\n            xExtentDomain = extent1.i;\n            yExtentDomain = extent1.j;\n            event_({\n              type: \"brush\",\n              mode: \"resize\"\n            });\n            event_({\n              type: \"brushend\"\n            });\n          });\n        } else {\n          event_({\n            type: \"brushstart\"\n          });\n          event_({\n            type: \"brush\",\n            mode: \"resize\"\n          });\n          event_({\n            type: \"brushend\"\n          });\n        }\n      });\n    };\n    function redraw(g) {\n      g.selectAll(\".resize\").attr(\"transform\", function(d) {\n        return \"translate(\" + xExtent[+/e$/.test(d)] + \",\" + yExtent[+/^s/.test(d)] + \")\";\n      });\n    }\n    function redrawX(g) {\n      g.select(\".extent\").attr(\"x\", xExtent[0]);\n      g.selectAll(\".extent,.n>rect,.s>rect\").attr(\"width\", xExtent[1] - xExtent[0]);\n    }\n    function redrawY(g) {\n      g.select(\".extent\").attr(\"y\", yExtent[0]);\n      g.selectAll(\".extent,.e>rect,.w>rect\").attr(\"height\", yExtent[1] - yExtent[0]);\n    }\n    function brushstart() {\n      var target = this, eventTarget = d3.select(d3.event.target), event_ = event.of(target, arguments), g = d3.select(target), resizing = eventTarget.datum(), resizingX = !/^(n|s)$/.test(resizing) && x, resizingY = !/^(e|w)$/.test(resizing) && y, dragging = eventTarget.classed(\"extent\"), dragRestore = d3_event_dragSuppress(target), center, origin = d3.mouse(target), offset;\n      var w = d3.select(d3_window(target)).on(\"keydown.brush\", keydown).on(\"keyup.brush\", keyup);\n      if (d3.event.changedTouches) {\n        w.on(\"touchmove.brush\", brushmove).on(\"touchend.brush\", brushend);\n      } else {\n        w.on(\"mousemove.brush\", brushmove).on(\"mouseup.brush\", brushend);\n      }\n      g.interrupt().selectAll(\"*\").interrupt();\n      if (dragging) {\n        origin[0] = xExtent[0] - origin[0];\n        origin[1] = yExtent[0] - origin[1];\n      } else if (resizing) {\n        var ex = +/w$/.test(resizing), ey = +/^n/.test(resizing);\n        offset = [ xExtent[1 - ex] - origin[0], yExtent[1 - ey] - origin[1] ];\n        origin[0] = xExtent[ex];\n        origin[1] = yExtent[ey];\n      } else if (d3.event.altKey) center = origin.slice();\n      g.style(\"pointer-events\", \"none\").selectAll(\".resize\").style(\"display\", null);\n      d3.select(\"body\").style(\"cursor\", eventTarget.style(\"cursor\"));\n      event_({\n        type: \"brushstart\"\n      });\n      brushmove();\n      function keydown() {\n        if (d3.event.keyCode == 32) {\n          if (!dragging) {\n            center = null;\n            origin[0] -= xExtent[1];\n            origin[1] -= yExtent[1];\n            dragging = 2;\n          }\n          d3_eventPreventDefault();\n        }\n      }\n      function keyup() {\n        if (d3.event.keyCode == 32 && dragging == 2) {\n          origin[0] += xExtent[1];\n          origin[1] += yExtent[1];\n          dragging = 0;\n          d3_eventPreventDefault();\n        }\n      }\n      function brushmove() {\n        var point = d3.mouse(target), moved = false;\n        if (offset) {\n          point[0] += offset[0];\n          point[1] += offset[1];\n        }\n        if (!dragging) {\n          if (d3.event.altKey) {\n            if (!center) center = [ (xExtent[0] + xExtent[1]) / 2, (yExtent[0] + yExtent[1]) / 2 ];\n            origin[0] = xExtent[+(point[0] < center[0])];\n            origin[1] = yExtent[+(point[1] < center[1])];\n          } else center = null;\n        }\n        if (resizingX && move1(point, x, 0)) {\n          redrawX(g);\n          moved = true;\n        }\n        if (resizingY && move1(point, y, 1)) {\n          redrawY(g);\n          moved = true;\n        }\n        if (moved) {\n          redraw(g);\n          event_({\n            type: \"brush\",\n            mode: dragging ? \"move\" : \"resize\"\n          });\n        }\n      }\n      function move1(point, scale, i) {\n        var range = d3_scaleRange(scale), r0 = range[0], r1 = range[1], position = origin[i], extent = i ? yExtent : xExtent, size = extent[1] - extent[0], min, max;\n        if (dragging) {\n          r0 -= position;\n          r1 -= size + position;\n        }\n        min = (i ? yClamp : xClamp) ? Math.max(r0, Math.min(r1, point[i])) : point[i];\n        if (dragging) {\n          max = (min += position) + size;\n        } else {\n          if (center) position = Math.max(r0, Math.min(r1, 2 * center[i] - min));\n          if (position < min) {\n            max = min;\n            min = position;\n          } else {\n            max = position;\n          }\n        }\n        if (extent[0] != min || extent[1] != max) {\n          if (i) yExtentDomain = null; else xExtentDomain = null;\n          extent[0] = min;\n          extent[1] = max;\n          return true;\n        }\n      }\n      function brushend() {\n        brushmove();\n        g.style(\"pointer-events\", \"all\").selectAll(\".resize\").style(\"display\", brush.empty() ? \"none\" : null);\n        d3.select(\"body\").style(\"cursor\", null);\n        w.on(\"mousemove.brush\", null).on(\"mouseup.brush\", null).on(\"touchmove.brush\", null).on(\"touchend.brush\", null).on(\"keydown.brush\", null).on(\"keyup.brush\", null);\n        dragRestore();\n        event_({\n          type: \"brushend\"\n        });\n      }\n    }\n    brush.x = function(z) {\n      if (!arguments.length) return x;\n      x = z;\n      resizes = d3_svg_brushResizes[!x << 1 | !y];\n      return brush;\n    };\n    brush.y = function(z) {\n      if (!arguments.length) return y;\n      y = z;\n      resizes = d3_svg_brushResizes[!x << 1 | !y];\n      return brush;\n    };\n    brush.clamp = function(z) {\n      if (!arguments.length) return x && y ? [ xClamp, yClamp ] : x ? xClamp : y ? yClamp : null;\n      if (x && y) xClamp = !!z[0], yClamp = !!z[1]; else if (x) xClamp = !!z; else if (y) yClamp = !!z;\n      return brush;\n    };\n    brush.extent = function(z) {\n      var x0, x1, y0, y1, t;\n      if (!arguments.length) {\n        if (x) {\n          if (xExtentDomain) {\n            x0 = xExtentDomain[0], x1 = xExtentDomain[1];\n          } else {\n            x0 = xExtent[0], x1 = xExtent[1];\n            if (x.invert) x0 = x.invert(x0), x1 = x.invert(x1);\n            if (x1 < x0) t = x0, x0 = x1, x1 = t;\n          }\n        }\n        if (y) {\n          if (yExtentDomain) {\n            y0 = yExtentDomain[0], y1 = yExtentDomain[1];\n          } else {\n            y0 = yExtent[0], y1 = yExtent[1];\n            if (y.invert) y0 = y.invert(y0), y1 = y.invert(y1);\n            if (y1 < y0) t = y0, y0 = y1, y1 = t;\n          }\n        }\n        return x && y ? [ [ x0, y0 ], [ x1, y1 ] ] : x ? [ x0, x1 ] : y && [ y0, y1 ];\n      }\n      if (x) {\n        x0 = z[0], x1 = z[1];\n        if (y) x0 = x0[0], x1 = x1[0];\n        xExtentDomain = [ x0, x1 ];\n        if (x.invert) x0 = x(x0), x1 = x(x1);\n        if (x1 < x0) t = x0, x0 = x1, x1 = t;\n        if (x0 != xExtent[0] || x1 != xExtent[1]) xExtent = [ x0, x1 ];\n      }\n      if (y) {\n        y0 = z[0], y1 = z[1];\n        if (x) y0 = y0[1], y1 = y1[1];\n        yExtentDomain = [ y0, y1 ];\n        if (y.invert) y0 = y(y0), y1 = y(y1);\n        if (y1 < y0) t = y0, y0 = y1, y1 = t;\n        if (y0 != yExtent[0] || y1 != yExtent[1]) yExtent = [ y0, y1 ];\n      }\n      return brush;\n    };\n    brush.clear = function() {\n      if (!brush.empty()) {\n        xExtent = [ 0, 0 ], yExtent = [ 0, 0 ];\n        xExtentDomain = yExtentDomain = null;\n      }\n      return brush;\n    };\n    brush.empty = function() {\n      return !!x && xExtent[0] == xExtent[1] || !!y && yExtent[0] == yExtent[1];\n    };\n    return d3.rebind(brush, event, \"on\");\n  };\n  var d3_svg_brushCursor = {\n    n: \"ns-resize\",\n    e: \"ew-resize\",\n    s: \"ns-resize\",\n    w: \"ew-resize\",\n    nw: \"nwse-resize\",\n    ne: \"nesw-resize\",\n    se: \"nwse-resize\",\n    sw: \"nesw-resize\"\n  };\n  var d3_svg_brushResizes = [ [ \"n\", \"e\", \"s\", \"w\", \"nw\", \"ne\", \"se\", \"sw\" ], [ \"e\", \"w\" ], [ \"n\", \"s\" ], [] ];\n  var d3_time_format = d3_time.format = d3_locale_enUS.timeFormat;\n  var d3_time_formatUtc = d3_time_format.utc;\n  var d3_time_formatIso = d3_time_formatUtc(\"%Y-%m-%dT%H:%M:%S.%LZ\");\n  d3_time_format.iso = Date.prototype.toISOString && +new Date(\"2000-01-01T00:00:00.000Z\") ? d3_time_formatIsoNative : d3_time_formatIso;\n  function d3_time_formatIsoNative(date) {\n    return date.toISOString();\n  }\n  d3_time_formatIsoNative.parse = function(string) {\n    var date = new Date(string);\n    return isNaN(date) ? null : date;\n  };\n  d3_time_formatIsoNative.toString = d3_time_formatIso.toString;\n  d3_time.second = d3_time_interval(function(date) {\n    return new d3_date(Math.floor(date / 1e3) * 1e3);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 1e3);\n  }, function(date) {\n    return date.getSeconds();\n  });\n  d3_time.seconds = d3_time.second.range;\n  d3_time.seconds.utc = d3_time.second.utc.range;\n  d3_time.minute = d3_time_interval(function(date) {\n    return new d3_date(Math.floor(date / 6e4) * 6e4);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 6e4);\n  }, function(date) {\n    return date.getMinutes();\n  });\n  d3_time.minutes = d3_time.minute.range;\n  d3_time.minutes.utc = d3_time.minute.utc.range;\n  d3_time.hour = d3_time_interval(function(date) {\n    var timezone = date.getTimezoneOffset() / 60;\n    return new d3_date((Math.floor(date / 36e5 - timezone) + timezone) * 36e5);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 36e5);\n  }, function(date) {\n    return date.getHours();\n  });\n  d3_time.hours = d3_time.hour.range;\n  d3_time.hours.utc = d3_time.hour.utc.range;\n  d3_time.month = d3_time_interval(function(date) {\n    date = d3_time.day(date);\n    date.setDate(1);\n    return date;\n  }, function(date, offset) {\n    date.setMonth(date.getMonth() + offset);\n  }, function(date) {\n    return date.getMonth();\n  });\n  d3_time.months = d3_time.month.range;\n  d3_time.months.utc = d3_time.month.utc.range;\n  function d3_time_scale(linear, methods, format) {\n    function scale(x) {\n      return linear(x);\n    }\n    scale.invert = function(x) {\n      return d3_time_scaleDate(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return linear.domain().map(d3_time_scaleDate);\n      linear.domain(x);\n      return scale;\n    };\n    function tickMethod(extent, count) {\n      var span = extent[1] - extent[0], target = span / count, i = d3.bisect(d3_time_scaleSteps, target);\n      return i == d3_time_scaleSteps.length ? [ methods.year, d3_scale_linearTickRange(extent.map(function(d) {\n        return d / 31536e6;\n      }), count)[2] ] : !i ? [ d3_time_scaleMilliseconds, d3_scale_linearTickRange(extent, count)[2] ] : methods[target / d3_time_scaleSteps[i - 1] < d3_time_scaleSteps[i] / target ? i - 1 : i];\n    }\n    scale.nice = function(interval, skip) {\n      var domain = scale.domain(), extent = d3_scaleExtent(domain), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" && tickMethod(extent, interval);\n      if (method) interval = method[0], skip = method[1];\n      function skipped(date) {\n        return !isNaN(date) && !interval.range(date, d3_time_scaleDate(+date + 1), skip).length;\n      }\n      return scale.domain(d3_scale_nice(domain, skip > 1 ? {\n        floor: function(date) {\n          while (skipped(date = interval.floor(date))) date = d3_time_scaleDate(date - 1);\n          return date;\n        },\n        ceil: function(date) {\n          while (skipped(date = interval.ceil(date))) date = d3_time_scaleDate(+date + 1);\n          return date;\n        }\n      } : interval));\n    };\n    scale.ticks = function(interval, skip) {\n      var extent = d3_scaleExtent(scale.domain()), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" ? tickMethod(extent, interval) : !interval.range && [ {\n        range: interval\n      }, skip ];\n      if (method) interval = method[0], skip = method[1];\n      return interval.range(extent[0], d3_time_scaleDate(+extent[1] + 1), skip < 1 ? 1 : skip);\n    };\n    scale.tickFormat = function() {\n      return format;\n    };\n    scale.copy = function() {\n      return d3_time_scale(linear.copy(), methods, format);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  function d3_time_scaleDate(t) {\n    return new Date(t);\n  }\n  var d3_time_scaleSteps = [ 1e3, 5e3, 15e3, 3e4, 6e4, 3e5, 9e5, 18e5, 36e5, 108e5, 216e5, 432e5, 864e5, 1728e5, 6048e5, 2592e6, 7776e6, 31536e6 ];\n  var d3_time_scaleLocalMethods = [ [ d3_time.second, 1 ], [ d3_time.second, 5 ], [ d3_time.second, 15 ], [ d3_time.second, 30 ], [ d3_time.minute, 1 ], [ d3_time.minute, 5 ], [ d3_time.minute, 15 ], [ d3_time.minute, 30 ], [ d3_time.hour, 1 ], [ d3_time.hour, 3 ], [ d3_time.hour, 6 ], [ d3_time.hour, 12 ], [ d3_time.day, 1 ], [ d3_time.day, 2 ], [ d3_time.week, 1 ], [ d3_time.month, 1 ], [ d3_time.month, 3 ], [ d3_time.year, 1 ] ];\n  var d3_time_scaleLocalFormat = d3_time_format.multi([ [ \".%L\", function(d) {\n    return d.getMilliseconds();\n  } ], [ \":%S\", function(d) {\n    return d.getSeconds();\n  } ], [ \"%I:%M\", function(d) {\n    return d.getMinutes();\n  } ], [ \"%I %p\", function(d) {\n    return d.getHours();\n  } ], [ \"%a %d\", function(d) {\n    return d.getDay() && d.getDate() != 1;\n  } ], [ \"%b %d\", function(d) {\n    return d.getDate() != 1;\n  } ], [ \"%B\", function(d) {\n    return d.getMonth();\n  } ], [ \"%Y\", d3_true ] ]);\n  var d3_time_scaleMilliseconds = {\n    range: function(start, stop, step) {\n      return d3.range(Math.ceil(start / step) * step, +stop, step).map(d3_time_scaleDate);\n    },\n    floor: d3_identity,\n    ceil: d3_identity\n  };\n  d3_time_scaleLocalMethods.year = d3_time.year;\n  d3_time.scale = function() {\n    return d3_time_scale(d3.scale.linear(), d3_time_scaleLocalMethods, d3_time_scaleLocalFormat);\n  };\n  var d3_time_scaleUtcMethods = d3_time_scaleLocalMethods.map(function(m) {\n    return [ m[0].utc, m[1] ];\n  });\n  var d3_time_scaleUtcFormat = d3_time_formatUtc.multi([ [ \".%L\", function(d) {\n    return d.getUTCMilliseconds();\n  } ], [ \":%S\", function(d) {\n    return d.getUTCSeconds();\n  } ], [ \"%I:%M\", function(d) {\n    return d.getUTCMinutes();\n  } ], [ \"%I %p\", function(d) {\n    return d.getUTCHours();\n  } ], [ \"%a %d\", function(d) {\n    return d.getUTCDay() && d.getUTCDate() != 1;\n  } ], [ \"%b %d\", function(d) {\n    return d.getUTCDate() != 1;\n  } ], [ \"%B\", function(d) {\n    return d.getUTCMonth();\n  } ], [ \"%Y\", d3_true ] ]);\n  d3_time_scaleUtcMethods.year = d3_time.year.utc;\n  d3_time.scale.utc = function() {\n    return d3_time_scale(d3.scale.linear(), d3_time_scaleUtcMethods, d3_time_scaleUtcFormat);\n  };\n  d3.text = d3_xhrType(function(request) {\n    return request.responseText;\n  });\n  d3.json = function(url, callback) {\n    return d3_xhr(url, \"application/json\", d3_json, callback);\n  };\n  function d3_json(request) {\n    return JSON.parse(request.responseText);\n  }\n  d3.html = function(url, callback) {\n    return d3_xhr(url, \"text/html\", d3_html, callback);\n  };\n  function d3_html(request) {\n    var range = d3_document.createRange();\n    range.selectNode(d3_document.body);\n    return range.createContextualFragment(request.responseText);\n  }\n  d3.xml = d3_xhrType(function(request) {\n    return request.responseXML;\n  });\n  if (typeof define === \"function\" && define.amd) this.d3 = d3, define(d3); else if (typeof module === \"object\" && module.exports) module.exports = d3; else this.d3 = d3;\n}();\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/d3/d3.js\n ** module id = 1048\n ** module chunks = 3\n **/","import d3 from 'd3';\n/**\n * From https://github.com/dk8996/Gantt-Chart\n * @author Dimitry Kudrayvtsev\n * @version 2.x\n */\n\nexport default function(milestoneCount) {\n    var FIT_TIME_DOMAIN_MODE = \"fit\";\n    var FIXED_TIME_DOMAIN_MODE = \"fixed\";\n\n    var margin = {\n\ttop : 20,\n\tright : 40,\n\tbottom : 20,\n\tleft : 250\n    };\n    var selector = 'body';\n    var timeDomainStart = d3.time.day.offset(new Date(),-3);\n    var timeDomainEnd = d3.time.hour.offset(new Date(),+3);\n    var timeDomainMode = FIT_TIME_DOMAIN_MODE;// fixed or fit\n    var taskTypes = [];\n    var taskStatus = [];\n    // var height = document.body.clientHeight - margin.top - margin.bottom-5;\n    var height = milestoneCount * 50; // height of chart is based on # of milestones\n    var width = document.body.clientWidth - margin.right - margin.left-5;\n\n    var tickFormat = \"%H:%M\";\n\n    var keyFunction = function(d) {\n\treturn d.startDate + d.taskName + d.endDate;\n    };\n\n    var rectTransform = function(d) {\n\t     return \"translate(\" + x(d.startDate) + \",\" + y(d.taskName) + \")\";\n    };\n    var rectTransformCompleted = function(d) {\n\t     return \"translate(\" + x(d.startDate) + \",\" + y(d.taskName) + \")\";\n    };\n    var rectTransformRemaining = function(d) {\n\t     return \"translate(\" + (x(d.startDate) + d.percent * (x(d.endDate)-x(d.startDate))) + \",\" + y(d.taskName) + \")\";\n    };\n    var rectTransformSegment = function({task, segment, total, prev}) {\n      const percent = prev / total;\n\t     return \"translate(\" + (x(task.startDate) + percent * (x(task.endDate)-x(task.startDate))) + \",\" + y(task.taskName) + \")\";\n    };\n\n    var x = d3.time.scale().domain([ timeDomainStart, timeDomainEnd ]).range([ 0, width ]).clamp(true);\n\n    var y = d3.scale.ordinal().domain(taskTypes).rangeRoundBands([ 0, height - margin.top - margin.bottom ], .1);\n\n    var xAxis = d3.svg.axis().scale(x).orient(\"bottom\").tickFormat(d3.time.format(tickFormat)).tickSubdivide(true)\n\t    .tickSize(8).tickPadding(8);\n\n    var yAxis = d3.svg.axis().scale(y).orient(\"right\").tickSize(0);\n\n    var initTimeDomain = function(tasks) {\n\tif (timeDomainMode === FIT_TIME_DOMAIN_MODE) {\n\t    if (tasks === undefined || tasks.length < 1) {\n\t\ttimeDomainStart = d3.time.day.offset(new Date(), -3);\n\t\ttimeDomainEnd = d3.time.hour.offset(new Date(), +3);\n\t\treturn;\n\t    }\n\t    tasks.sort(function(a, b) {\n\t\treturn a.endDate - b.endDate;\n\t    });\n\t    timeDomainEnd = tasks[tasks.length - 1].endDate;\n\t    tasks.sort(function(a, b) {\n\t\treturn a.startDate - b.startDate;\n\t    });\n\t    timeDomainStart = tasks[0].startDate;\n\t}\n    };\n\n    var initAxis = function() {\n\tx = d3.time.scale().domain([ timeDomainStart, timeDomainEnd ]).range([ 0, width ]).clamp(true);\n\ty = d3.scale.ordinal().domain(taskTypes).rangeRoundBands([ 0, height - margin.top - margin.bottom ], .1);\n\txAxis = d3.svg.axis().scale(x).orient(\"bottom\").tickFormat(d3.time.format(tickFormat)).tickSubdivide(true)\n\t\t.tickSize(8).tickPadding(8);\n\n\tyAxis = d3.svg.axis().scale(y).orient(\"right\").tickSize(0);\n    };\n\n    function gantt(tasks) {\n\n\tinitTimeDomain(tasks);\n\tinitAxis();\n\n\tvar svg = d3.select(selector)\n\t.append(\"svg\")\n\t.attr(\"class\", \"chart\")\n\t.attr(\"width\", width + margin.left + margin.right)\n\t.attr(\"height\", height + margin.top + margin.bottom)\n\t.append(\"g\")\n        .attr(\"class\", \"gantt-chart\")\n\t.attr(\"width\", width + margin.left + margin.right)\n\t.attr(\"height\", height + margin.top + margin.bottom)\n\t.attr(\"transform\", \"translate(\" + margin.left + \", \" + margin.top + \")\");\n\nvar PHIL =\n      svg.selectAll(\".chart\");\n\n  PHIL.select('line.today').data([new Date()]).enter()\n    .append('line')\n    .attr('class', 'today')\n    .attr('x1', function(d) { return x(d); })\n    .attr('x2', function(d) { return x(d); })\n    .attr('y1', 0)\n    .attr('y2', height)\n    .style({stroke:'rgb(0,0,255)', 'stroke-width':2})\n    ;\n\n   PHIL.selectAll('g.milestone-bars').data(tasks, keyFunction).enter()\n  \t .append(\"g\")\n  \t//  .attr(\"rx\", 5)\n    //        .attr(\"ry\", 5)\n  \t .attr(\"class\", 'milestone-bars')\n  \t//  .attr(\"y\", 0)\n  \t//  .attr(\"transform\", rectTransformCompleted)\n  \t//  .attr(\"height\", function(d) { return y.rangeBand(); })\n  \t//  .attr(\"width\", function(d) {\n  \t//      return d.percent * (x(d.endDate) - x(d.startDate));\n    //    })\n     .selectAll('rect').data((task) => {task.segments.map((segment) => {task, segment})}).enter()\n      .append('rect')\n      .attr('class', 'milestone-segment')\n      .style(({task, segment}) => {fill: segment.color})\n      .attr('transform', rectTransformSegment)\n      .attr(\"height\", function(d) { return y.rangeBand(); })\n      .attr(\"width\", ({task, total, segment}) => {\n        const percent = segment.count / total;\n    \t  return percent * (x(task.endDate) - x(task.startDate));\n    \t});\n\n\n   // PHIL: Copy-pasta to show the 2nd half of the milestone (unfinished)\n //   PHIL.selectAll('rect.milestone-remaining').data(tasks, keyFunction).enter()\n //\n // \t .append(\"rect\")\n // // \t .attr(\"rx\", 5)\n //  //         .attr(\"ry\", 5)\n // \t .attr(\"class\", function(d){\n // \t     return 'milestone-remaining ' + d.status;\n // \t     })\n // \t .attr(\"y\", 0)\n // \t .attr(\"transform\", rectTransformRemaining)\n // \t .attr(\"height\", function(d) { return y.rangeBand(); })\n // \t .attr(\"width\", function(d) {\n // \t     return (1-d.percent) * (x(d.endDate) - x(d.startDate));\n // \t     });\n\n\n\t svg.append(\"g\")\n\t .attr(\"class\", \"x axis\")\n\t .attr(\"transform\", \"translate(0, \" + (height - margin.top - margin.bottom) + \")\")\n\t .transition()\n\t .call(xAxis);\n\n\t svg.append(\"g\").attr(\"class\", \"y axis\").attr('transform', 'translate(-'+margin.left+',0)').transition().call(yAxis);\n\n\t return gantt;\n\n    };\n\n    gantt.redraw = function(tasks) {\n\n\tinitTimeDomain(tasks);\n\tinitAxis();\n\n        var svg = d3.select(\".chart\");\n\n        var ganttChartGroup = svg.select(\".gantt-chart\");\n        var rect = ganttChartGroup.selectAll(\"g.milestone-bars\").data(tasks, keyFunction);\n\n        rect.enter()\n       \t .append(\"g\")\n       \t .attr(\"class\", 'milestone-bars')\n       // \t .attr(\"y\", 0)\n       // \t .attr(\"transform\", rectTransformCompleted)\n       // \t .attr(\"height\", function(d) { return y.rangeBand(); })\n       // \t .attr(\"width\", function(d) {\n       // \t     return d.percent * (x(d.endDate) - x(d.startDate));\n        //     })\n            .selectAll('rect').data((task) => {\n              const total = task.segments.reduce((acc, segment) => { return acc + segment.count; }, 0);\n              let prev = 0;\n              const segments = task.segments.map((segment) => {\n                const ret = {task, segment, prev, total};\n                prev += segment.count;\n                return ret;\n              });\n              return segments;\n            }).enter()\n           .append('rect')\n          //  .attr('class', 'milestone-segment')\n           .style('fill', ({task, segment}) => {return `#${segment.color}`; })\n          // .attr('class', ({task, segment}) => {return {fill: segment.color}; })\n           // .transform()\n           .attr('transform', rectTransformSegment)\n           .attr(\"height\", function(d) { return y.rangeBand(); })\n           .attr(\"width\", ({task, total, segment}) => {\n             const percent = segment.count / total;\n         \t   return percent * (x(task.endDate) - x(task.startDate));\n         \t});\n\n\n  //       rect.enter()\n  //        .append(\"rect\")\n\t//  .attr(\"class\", function(d){\n\t//      return 'milestone-bars ' +d.status;\n\t//      })\n\t//  .transition()\n\t//  .attr(\"y\", 0)\n\t//  .attr(\"transform\", rectTransformCompleted)\n\t//  .attr(\"height\", function(d) { return y.rangeBand(); })\n\t//  .attr(\"width\", function(d) {\n\t//      return d.percent*(x(d.endDate) - x(d.startDate));\n\t//      });\n   //\n  //       rect.transition()\n  //         .attr(\"transform\", rectTransform)\n\t//  .attr(\"height\", function(d) { return y.rangeBand(); })\n\t//  .attr(\"width\", function(d) {\n\t//      return d.percent*(x(d.endDate) - x(d.startDate));\n\t//      });\n\n// \trect.exit().remove();\n//\n//   //PHIL Copy-pasta\n//   var rect = ganttChartGroup.selectAll(\"rect.milestone-remaining\").data(tasks, keyFunction);\n//\n//   rect.enter()\n//    .append(\"rect\")\n//    .attr(\"rx\", 5)\n//    .attr(\"ry\", 5)\n// .attr(\"class\", function(d){\n//  return 'milestone-remaining ' +d.status;\n//  })\n// .transition()\n// .attr(\"y\", 0)\n// .attr(\"transform\", rectTransformRemaining)\n// .attr(\"height\", function(d) { return y.rangeBand(); })\n// .attr(\"width\", function(d) {\n//  return (1-d.percent)*(x(d.endDate) - x(d.startDate));\n//  });\n//\n//   rect.transition()\n//     .attr(\"transform\", rectTransformRemaining)\n// .attr(\"height\", function(d) { return y.rangeBand(); })\n// .attr(\"width\", function(d) {\n//  return (1-d.percent)*(x(d.endDate) - x(d.startDate));\n//  });\n//\n// rect.exit().remove();\n\n\n\tsvg.select(\".x\").transition().call(xAxis);\n\tsvg.select(\".y\").transition().call(yAxis);\n\n\treturn gantt;\n    };\n\n    gantt.margin = function(value) {\n\tif (!arguments.length)\n\t    return margin;\n\tmargin = value;\n\treturn gantt;\n    };\n\n    gantt.timeDomain = function(value) {\n\tif (!arguments.length)\n\t    return [ timeDomainStart, timeDomainEnd ];\n\ttimeDomainStart = +value[0], timeDomainEnd = +value[1];\n\treturn gantt;\n    };\n\n    /**\n     * @param {string}\n     *                vale The value can be \"fit\" - the domain fits the data or\n     *                \"fixed\" - fixed domain.\n     */\n    gantt.timeDomainMode = function(value) {\n\tif (!arguments.length)\n\t    return timeDomainMode;\n        timeDomainMode = value;\n        return gantt;\n\n    };\n\n    gantt.taskTypes = function(value) {\n\tif (!arguments.length)\n\t    return taskTypes;\n\ttaskTypes = value;\n\treturn gantt;\n    };\n\n    gantt.taskStatus = function(value) {\n\tif (!arguments.length)\n\t    return taskStatus;\n\ttaskStatus = value;\n\treturn gantt;\n    };\n\n    gantt.width = function(value) {\n\tif (!arguments.length)\n\t    return width;\n\twidth = +value;\n\treturn gantt;\n    };\n\n    gantt.height = function(value) {\n\tif (!arguments.length)\n\t    return height;\n\theight = +value;\n\treturn gantt;\n    };\n\n    gantt.tickFormat = function(value) {\n\tif (!arguments.length)\n\t    return tickFormat;\n\ttickFormat = value;\n\treturn gantt;\n    };\n\n    gantt.selector = function(value) {\n\tif (!arguments.length)\n\t    return selector;\n\tselector = value;\n\treturn gantt;\n    };\n\n    return gantt;\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/gantt-chart.js\n **/"],"sourceRoot":""}